{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"color\", {\n  enumerable: true,\n  get: function get() {\n    return _color.default;\n  }\n});\nObject.defineProperty(exports, \"renderNode\", {\n  enumerable: true,\n  get: function get() {\n    return _renderNode.default;\n  }\n});\nObject.defineProperty(exports, \"getIconType\", {\n  enumerable: true,\n  get: function get() {\n    return _getIconType.default;\n  }\n});\nObject.defineProperty(exports, \"normalizeText\", {\n  enumerable: true,\n  get: function get() {\n    return _normalizeText.default;\n  }\n});\nObject.defineProperty(exports, \"nodeType\", {\n  enumerable: true,\n  get: function get() {\n    return _nodeType.default;\n  }\n});\nexports.conditionalStyle = exports.isIOS = exports.ScreenHeight = exports.ScreenWidth = void 0;\nvar _reactNative = require(\"react-native\");\nvar _color = _interopRequireDefault(require(\"color\"));\nvar _renderNode = _interopRequireDefault(require(\"./renderNode\"));\nvar _getIconType = _interopRequireDefault(require(\"./getIconType\"));\nvar _normalizeText = _interopRequireDefault(require(\"./normalizeText\"));\nvar _nodeType = _interopRequireDefault(require(\"./nodeType\"));\nvar Screen = _reactNative.Dimensions.get('window');\nvar ScreenWidth = Screen.width;\nexports.ScreenWidth = ScreenWidth;\nvar ScreenHeight = Screen.height;\nexports.ScreenHeight = ScreenHeight;\nvar isIOS = _reactNative.Platform.OS === 'ios';\nexports.isIOS = isIOS;\nvar conditionalStyle = function conditionalStyle(condition, style) {\n  return condition ? style : {};\n};\nexports.conditionalStyle = conditionalStyle;","map":{"version":3,"names":["_reactNative","require","_color","_interopRequireDefault","_renderNode","_getIconType","_normalizeText","_nodeType","Screen","Dimensions","get","ScreenWidth","width","exports","ScreenHeight","height","isIOS","Platform","OS","conditionalStyle","condition","style"],"sources":["/home/ahmed/Music/softtag/Source Code/src/components/helpers/index.js"],"sourcesContent":["import {Platform, Dimensions} from 'react-native';\nimport color from 'color';\nimport renderNode from './renderNode';\nimport getIconType from './getIconType';\nimport normalizeText from './normalizeText';\nimport nodeType from './nodeType';\n\nconst Screen = Dimensions.get('window');\nconst ScreenWidth = Screen.width;\nconst ScreenHeight = Screen.height;\nconst isIOS = Platform.OS === 'ios';\n\nconst conditionalStyle = (condition, style) => (condition ? style : {});\n\nexport {\n  renderNode,\n  getIconType,\n  normalizeText,\n  nodeType,\n  ScreenWidth,\n  ScreenHeight,\n  isIOS,\n  conditionalStyle,\n  color,\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,WAAA,GAAAD,sBAAA,CAAAF,OAAA;AACA,IAAAI,YAAA,GAAAF,sBAAA,CAAAF,OAAA;AACA,IAAAK,cAAA,GAAAH,sBAAA,CAAAF,OAAA;AACA,IAAAM,SAAA,GAAAJ,sBAAA,CAAAF,OAAA;AAEA,IAAMO,MAAM,GAAGC,uBAAU,CAACC,GAAG,CAAC,QAAQ,CAAC;AACvC,IAAMC,WAAW,GAAGH,MAAM,CAACI,KAAK;AAACC,OAAA,CAAAF,WAAA,GAAAA,WAAA;AACjC,IAAMG,YAAY,GAAGN,MAAM,CAACO,MAAM;AAACF,OAAA,CAAAC,YAAA,GAAAA,YAAA;AACnC,IAAME,KAAK,GAAGC,qBAAQ,CAACC,EAAE,KAAK,KAAK;AAACL,OAAA,CAAAG,KAAA,GAAAA,KAAA;AAEpC,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,SAAS,EAAEC,KAAK;EAAA,OAAMD,SAAS,GAAGC,KAAK,GAAG,CAAC,CAAC;AAAA,CAAC;AAACR,OAAA,CAAAM,gBAAA,GAAAA,gBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}