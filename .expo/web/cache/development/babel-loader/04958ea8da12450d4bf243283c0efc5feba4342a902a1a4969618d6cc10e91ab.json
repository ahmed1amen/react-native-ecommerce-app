{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _reactNative = require(\"react-native\");\nvar _SwipeRow = _interopRequireDefault(require(\"./SwipeRow\"));\nvar _excluded = [\"useSectionList\", \"renderListView\"];\nvar _jsxFileName = \"/home/ahmed/Music/softtag/Source Code/node_modules/react-native-swipe-list-view/components/SwipeListView.js\";\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar SwipeListView = function (_PureComponent) {\n  (0, _inherits2.default)(SwipeListView, _PureComponent);\n  var _super = _createSuper(SwipeListView);\n  function SwipeListView(props) {\n    var _this;\n    (0, _classCallCheck2.default)(this, SwipeListView);\n    _this = _super.call(this, props);\n    _this._renderItem = function (rowData) {\n      return _this.renderItem(rowData, _this._rows);\n    };\n    _this._onRef = function (c) {\n      return _this.setRefs(c);\n    };\n    _this._rows = {};\n    _this.openCellKey = null;\n    _this.listViewProps = {};\n    if (_reactNative.Platform.OS === 'ios') {\n      _this.yScrollOffset = 0;\n      _this.layoutHeight = 0;\n      _this.listViewProps = {\n        onLayout: function onLayout(e) {\n          return _this.onLayout(e);\n        },\n        onContentSizeChange: function onContentSizeChange(w, h) {\n          return _this.onContentSizeChange(w, h);\n        }\n      };\n    }\n    _this._onScroll = _this.onScroll.bind((0, _assertThisInitialized2.default)(_this));\n    if (_this.props.onScroll && typeof _this.props.onScroll === 'object') {\n      _this.props.onScroll.__addListener(_this._onScroll);\n      _this._onScroll = _this.props.onScroll;\n    }\n    return _this;\n  }\n  (0, _createClass2.default)(SwipeListView, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.props.refreshing) {\n        this.safeCloseOpenRow();\n      }\n    }\n  }, {\n    key: \"setScrollEnabled\",\n    value: function setScrollEnabled(enable) {\n      if (this.props.scrollEnabled === false) {\n        return;\n      }\n      if (this._listView && this._listView.setNativeProps) {\n        this._listView.setNativeProps({\n          scrollEnabled: enable\n        });\n      } else if (this._listView && this._listView.getScrollResponder) {\n        var scrollResponder = this._listView.getScrollResponder();\n        scrollResponder.setNativeProps && scrollResponder.setNativeProps({\n          scrollEnabled: enable\n        });\n      }\n      this.props.onScrollEnabled && this.props.onScrollEnabled(enable);\n    }\n  }, {\n    key: \"safeCloseOpenRow\",\n    value: function safeCloseOpenRow() {\n      var rowRef = this._rows[this.openCellKey];\n      if (rowRef && rowRef.closeRow) {\n        this._rows[this.openCellKey].closeRow();\n      }\n    }\n  }, {\n    key: \"rowSwipeGestureBegan\",\n    value: function rowSwipeGestureBegan(key) {\n      if (this.props.closeOnRowBeginSwipe && this.openCellKey && this.openCellKey !== key) {\n        this.safeCloseOpenRow();\n      }\n      if (this.props.swipeGestureBegan) {\n        this.props.swipeGestureBegan(key);\n      }\n    }\n  }, {\n    key: \"rowSwipeGestureEnded\",\n    value: function rowSwipeGestureEnded(key, data) {\n      if (this.props.swipeGestureEnded) {\n        this.props.swipeGestureEnded(key, data);\n      }\n    }\n  }, {\n    key: \"onRowOpen\",\n    value: function onRowOpen(key, toValue) {\n      if (this.openCellKey && this.openCellKey !== key && this.props.closeOnRowOpen && !this.props.closeOnRowBeginSwipe) {\n        this.safeCloseOpenRow();\n      }\n      this.openCellKey = key;\n      this.props.onRowOpen && this.props.onRowOpen(key, this._rows, toValue);\n    }\n  }, {\n    key: \"onRowPress\",\n    value: function onRowPress() {\n      if (this.openCellKey) {\n        if (this.props.closeOnRowPress) {\n          this.safeCloseOpenRow();\n          this.openCellKey = null;\n        }\n      }\n    }\n  }, {\n    key: \"onScroll\",\n    value: function onScroll(e) {\n      if (_reactNative.Platform.OS === 'ios') {\n        this.yScrollOffset = e.nativeEvent.contentOffset.y;\n      }\n      if (this.openCellKey) {\n        if (this.props.closeOnScroll) {\n          this.safeCloseOpenRow();\n          this.openCellKey = null;\n        }\n      }\n      typeof this.props.onScroll === 'function' && this.props.onScroll(e);\n    }\n  }, {\n    key: \"onLayout\",\n    value: function onLayout(e) {\n      this.layoutHeight = e.nativeEvent.layout.height;\n      this.props.onLayout && this.props.onLayout(e);\n    }\n  }, {\n    key: \"onContentSizeChange\",\n    value: function onContentSizeChange(w, h) {\n      var height = h - this.layoutHeight;\n      if (this.yScrollOffset >= height && height > 0) {\n        if (this._listView instanceof _reactNative.FlatList) {\n          this._listView && this._listView.scrollToEnd();\n        } else if (this._listView instanceof _reactNative.SectionList) {\n          this._listView.scrollToEnd && this._listView.scrollToEnd();\n        } else if (this._listView instanceof _reactNative.Animated.FlatList) {\n          this._listView.scrollToEnd && this._listView.scrollToEnd();\n        }\n      }\n      this.props.onContentSizeChange && this.props.onContentSizeChange(w, h);\n    }\n  }, {\n    key: \"setRefs\",\n    value: function setRefs(ref) {\n      this._listView = ref;\n      if (typeof this.props.listViewRef === 'function') {\n        this.props.listViewRef && this.props.listViewRef(ref);\n      } else if (typeof this.props.listViewRef === 'object') {\n        if (Object.keys(this.props.listViewRef).includes('current')) {\n          this.props.listViewRef.current = ref;\n        }\n      }\n    }\n  }, {\n    key: \"closeAllOpenRows\",\n    value: function closeAllOpenRows() {\n      var _this2 = this;\n      Object.keys(this._rows).forEach(function (rowKey) {\n        var row = _this2._rows[rowKey];\n        if (row) {\n          var rowTranslateX = Math.round(row.currentTranslateX || 0);\n          if (row.closeRow && rowTranslateX !== 0) {\n            row.closeRow();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"manuallyOpenAllRows\",\n    value: function manuallyOpenAllRows(toValue) {\n      var _this3 = this;\n      Object.keys(this._rows).forEach(function (rowKey) {\n        var row = _this3._rows[rowKey];\n        if (row && row.manuallySwipeRow) {\n          row.manuallySwipeRow(toValue);\n        }\n      });\n    }\n  }, {\n    key: \"renderCell\",\n    value: function renderCell(VisibleComponent, HiddenComponent, key, item, shouldPreviewRow) {\n      var _this4 = this;\n      if (!HiddenComponent) {\n        return _react.default.cloneElement(VisibleComponent, (0, _extends2.default)({}, VisibleComponent.props, {\n          ref: function ref(row) {\n            return _this4._rows[key] = row;\n          },\n          onRowOpen: function onRowOpen(toValue) {\n            return _this4.onRowOpen(key, toValue);\n          },\n          onRowDidOpen: function onRowDidOpen(toValue) {\n            return _this4.props.onRowDidOpen && _this4.props.onRowDidOpen(key, _this4._rows, toValue);\n          },\n          onRowClose: function onRowClose() {\n            return _this4.props.onRowClose && _this4.props.onRowClose(key, _this4._rows);\n          },\n          onRowDidClose: function onRowDidClose() {\n            return _this4.props.onRowDidClose && _this4.props.onRowDidClose(key, _this4._rows);\n          },\n          onRowPress: function onRowPress() {\n            return _this4.onRowPress();\n          },\n          setScrollEnabled: function setScrollEnabled(enable) {\n            return _this4.setScrollEnabled(enable);\n          },\n          swipeGestureBegan: function swipeGestureBegan() {\n            return _this4.rowSwipeGestureBegan(key);\n          },\n          swipeGestureEnded: function swipeGestureEnded(_, data) {\n            return _this4.rowSwipeGestureEnded(key, data);\n          }\n        }));\n      } else {\n        return _react.default.createElement(_SwipeRow.default, {\n          onSwipeValueChange: this.props.onSwipeValueChange ? function (data) {\n            return _this4.props.onSwipeValueChange((0, _extends2.default)({}, data, {\n              key: key\n            }));\n          } : null,\n          ref: function ref(row) {\n            return _this4._rows[key] = row;\n          },\n          swipeGestureBegan: function swipeGestureBegan() {\n            return _this4.rowSwipeGestureBegan(key);\n          },\n          swipeGestureEnded: function swipeGestureEnded(_, data) {\n            return _this4.rowSwipeGestureEnded(key, data);\n          },\n          onRowOpen: function onRowOpen(toValue) {\n            return _this4.onRowOpen(key, toValue);\n          },\n          onRowDidOpen: function onRowDidOpen(toValue) {\n            return _this4.props.onRowDidOpen && _this4.props.onRowDidOpen(key, _this4._rows, toValue);\n          },\n          onRowClose: function onRowClose() {\n            return _this4.props.onRowClose && _this4.props.onRowClose(key, _this4._rows);\n          },\n          onRowDidClose: function onRowDidClose() {\n            return _this4.props.onRowDidClose && _this4.props.onRowDidClose(key, _this4._rows);\n          },\n          onRowPress: function onRowPress() {\n            return _this4.onRowPress(key);\n          },\n          leftActivationValue: item.leftActivationValue || this.props.leftActivationValue,\n          rightActivationValue: item.rightActivationValue || this.props.rightActivationValue,\n          leftActionValue: item.leftActionValue || this.props.leftActionValue || 0,\n          rightActionValue: item.rightActionValue || this.props.rightActionValue || 0,\n          initialLeftActionState: item.initialLeftActionState || this.props.initialLeftActionState,\n          initialRightActionState: item.initialRightActionState || this.props.initialRightActionState,\n          onLeftAction: function onLeftAction() {\n            return item.onLeftAction || _this4.props.onLeftAction && _this4.props.onLeftAction(key, _this4._rows);\n          },\n          onRightAction: function onRightAction() {\n            return item.onRightAction || _this4.props.onRightAction && _this4.props.onRightAction(key, _this4._rows);\n          },\n          onLeftActionStatusChange: this.props.onLeftActionStatusChange ? function (data) {\n            return _this4.props.onLeftActionStatusChange((0, _extends2.default)({}, data, {\n              key: key\n            }));\n          } : null,\n          onRightActionStatusChange: this.props.onRightActionStatusChange ? function (data) {\n            return _this4.props.onRightActionStatusChange((0, _extends2.default)({}, data, {\n              key: key\n            }));\n          } : null,\n          shouldItemUpdate: this.props.shouldItemUpdate ? function (currentItem, newItem) {\n            return _this4.props.shouldItemUpdate(currentItem, newItem);\n          } : null,\n          setScrollEnabled: function setScrollEnabled(enable) {\n            return _this4.setScrollEnabled(enable);\n          },\n          leftOpenValue: item.leftOpenValue || this.props.leftOpenValue,\n          rightOpenValue: item.rightOpenValue || this.props.rightOpenValue,\n          closeOnRowPress: item.closeOnRowPress || this.props.closeOnRowPress,\n          disableLeftSwipe: item.disableLeftSwipe || this.props.disableLeftSwipe,\n          disableRightSwipe: item.disableRightSwipe || this.props.disableRightSwipe,\n          stopLeftSwipe: item.stopLeftSwipe || this.props.stopLeftSwipe,\n          stopRightSwipe: item.stopRightSwipe || this.props.stopRightSwipe,\n          recalculateHiddenLayout: this.props.recalculateHiddenLayout,\n          disableHiddenLayoutCalculation: this.props.disableHiddenLayoutCalculation,\n          style: this.props.swipeRowStyle,\n          preview: shouldPreviewRow,\n          previewDuration: this.props.previewDuration,\n          previewOpenDelay: this.props.previewOpenDelay,\n          previewOpenValue: this.props.previewOpenValue,\n          previewRepeat: this.props.previewRepeat,\n          previewRepeatDelay: this.props.previewRepeatDelay,\n          tension: this.props.tension,\n          restSpeedThreshold: this.props.restSpeedThreshold,\n          restDisplacementThreshold: this.props.restDisplacementThreshold,\n          friction: this.props.friction,\n          directionalDistanceChangeThreshold: this.props.directionalDistanceChangeThreshold,\n          swipeToOpenPercent: this.props.swipeToOpenPercent,\n          swipeToOpenVelocityContribution: this.props.swipeToOpenVelocityContribution,\n          swipeToClosePercent: this.props.swipeToClosePercent,\n          item: item,\n          useNativeDriver: this.props.useNativeDriver,\n          onPreviewEnd: this.props.onPreviewEnd,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }\n        }, HiddenComponent, VisibleComponent);\n      }\n    }\n  }, {\n    key: \"renderRow\",\n    value: function renderRow(rowData, secId, rowId, rowMap) {\n      var key = \"\" + secId + rowId;\n      var Component = this.props.renderRow(rowData, secId, rowId, rowMap);\n      var HiddenComponent = this.props.renderHiddenRow && this.props.renderHiddenRow(rowData, secId, rowId, rowMap);\n      var previewRowId = this.props.dataSource && this.props.dataSource.getRowIDForFlatIndex(this.props.previewRowIndex || 0);\n      var shouldPreviewRow = (this.props.previewFirstRow || this.props.previewRowIndex) && rowId === previewRowId;\n      return this.renderCell(Component, HiddenComponent, key, rowData, shouldPreviewRow);\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(rowData, rowMap) {\n      var Component = this.props.renderItem(rowData, rowMap);\n      var HiddenComponent = this.props.renderHiddenItem && this.props.renderHiddenItem(rowData, rowMap);\n      var item = rowData.item,\n        index = rowData.index;\n      var key = item.key;\n      if (this.props.keyExtractor) {\n        key = this.props.keyExtractor(item, index);\n      }\n      var shouldPreviewRow = typeof key !== 'undefined' && this.props.previewRowKey === key;\n      return this.renderCell(Component, HiddenComponent, key, item, shouldPreviewRow);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        useSectionList = _this$props.useSectionList,\n        renderListView = _this$props.renderListView,\n        props = (0, _objectWithoutProperties2.default)(_this$props, _excluded);\n      if (renderListView) {\n        var useRenderRow = !!this.props.renderRow;\n        return renderListView(props, this.setRefs.bind(this), this.onScroll.bind(this), useRenderRow ? this.renderRow.bind(this, this._rows) : this.renderItem.bind(this));\n      }\n      if (useSectionList) {\n        var _ListComponent = this.props.useAnimatedList ? _reactNative.Animated.SectionList : _reactNative.SectionList;\n        return _react.default.createElement(_ListComponent, (0, _extends2.default)({}, props, this.listViewProps, {\n          ref: this._onRef,\n          onScroll: this._onScroll,\n          renderItem: this._renderItem,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 17\n          }\n        }));\n      }\n      var ListComponent = this.props.useAnimatedList ? _reactNative.Animated.FlatList : _reactNative.FlatList;\n      return _react.default.createElement(ListComponent, (0, _extends2.default)({}, props, this.listViewProps, {\n        ref: this._onRef,\n        onScroll: this._onScroll,\n        renderItem: this._renderItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n  return SwipeListView;\n}(_react.PureComponent);\nSwipeListView.propTypes = {\n  renderListView: _propTypes.default.func,\n  renderItem: _propTypes.default.func,\n  renderHiddenItem: _propTypes.default.func,\n  leftOpenValue: _propTypes.default.number,\n  rightOpenValue: _propTypes.default.number,\n  leftActivationValue: _propTypes.default.number,\n  rightActivationValue: _propTypes.default.number,\n  leftActionValue: _propTypes.default.number,\n  rightActionValue: _propTypes.default.number,\n  initialLeftActionState: _propTypes.default.bool,\n  initialRightActionState: _propTypes.default.bool,\n  stopLeftSwipe: _propTypes.default.number,\n  stopRightSwipe: _propTypes.default.number,\n  closeOnScroll: _propTypes.default.bool,\n  closeOnRowPress: _propTypes.default.bool,\n  closeOnRowBeginSwipe: _propTypes.default.bool,\n  closeOnRowOpen: _propTypes.default.bool,\n  disableLeftSwipe: _propTypes.default.bool,\n  disableRightSwipe: _propTypes.default.bool,\n  recalculateHiddenLayout: _propTypes.default.bool,\n  disableHiddenLayoutCalculation: _propTypes.default.bool,\n  swipeGestureBegan: _propTypes.default.func,\n  swipeGestureEnded: _propTypes.default.func,\n  onRowOpen: _propTypes.default.func,\n  onRowDidOpen: _propTypes.default.func,\n  onRowClose: _propTypes.default.func,\n  onRowDidClose: _propTypes.default.func,\n  onLeftAction: _propTypes.default.func,\n  onRightAction: _propTypes.default.func,\n  onLeftActionStatusChange: _propTypes.default.func,\n  onRightActionStatusChange: _propTypes.default.func,\n  onScrollEnabled: _propTypes.default.func,\n  onScroll: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),\n  swipeRowStyle: _propTypes.default.object,\n  listViewRef: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),\n  previewRowKey: _propTypes.default.string,\n  previewFirstRow: _propTypes.default.bool,\n  previewRowIndex: _propTypes.default.number,\n  previewDuration: _propTypes.default.number,\n  previewRepeat: _propTypes.default.bool,\n  previewRepeatDelay: _propTypes.default.number,\n  previewOpenDelay: _propTypes.default.number,\n  previewOpenValue: _propTypes.default.number,\n  friction: _propTypes.default.number,\n  tension: _propTypes.default.number,\n  restSpeedThreshold: _propTypes.default.number,\n  restDisplacementThreshold: _propTypes.default.number,\n  directionalDistanceChangeThreshold: _propTypes.default.number,\n  swipeToOpenPercent: _propTypes.default.number,\n  swipeToOpenVelocityContribution: _propTypes.default.number,\n  swipeToClosePercent: _propTypes.default.number,\n  shouldItemUpdate: _propTypes.default.func,\n  onSwipeValueChange: _propTypes.default.func,\n  useNativeDriver: _propTypes.default.bool,\n  useAnimatedList: _propTypes.default.bool,\n  keyExtractor: _propTypes.default.func,\n  onPreviewEnd: _propTypes.default.func\n};\nSwipeListView.defaultProps = {\n  leftOpenValue: 0,\n  rightOpenValue: 0,\n  closeOnRowBeginSwipe: false,\n  closeOnScroll: true,\n  closeOnRowPress: true,\n  closeOnRowOpen: true,\n  disableLeftSwipe: false,\n  disableRightSwipe: false,\n  recalculateHiddenLayout: false,\n  disableHiddenLayoutCalculation: false,\n  previewFirstRow: false,\n  directionalDistanceChangeThreshold: 2,\n  swipeToOpenPercent: 50,\n  swipeToOpenVelocityContribution: 0,\n  swipeToClosePercent: 50,\n  useNativeDriver: true,\n  previewRepeat: false,\n  previewRepeatDelay: 1000,\n  useAnimatedList: false\n};\nvar _default = SwipeListView;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_objectWithoutProperties2","_extends2","_classCallCheck2","_createClass2","_assertThisInitialized2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_react","_interopRequireWildcard","_propTypes","_reactNative","_SwipeRow","_excluded","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","valueOf","e","SwipeListView","_PureComponent","_super","props","_this","_renderItem","rowData","renderItem","_rows","_onRef","c","setRefs","openCellKey","listViewProps","Platform","OS","yScrollOffset","layoutHeight","onLayout","onContentSizeChange","w","h","_onScroll","onScroll","bind","__addListener","componentDidUpdate","refreshing","safeCloseOpenRow","setScrollEnabled","enable","scrollEnabled","_listView","setNativeProps","getScrollResponder","scrollResponder","onScrollEnabled","rowRef","closeRow","rowSwipeGestureBegan","closeOnRowBeginSwipe","swipeGestureBegan","rowSwipeGestureEnded","data","swipeGestureEnded","onRowOpen","toValue","closeOnRowOpen","onRowPress","closeOnRowPress","nativeEvent","contentOffset","y","closeOnScroll","layout","height","FlatList","scrollToEnd","SectionList","Animated","ref","listViewRef","keys","includes","current","closeAllOpenRows","_this2","forEach","rowKey","row","rowTranslateX","Math","round","currentTranslateX","manuallyOpenAllRows","_this3","manuallySwipeRow","renderCell","VisibleComponent","HiddenComponent","item","shouldPreviewRow","_this4","React","cloneElement","onRowDidOpen","onRowClose","onRowDidClose","_","createElement","onSwipeValueChange","leftActivationValue","rightActivationValue","leftActionValue","rightActionValue","initialLeftActionState","initialRightActionState","onLeftAction","onRightAction","onLeftActionStatusChange","onRightActionStatusChange","shouldItemUpdate","currentItem","newItem","leftOpenValue","rightOpenValue","disableLeftSwipe","disableRightSwipe","stopLeftSwipe","stopRightSwipe","recalculateHiddenLayout","disableHiddenLayoutCalculation","style","swipeRowStyle","preview","previewDuration","previewOpenDelay","previewOpenValue","previewRepeat","previewRepeatDelay","tension","restSpeedThreshold","restDisplacementThreshold","friction","directionalDistanceChangeThreshold","swipeToOpenPercent","swipeToOpenVelocityContribution","swipeToClosePercent","useNativeDriver","onPreviewEnd","__self","__source","fileName","lineNumber","columnNumber","renderRow","secId","rowId","rowMap","Component","renderHiddenRow","previewRowId","dataSource","getRowIDForFlatIndex","previewRowIndex","previewFirstRow","renderHiddenItem","index","keyExtractor","previewRowKey","render","_this$props","useSectionList","renderListView","useRenderRow","ListComponent","useAnimatedList","_ListComponent","PureComponent","propTypes","PropTypes","func","number","bool","oneOfType","object","string","defaultProps","_default"],"sources":["/home/ahmed/Music/softtag/Source Code/node_modules/react-native-swipe-list-view/components/SwipeListView.js"],"sourcesContent":["'use strict';\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated, FlatList, Platform, SectionList } from 'react-native';\n\nimport SwipeRow from './SwipeRow';\n\n/**\n * ListView that renders SwipeRows.\n */\nclass SwipeListView extends PureComponent {\n    constructor(props) {\n        super(props);\n        this._rows = {};\n        this.openCellKey = null;\n        this.listViewProps = {};\n        if (Platform.OS === 'ios') {\n            // Keep track of scroll offset and layout changes on iOS to be able to handle\n            // https://github.com/jemise111/react-native-swipe-list-view/issues/109\n            this.yScrollOffset = 0;\n            this.layoutHeight = 0;\n            this.listViewProps = {\n                onLayout: e => this.onLayout(e),\n                onContentSizeChange: (w, h) => this.onContentSizeChange(w, h),\n            };\n        }\n        this._onScroll = this.onScroll.bind(this);\n        if (this.props.onScroll && typeof this.props.onScroll === 'object') {\n            // Animated.event\n            this.props.onScroll.__addListener(this._onScroll);\n            this._onScroll = this.props.onScroll;\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.props.refreshing) {\n            this.safeCloseOpenRow();\n        }\n    }\n\n    setScrollEnabled(enable) {\n        if (this.props.scrollEnabled === false) {\n            return;\n        }\n        // Due to multiple issues reported across different versions of RN\n        // We do this in the safest way possible...\n        if (this._listView && this._listView.setNativeProps) {\n            this._listView.setNativeProps({ scrollEnabled: enable });\n        } else if (this._listView && this._listView.getScrollResponder) {\n            const scrollResponder = this._listView.getScrollResponder();\n            scrollResponder.setNativeProps &&\n                scrollResponder.setNativeProps({ scrollEnabled: enable });\n        }\n        this.props.onScrollEnabled && this.props.onScrollEnabled(enable);\n    }\n\n    safeCloseOpenRow() {\n        const rowRef = this._rows[this.openCellKey];\n        if (rowRef && rowRef.closeRow) {\n            this._rows[this.openCellKey].closeRow();\n        }\n    }\n\n    rowSwipeGestureBegan(key) {\n        if (\n            this.props.closeOnRowBeginSwipe &&\n            this.openCellKey &&\n            this.openCellKey !== key\n        ) {\n            this.safeCloseOpenRow();\n        }\n\n        if (this.props.swipeGestureBegan) {\n            this.props.swipeGestureBegan(key);\n        }\n    }\n\n    rowSwipeGestureEnded(key, data) {\n        if (this.props.swipeGestureEnded) {\n            this.props.swipeGestureEnded(key, data);\n        }\n    }\n\n    onRowOpen(key, toValue) {\n        if (\n            this.openCellKey &&\n            this.openCellKey !== key &&\n            this.props.closeOnRowOpen &&\n            !this.props.closeOnRowBeginSwipe\n        ) {\n            this.safeCloseOpenRow();\n        }\n        this.openCellKey = key;\n        this.props.onRowOpen && this.props.onRowOpen(key, this._rows, toValue);\n    }\n\n    onRowPress() {\n        if (this.openCellKey) {\n            if (this.props.closeOnRowPress) {\n                this.safeCloseOpenRow();\n                this.openCellKey = null;\n            }\n        }\n    }\n\n    onScroll(e) {\n        if (Platform.OS === 'ios') {\n            this.yScrollOffset = e.nativeEvent.contentOffset.y;\n        }\n        if (this.openCellKey) {\n            if (this.props.closeOnScroll) {\n                this.safeCloseOpenRow();\n                this.openCellKey = null;\n            }\n        }\n        typeof this.props.onScroll === 'function' && this.props.onScroll(e);\n    }\n\n    onLayout(e) {\n        this.layoutHeight = e.nativeEvent.layout.height;\n        this.props.onLayout && this.props.onLayout(e);\n    }\n\n    // When deleting rows on iOS, the list may end up being over-scrolled,\n    // which will prevent swiping any of the remaining rows. This triggers a scrollToEnd\n    // when that happens, which will make sure the list is kept in bounds.\n    // See: https://github.com/jemise111/react-native-swipe-list-view/issues/109\n    onContentSizeChange(w, h) {\n        const height = h - this.layoutHeight;\n        if (this.yScrollOffset >= height && height > 0) {\n            if (this._listView instanceof FlatList) {\n                this._listView && this._listView.scrollToEnd();\n            } else if (this._listView instanceof SectionList) {\n                this._listView.scrollToEnd && this._listView.scrollToEnd();\n            } else if (this._listView instanceof Animated.FlatList) {\n                this._listView.scrollToEnd && this._listView.scrollToEnd();\n            }\n        }\n        this.props.onContentSizeChange && this.props.onContentSizeChange(w, h);\n    }\n\n    setRefs(ref) {\n        this._listView = ref;\n        if (typeof this.props.listViewRef === 'function') {\n            this.props.listViewRef && this.props.listViewRef(ref);\n        } else if (typeof this.props.listViewRef === 'object') {\n            if (Object.keys(this.props.listViewRef).includes('current')) {\n                this.props.listViewRef.current = ref;\n            }\n        }\n    }\n\n    closeAllOpenRows() {\n        Object.keys(this._rows).forEach(rowKey => {\n            const row = this._rows[rowKey];\n            if (row) {\n                const rowTranslateX = Math.round(row.currentTranslateX || 0);\n                if (row.closeRow && rowTranslateX !== 0) {\n                    row.closeRow();\n                }\n            }\n        });\n    }\n\n    manuallyOpenAllRows(toValue) {\n        Object.keys(this._rows).forEach(rowKey => {\n            const row = this._rows[rowKey];\n            if (row && row.manuallySwipeRow) {\n                row.manuallySwipeRow(toValue);\n            }\n        });\n    }\n\n    renderCell(VisibleComponent, HiddenComponent, key, item, shouldPreviewRow) {\n        if (!HiddenComponent) {\n            return React.cloneElement(VisibleComponent, {\n                ...VisibleComponent.props,\n                ref: row => (this._rows[key] = row),\n                onRowOpen: toValue => this.onRowOpen(key, toValue),\n                onRowDidOpen: toValue =>\n                    this.props.onRowDidOpen &&\n                    this.props.onRowDidOpen(key, this._rows, toValue),\n                onRowClose: () =>\n                    this.props.onRowClose &&\n                    this.props.onRowClose(key, this._rows),\n                onRowDidClose: () =>\n                    this.props.onRowDidClose &&\n                    this.props.onRowDidClose(key, this._rows),\n                onRowPress: () => this.onRowPress(),\n                setScrollEnabled: enable => this.setScrollEnabled(enable),\n                swipeGestureBegan: () => this.rowSwipeGestureBegan(key),\n                swipeGestureEnded: (_, data) =>\n                    this.rowSwipeGestureEnded(key, data),\n            });\n        } else {\n            return (\n                <SwipeRow\n                    onSwipeValueChange={\n                        this.props.onSwipeValueChange\n                            ? data =>\n                                  this.props.onSwipeValueChange({\n                                      ...data,\n                                      key,\n                                  })\n                            : null\n                    }\n                    ref={row => (this._rows[key] = row)}\n                    swipeGestureBegan={() => this.rowSwipeGestureBegan(key)}\n                    swipeGestureEnded={(_, data) =>\n                        this.rowSwipeGestureEnded(key, data)\n                    }\n                    onRowOpen={toValue => this.onRowOpen(key, toValue)}\n                    onRowDidOpen={toValue =>\n                        this.props.onRowDidOpen &&\n                        this.props.onRowDidOpen(key, this._rows, toValue)\n                    }\n                    onRowClose={() =>\n                        this.props.onRowClose &&\n                        this.props.onRowClose(key, this._rows)\n                    }\n                    onRowDidClose={() =>\n                        this.props.onRowDidClose &&\n                        this.props.onRowDidClose(key, this._rows)\n                    }\n                    onRowPress={() => this.onRowPress(key)}\n                    leftActivationValue={\n                        item.leftActivationValue ||\n                        this.props.leftActivationValue\n                    }\n                    rightActivationValue={\n                        item.rightActivationValue ||\n                        this.props.rightActivationValue\n                    }\n                    leftActionValue={\n                        item.leftActionValue || this.props.leftActionValue || 0\n                    }\n                    rightActionValue={\n                        item.rightActionValue ||\n                        this.props.rightActionValue ||\n                        0\n                    }\n                    initialLeftActionState={\n                        item.initialLeftActionState ||\n                        this.props.initialLeftActionState\n                    }\n                    initialRightActionState={\n                        item.initialRightActionState ||\n                        this.props.initialRightActionState\n                    }\n                    onLeftAction={() =>\n                        item.onLeftAction ||\n                        (this.props.onLeftAction &&\n                            this.props.onLeftAction(key, this._rows))\n                    }\n                    onRightAction={() =>\n                        item.onRightAction ||\n                        (this.props.onRightAction &&\n                            this.props.onRightAction(key, this._rows))\n                    }\n                    onLeftActionStatusChange={\n                        this.props.onLeftActionStatusChange\n                            ? data =>\n                                  this.props.onLeftActionStatusChange({\n                                      ...data,\n                                      key,\n                                  })\n                            : null\n                    }\n                    onRightActionStatusChange={\n                        this.props.onRightActionStatusChange\n                            ? data =>\n                                  this.props.onRightActionStatusChange({\n                                      ...data,\n                                      key,\n                                  })\n                            : null\n                    }\n                    shouldItemUpdate={\n                        this.props.shouldItemUpdate\n                            ? (currentItem, newItem) =>\n                                  this.props.shouldItemUpdate(\n                                      currentItem,\n                                      newItem\n                                  )\n                            : null\n                    }\n                    setScrollEnabled={enable => this.setScrollEnabled(enable)}\n                    leftOpenValue={\n                        item.leftOpenValue || this.props.leftOpenValue\n                    }\n                    rightOpenValue={\n                        item.rightOpenValue || this.props.rightOpenValue\n                    }\n                    closeOnRowPress={\n                        item.closeOnRowPress || this.props.closeOnRowPress\n                    }\n                    disableLeftSwipe={\n                        item.disableLeftSwipe || this.props.disableLeftSwipe\n                    }\n                    disableRightSwipe={\n                        item.disableRightSwipe || this.props.disableRightSwipe\n                    }\n                    stopLeftSwipe={\n                        item.stopLeftSwipe || this.props.stopLeftSwipe\n                    }\n                    stopRightSwipe={\n                        item.stopRightSwipe || this.props.stopRightSwipe\n                    }\n                    recalculateHiddenLayout={this.props.recalculateHiddenLayout}\n                    disableHiddenLayoutCalculation={\n                        this.props.disableHiddenLayoutCalculation\n                    }\n                    style={this.props.swipeRowStyle}\n                    preview={shouldPreviewRow}\n                    previewDuration={this.props.previewDuration}\n                    previewOpenDelay={this.props.previewOpenDelay}\n                    previewOpenValue={this.props.previewOpenValue}\n                    previewRepeat={this.props.previewRepeat}\n                    previewRepeatDelay={this.props.previewRepeatDelay}\n                    tension={this.props.tension}\n                    restSpeedThreshold={this.props.restSpeedThreshold}\n                    restDisplacementThreshold={\n                        this.props.restDisplacementThreshold\n                    }\n                    friction={this.props.friction}\n                    directionalDistanceChangeThreshold={\n                        this.props.directionalDistanceChangeThreshold\n                    }\n                    swipeToOpenPercent={this.props.swipeToOpenPercent}\n                    swipeToOpenVelocityContribution={\n                        this.props.swipeToOpenVelocityContribution\n                    }\n                    swipeToClosePercent={this.props.swipeToClosePercent}\n                    item={item} // used for should item update comparisons\n                    useNativeDriver={this.props.useNativeDriver}\n                    onPreviewEnd={this.props.onPreviewEnd}\n                >\n                    {HiddenComponent}\n                    {VisibleComponent}\n                </SwipeRow>\n            );\n        }\n    }\n\n    // In most use cases this is no longer used. Only in the case we are passed renderListView={true}\n    // there may be legacy code that passes a this.props.renderRow func so we keep this for legacy purposes\n    renderRow(rowData, secId, rowId, rowMap) {\n        const key = `${secId}${rowId}`;\n        const Component = this.props.renderRow(rowData, secId, rowId, rowMap);\n        const HiddenComponent =\n            this.props.renderHiddenRow &&\n            this.props.renderHiddenRow(rowData, secId, rowId, rowMap);\n        const previewRowId =\n            this.props.dataSource &&\n            this.props.dataSource.getRowIDForFlatIndex(\n                this.props.previewRowIndex || 0\n            );\n        const shouldPreviewRow =\n            (this.props.previewFirstRow || this.props.previewRowIndex) &&\n            rowId === previewRowId;\n\n        return this.renderCell(\n            Component,\n            HiddenComponent,\n            key,\n            rowData,\n            shouldPreviewRow\n        );\n    }\n\n    renderItem(rowData, rowMap) {\n        const Component = this.props.renderItem(rowData, rowMap);\n        const HiddenComponent =\n            this.props.renderHiddenItem &&\n            this.props.renderHiddenItem(rowData, rowMap);\n        const { item, index } = rowData;\n        let { key } = item;\n        if (this.props.keyExtractor) {\n            key = this.props.keyExtractor(item, index);\n        }\n\n        const shouldPreviewRow =\n            typeof key !== 'undefined' && this.props.previewRowKey === key;\n\n        return this.renderCell(\n            Component,\n            HiddenComponent,\n            key,\n            item,\n            shouldPreviewRow\n        );\n    }\n\n    _renderItem = rowData => this.renderItem(rowData, this._rows);\n\n    _onRef = c => this.setRefs(c);\n\n    render() {\n        const { useSectionList, renderListView, ...props } = this.props;\n\n        if (renderListView) {\n            // Ideally renderRow should be deprecated. We do this check for\n            // legacy purposes to not break certain renderListView cases\n            const useRenderRow = !!this.props.renderRow;\n            return renderListView(\n                props,\n                this.setRefs.bind(this),\n                this.onScroll.bind(this),\n                useRenderRow\n                    ? this.renderRow.bind(this, this._rows)\n                    : this.renderItem.bind(this)\n            );\n        }\n\n        if (useSectionList) {\n            const ListComponent = this.props.useAnimatedList\n                ? Animated.SectionList\n                : SectionList;\n            return (\n                <ListComponent\n                    {...props}\n                    {...this.listViewProps}\n                    ref={this._onRef}\n                    onScroll={this._onScroll}\n                    renderItem={this._renderItem}\n                />\n            );\n        }\n        const ListComponent = this.props.useAnimatedList\n            ? Animated.FlatList\n            : FlatList;\n        return (\n            <ListComponent\n                {...props}\n                {...this.listViewProps}\n                ref={this._onRef}\n                onScroll={this._onScroll}\n                renderItem={this._renderItem}\n            />\n        );\n    }\n}\n\nSwipeListView.propTypes = {\n    /**\n     * To render a custom ListView component, if you don't want to use ReactNative one.\n     * Note: This will call `renderRow`, not `renderItem`\n     */\n    renderListView: PropTypes.func,\n    /**\n     * How to render a row in a FlatList. Should return a valid React Element.\n     */\n    renderItem: PropTypes.func,\n    /**\n     * How to render a hidden row in a FlatList (renders behind the row). Should return a valid React Element.\n     * This is required unless renderItem is passing a SwipeRow.\n     */\n    renderHiddenItem: PropTypes.func,\n    /**\n     * TranslateX value for opening the row to the left (positive number)\n     */\n    leftOpenValue: PropTypes.number,\n    /**\n     * TranslateX value for opening the row to the right (negative number)\n     */\n    rightOpenValue: PropTypes.number,\n    /**\n     * TranslateX value for firing onLeftActionStatusChange (positive number)\n     */\n    leftActivationValue: PropTypes.number,\n    /**\n     * TranslateX value for firing onRightActionStatusChange (negative number)\n     */\n    rightActivationValue: PropTypes.number,\n    /**\n     * TranslateX value for left action to which the row will be shifted after gesture release\n     */\n    leftActionValue: PropTypes.number,\n    /**\n     * TranslateX value for right action to which the row will be shifted after gesture release\n     */\n    rightActionValue: PropTypes.number,\n    /**\n     * Initial value for left action state (default is false)\n     */\n    initialLeftActionState: PropTypes.bool,\n    /**\n     * Initial value for right action state (default is false)\n     */\n    initialRightActionState: PropTypes.bool,\n    /**\n     * TranslateX value for stop the row to the left (positive number)\n     */\n    stopLeftSwipe: PropTypes.number,\n    /**\n     * TranslateX value for stop the row to the right (negative number)\n     */\n    stopRightSwipe: PropTypes.number,\n    /**\n     * Should open rows be closed when the listView begins scrolling\n     */\n    closeOnScroll: PropTypes.bool,\n    /**\n     * Should open rows be closed when a row is pressed\n     */\n    closeOnRowPress: PropTypes.bool,\n    /**\n     * Should open rows be closed when a row begins to swipe open\n     */\n    closeOnRowBeginSwipe: PropTypes.bool,\n    /**\n     * Should open rows be closed when another row is opened\n     */\n    closeOnRowOpen: PropTypes.bool,\n    /**\n     * Disable ability to swipe rows left\n     */\n    disableLeftSwipe: PropTypes.bool,\n    /**\n     * Disable ability to swipe rows right\n     */\n    disableRightSwipe: PropTypes.bool,\n    /**\n     * Enable hidden row onLayout calculations to run always.\n     *\n     * By default, hidden row size calculations are only done on the first onLayout event\n     * for performance reasons.\n     * Passing ```true``` here will cause calculations to run on every onLayout event.\n     * You may want to do this if your rows' sizes can change.\n     * One case is a SwipeListView with rows of different heights and an options to delete rows.\n     */\n    recalculateHiddenLayout: PropTypes.bool,\n    /**\n     * Disable hidden row onLayout calculations\n     *\n     * Instead, {width: '100%', height: '100%'} will be used.\n     * Improves performance by avoiding component updates, while still working with orientation changes.\n     */\n    disableHiddenLayoutCalculation: PropTypes.bool,\n    /**\n     * Called when a swipe row is animating swipe\n     */\n    swipeGestureBegan: PropTypes.func,\n    /**\n     * Called when user has ended their swipe gesture\n     */\n    swipeGestureEnded: PropTypes.func,\n    /**\n     * Called when a swipe row is animating open\n     */\n    onRowOpen: PropTypes.func,\n    /**\n     * Called when a swipe row has animated open\n     */\n    onRowDidOpen: PropTypes.func,\n    /**\n     * Called when a swipe row is animating closed\n     */\n    onRowClose: PropTypes.func,\n    /**\n     * Called when a swipe row has animated closed\n     */\n    onRowDidClose: PropTypes.func,\n    /**\n     * Called when row shifted to leftActivationValue\n     */\n    onLeftAction: PropTypes.func,\n    /**\n     * Called when row shifted to rightActivationValue\n     */\n    onRightAction: PropTypes.func,\n    /**\n     * Called once when swipe value crosses the leftActivationValue\n     */\n    onLeftActionStatusChange: PropTypes.func,\n    /**\n     * Called once when swipe value crosses the rightActivationValue\n     */\n    onRightActionStatusChange: PropTypes.func,\n    /**\n     * Called when scrolling on the SwipeListView has been enabled/disabled\n     */\n    onScrollEnabled: PropTypes.func,\n    /**\n     * Called when a scroll event is emitted\n     */\n    onScroll: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    /**\n     * Styles for the parent wrapper View of the SwipeRow\n     */\n    swipeRowStyle: PropTypes.object,\n    /**\n     * Called when the FlatList ref is set and passes a ref to the FlatList\n     * e.g. listViewRef={ ref => this._swipeListViewRef = ref }\n     */\n    listViewRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    /**\n     * Should the row with this key do a slide out preview to show that the list is swipeable\n     */\n    previewRowKey: PropTypes.string,\n    /**\n     * [DEPRECATED] Should the first SwipeRow do a slide out preview to show that the list is swipeable\n     */\n    previewFirstRow: PropTypes.bool,\n    /**\n     * [DEPRECATED] Should the specified rowId do a slide out preview to show that the list is swipeable\n     * Note: This ID will be passed to this function to get the correct row index\n     * https://facebook.github.io/react-native/docs/listviewdatasource.html#getrowidforflatindex\n     */\n    previewRowIndex: PropTypes.number,\n    /**\n     * Duration of the slide out preview animation (milliseconds)\n     */\n    previewDuration: PropTypes.number,\n    /**\n     * Should the animation repeat until false is provided\n     */\n    previewRepeat: PropTypes.bool,\n    /**\n     * Time between each full completed animation in milliseconds\n     * Default: 1000 (1 second)\n     */\n    previewRepeatDelay: PropTypes.number,\n    /**\n     * Delay of the slide out preview animation (milliseconds) // default 700ms\n     */\n    previewOpenDelay: PropTypes.number,\n    /**\n     * TranslateX value for the slide out preview animation\n     * Default: 0.5 * props.rightOpenValue\n     */\n    previewOpenValue: PropTypes.number,\n    /**\n     * Friction for the open / close animation\n     */\n    friction: PropTypes.number,\n    /**\n     * Tension for the open / close animation\n     */\n    tension: PropTypes.number,\n    /**\n     * RestSpeedThreshold for the open / close animation\n     */\n    restSpeedThreshold: PropTypes.number,\n    /**\n     * RestDisplacementThreshold for the open / close animation\n     */\n    restDisplacementThreshold: PropTypes.number,\n    /**\n     * The dx value used to detect when a user has begun a swipe gesture\n     */\n    directionalDistanceChangeThreshold: PropTypes.number,\n    /**\n     * What % of the left/right openValue does the user need to swipe\n     * past to trigger the row opening.\n     */\n    swipeToOpenPercent: PropTypes.number,\n    /**\n     * Describes how much the ending velocity of the gesture affects whether the swipe will result in the item being closed or open.\n     * A velocity factor of 0 means that the velocity will have no bearing on whether the swipe settles on a closed or open position\n     * and it'll just take into consideration the swipeToOpenPercent.\n     */\n    swipeToOpenVelocityContribution: PropTypes.number,\n    /**\n     * What % of the left/right openValue does the user need to swipe\n     * past to trigger the row closing.\n     */\n    swipeToClosePercent: PropTypes.number,\n    /**\n     * callback to determine whether component should update (currentItem, newItem)\n     */\n    shouldItemUpdate: PropTypes.func,\n    /**\n     * Callback invoked any time the swipe value of a SwipeRow is changed\n     */\n    onSwipeValueChange: PropTypes.func,\n    /**\n     * useNativeDriver: true for all animations where possible\n     */\n    useNativeDriver: PropTypes.bool,\n    /**\n     * Use Animated.Flatlist or Animated.Sectionlist\n     */\n    useAnimatedList: PropTypes.bool,\n    /**\n     * keyExtractor: function to generate key value for each row in the list\n     */\n    keyExtractor: PropTypes.func,\n    /**\n     * Callback that runs after row swipe preview is finished\n     */\n    onPreviewEnd: PropTypes.func,\n};\n\nSwipeListView.defaultProps = {\n    leftOpenValue: 0,\n    rightOpenValue: 0,\n    closeOnRowBeginSwipe: false,\n    closeOnScroll: true,\n    closeOnRowPress: true,\n    closeOnRowOpen: true,\n    disableLeftSwipe: false,\n    disableRightSwipe: false,\n    recalculateHiddenLayout: false,\n    disableHiddenLayoutCalculation: false,\n    previewFirstRow: false,\n    directionalDistanceChangeThreshold: 2,\n    swipeToOpenPercent: 50,\n    swipeToOpenVelocityContribution: 0,\n    swipeToClosePercent: 50,\n    useNativeDriver: true,\n    previewRepeat: false,\n    previewRepeatDelay: 1000,\n    useAnimatedList: false,\n};\n\nexport default SwipeListView;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}