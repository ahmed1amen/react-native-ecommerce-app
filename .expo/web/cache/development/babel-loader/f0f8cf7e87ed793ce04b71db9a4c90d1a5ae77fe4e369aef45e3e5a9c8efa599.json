{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _reactNative = require(\"react-native\");\nvar OSNotification = (0, _createClass2.default)(function OSNotification(receivedEvent) {\n  (0, _classCallCheck2.default)(this, OSNotification);\n  this.body = receivedEvent.body;\n  this.sound = receivedEvent.sound;\n  this.title = receivedEvent.title;\n  this.launchURL = receivedEvent.launchURL;\n  this.rawPayload = receivedEvent.rawPayload;\n  this.actionButtons = receivedEvent.actionButtons;\n  this.additionalData = receivedEvent.additionalData;\n  this.notificationId = receivedEvent.notificationId;\n  if (_reactNative.Platform.OS === 'android') {\n    this.groupKey = receivedEvent.groupKey;\n    this.ledColor = receivedEvent.ledColor;\n    this.priority = receivedEvent.priority;\n    this.smallIcon = receivedEvent.smallIcon;\n    this.largeIcon = receivedEvent.largeIcon;\n    this.bigPicture = receivedEvent.bigPicture;\n    this.collapseId = receivedEvent.collapseId;\n    this.groupMessage = receivedEvent.groupMessage;\n    this.fromProjectNumber = receivedEvent.fromProjectNumber;\n    this.smallIconAccentColor = receivedEvent.smallIconAccentColor;\n    this.lockScreenVisibility = receivedEvent.lockScreenVisibililty;\n    this.androidNotificationId = receivedEvent.androidNotificationId;\n  }\n  if (_reactNative.Platform.OS === 'ios') {\n    this.badge = receivedEvent.badge;\n    this.category = receivedEvent.category;\n    this.threadId = receivedEvent.threadId;\n    this.subtitle = receivedEvent.subtitle;\n    this.templateId = receivedEvent.templateId;\n    this.attachments = receivedEvent.attachments;\n    this.templateName = receivedEvent.templateName;\n    this.mutableContent = receivedEvent.mutableContent;\n    this.badgeIncrement = receivedEvent.badgeIncrement;\n    this.contentAvailable = receivedEvent.contentAvailable;\n    this.relevanceScore = receivedEvent.relevanceScore;\n    this.interruptionLevel = receivedEvent.interruptionLevel;\n  }\n});\nexports.default = OSNotification;","map":{"version":3,"names":["_reactNative","require","OSNotification","_createClass2","default","receivedEvent","_classCallCheck2","body","sound","title","launchURL","rawPayload","actionButtons","additionalData","notificationId","Platform","OS","groupKey","ledColor","priority","smallIcon","largeIcon","bigPicture","collapseId","groupMessage","fromProjectNumber","smallIconAccentColor","lockScreenVisibility","lockScreenVisibililty","androidNotificationId","badge","category","threadId","subtitle","templateId","attachments","templateName","mutableContent","badgeIncrement","contentAvailable","relevanceScore","interruptionLevel","exports"],"sources":["/home/ahmed/Music/softtag/Source Code/node_modules/react-native-onesignal/src/OSNotification.js"],"sourcesContent":["import { Platform } from 'react-native';\n\nexport default class OSNotification {\n    constructor(receivedEvent) {\n        this.body = receivedEvent.body;\n        this.sound = receivedEvent.sound;\n        this.title = receivedEvent.title;\n        this.launchURL = receivedEvent.launchURL;\n        this.rawPayload = receivedEvent.rawPayload;\n        this.actionButtons = receivedEvent.actionButtons;\n        this.additionalData = receivedEvent.additionalData;\n        this.notificationId = receivedEvent.notificationId;\n\n        if (Platform.OS === 'android') {\n            this.groupKey = receivedEvent.groupKey;\n            this.ledColor = receivedEvent.ledColor;\n            this.priority = receivedEvent.priority;\n            this.smallIcon = receivedEvent.smallIcon;\n            this.largeIcon = receivedEvent.largeIcon;\n            this.bigPicture = receivedEvent.bigPicture;\n            this.collapseId = receivedEvent.collapseId;\n            this.groupMessage = receivedEvent.groupMessage;\n            this.fromProjectNumber = receivedEvent.fromProjectNumber;\n            this.smallIconAccentColor = receivedEvent.smallIconAccentColor;\n            this.lockScreenVisibility = receivedEvent.lockScreenVisibililty;\n            this.androidNotificationId = receivedEvent.androidNotificationId;\n        }\n\n        if (Platform.OS === 'ios') {\n            this.badge = receivedEvent.badge;\n            this.category = receivedEvent.category;\n            this.threadId = receivedEvent.threadId;\n            this.subtitle = receivedEvent.subtitle;\n            this.templateId = receivedEvent.templateId;\n            this.attachments = receivedEvent.attachments;\n            this.templateName = receivedEvent.templateName;\n            this.mutableContent = receivedEvent.mutableContent;\n            this.badgeIncrement = receivedEvent.badgeIncrement;\n            this.contentAvailable = receivedEvent.contentAvailable;\n            this.relevanceScore = receivedEvent.relevanceScore;\n            this.interruptionLevel = receivedEvent.interruptionLevel;\n        }\n    }\n}\n"],"mappings":";;;;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AAAwC,IAEnBC,cAAc,OAAAC,aAAA,CAAAC,OAAA,EAC/B,SAAAF,eAAYG,aAAa,EAAE;EAAA,IAAAC,gBAAA,CAAAF,OAAA,QAAAF,cAAA;EACvB,IAAI,CAACK,IAAI,GAAGF,aAAa,CAACE,IAAI;EAC9B,IAAI,CAACC,KAAK,GAAGH,aAAa,CAACG,KAAK;EAChC,IAAI,CAACC,KAAK,GAAGJ,aAAa,CAACI,KAAK;EAChC,IAAI,CAACC,SAAS,GAAGL,aAAa,CAACK,SAAS;EACxC,IAAI,CAACC,UAAU,GAAGN,aAAa,CAACM,UAAU;EAC1C,IAAI,CAACC,aAAa,GAAGP,aAAa,CAACO,aAAa;EAChD,IAAI,CAACC,cAAc,GAAGR,aAAa,CAACQ,cAAc;EAClD,IAAI,CAACC,cAAc,GAAGT,aAAa,CAACS,cAAc;EAElD,IAAIC,qBAAQ,CAACC,EAAE,KAAK,SAAS,EAAE;IAC3B,IAAI,CAACC,QAAQ,GAAGZ,aAAa,CAACY,QAAQ;IACtC,IAAI,CAACC,QAAQ,GAAGb,aAAa,CAACa,QAAQ;IACtC,IAAI,CAACC,QAAQ,GAAGd,aAAa,CAACc,QAAQ;IACtC,IAAI,CAACC,SAAS,GAAGf,aAAa,CAACe,SAAS;IACxC,IAAI,CAACC,SAAS,GAAGhB,aAAa,CAACgB,SAAS;IACxC,IAAI,CAACC,UAAU,GAAGjB,aAAa,CAACiB,UAAU;IAC1C,IAAI,CAACC,UAAU,GAAGlB,aAAa,CAACkB,UAAU;IAC1C,IAAI,CAACC,YAAY,GAAGnB,aAAa,CAACmB,YAAY;IAC9C,IAAI,CAACC,iBAAiB,GAAGpB,aAAa,CAACoB,iBAAiB;IACxD,IAAI,CAACC,oBAAoB,GAAGrB,aAAa,CAACqB,oBAAoB;IAC9D,IAAI,CAACC,oBAAoB,GAAGtB,aAAa,CAACuB,qBAAqB;IAC/D,IAAI,CAACC,qBAAqB,GAAGxB,aAAa,CAACwB,qBAAqB;EACpE;EAEA,IAAId,qBAAQ,CAACC,EAAE,KAAK,KAAK,EAAE;IACvB,IAAI,CAACc,KAAK,GAAGzB,aAAa,CAACyB,KAAK;IAChC,IAAI,CAACC,QAAQ,GAAG1B,aAAa,CAAC0B,QAAQ;IACtC,IAAI,CAACC,QAAQ,GAAG3B,aAAa,CAAC2B,QAAQ;IACtC,IAAI,CAACC,QAAQ,GAAG5B,aAAa,CAAC4B,QAAQ;IACtC,IAAI,CAACC,UAAU,GAAG7B,aAAa,CAAC6B,UAAU;IAC1C,IAAI,CAACC,WAAW,GAAG9B,aAAa,CAAC8B,WAAW;IAC5C,IAAI,CAACC,YAAY,GAAG/B,aAAa,CAAC+B,YAAY;IAC9C,IAAI,CAACC,cAAc,GAAGhC,aAAa,CAACgC,cAAc;IAClD,IAAI,CAACC,cAAc,GAAGjC,aAAa,CAACiC,cAAc;IAClD,IAAI,CAACC,gBAAgB,GAAGlC,aAAa,CAACkC,gBAAgB;IACtD,IAAI,CAACC,cAAc,GAAGnC,aAAa,CAACmC,cAAc;IAClD,IAAI,CAACC,iBAAiB,GAAGpC,aAAa,CAACoC,iBAAiB;EAC5D;AACJ,CAAC;AAAAC,OAAA,CAAAtC,OAAA,GAAAF,cAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}