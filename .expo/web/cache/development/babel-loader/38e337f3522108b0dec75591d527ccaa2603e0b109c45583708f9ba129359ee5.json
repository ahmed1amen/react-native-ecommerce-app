{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.AndroidMarket = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _reactNative = require(\"react-native\");\nvar AppleNativePrefix = 'itms-apps://itunes.apple.com/app/id';\nvar AppleWebPrefix = 'https://itunes.apple.com/app/id';\nvar GooglePrefix = 'http://play.google.com/store/apps/details?id=';\nvar AmazonPrefix = 'amzn://apps/android?p=';\nvar AndroidMarket = {\n  Google: 1,\n  Amazon: 2,\n  Other: 3\n};\nexports.AndroidMarket = AndroidMarket;\nvar noop = function noop() {};\nvar Rate = function () {\n  function Rate() {\n    (0, _classCallCheck2.default)(this, Rate);\n  }\n  (0, _createClass2.default)(Rate, null, [{\n    key: \"filterOptions\",\n    value: function filterOptions(inputOptions) {\n      var options = {\n        AppleAppID: '',\n        GooglePackageName: '',\n        AmazonPackageName: '',\n        OtherAndroidURL: '',\n        preferredAndroidMarket: AndroidMarket.Google,\n        preferInApp: false,\n        openAppStoreIfInAppFails: true,\n        inAppDelay: 3.0,\n        fallbackPlatformURL: ''\n      };\n      Object.keys(inputOptions).forEach(function (key) {\n        options[key] = inputOptions[key];\n      });\n      return options;\n    }\n  }, {\n    key: \"rate\",\n    value: function rate(inputOptions) {\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n      var RNRate = _reactNative.NativeModules.RNRate;\n      var options = Rate.filterOptions(inputOptions);\n      if (_reactNative.Platform.OS === 'ios') {\n        options.AppleNativePrefix = AppleNativePrefix;\n        RNRate.rate(options, function (response) {\n          callback(response);\n        });\n      } else if (_reactNative.Platform.OS === 'android') {\n        if (options.preferredAndroidMarket === AndroidMarket.Google) {\n          if (options.preferInApp) {\n            RNRate.rate(options, function (response) {\n              if (!response && options.openAppStoreIfInAppFails) {\n                Rate.openURL(GooglePrefix + options.GooglePackageName, callback);\n              } else {\n                callback(response);\n              }\n            });\n          } else {\n            Rate.openURL(GooglePrefix + options.GooglePackageName, callback);\n          }\n        } else if (options.preferredAndroidMarket === AndroidMarket.Amazon) {\n          Rate.openURL(AmazonPrefix + options.AmazonPackageName, callback);\n        } else if (options.preferredAndroidMarket === AndroidMarket.Other) {\n          Rate.openURL(options.OtherAndroidURL, callback);\n        }\n      } else {\n        Rate.openURL(options.fallbackPlatformURL, callback);\n      }\n    }\n  }, {\n    key: \"openURL\",\n    value: function openURL(url) {\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n      _reactNative.Linking.canOpenURL(url).then(function (supported) {\n        callback(supported);\n        if (supported) {\n          _reactNative.Linking.openURL(url);\n        }\n      });\n    }\n  }]);\n  return Rate;\n}();\nexports.default = Rate;","map":{"version":3,"names":["_reactNative","require","AppleNativePrefix","AppleWebPrefix","GooglePrefix","AmazonPrefix","AndroidMarket","Google","Amazon","Other","exports","noop","Rate","_classCallCheck2","default","_createClass2","key","value","filterOptions","inputOptions","options","AppleAppID","GooglePackageName","AmazonPackageName","OtherAndroidURL","preferredAndroidMarket","preferInApp","openAppStoreIfInAppFails","inAppDelay","fallbackPlatformURL","Object","keys","forEach","rate","callback","arguments","length","undefined","RNRate","NativeModules","Platform","OS","response","openURL","url","Linking","canOpenURL","then","supported"],"sources":["/home/ahmed/Music/softtag/Source Code/node_modules/react-native-rate/index.js"],"sourcesContent":["import { Platform, Linking, NativeModules } from 'react-native'\n\nconst AppleNativePrefix = 'itms-apps://itunes.apple.com/app/id'\nconst AppleWebPrefix = 'https://itunes.apple.com/app/id'\nconst GooglePrefix = 'http://play.google.com/store/apps/details?id='\nconst AmazonPrefix = 'amzn://apps/android?p='\n\nexport const AndroidMarket = {\n  Google: 1,\n  Amazon: 2,\n  Other: 3,\n}\n\nconst noop = () => {}\n\nexport default class Rate {\n  static filterOptions(inputOptions) {\n    const options = {\n      AppleAppID: '',\n      GooglePackageName: '',\n      AmazonPackageName: '',\n      OtherAndroidURL: '',\n      preferredAndroidMarket: AndroidMarket.Google,\n      preferInApp: false,\n      openAppStoreIfInAppFails: true,\n      inAppDelay: 3.0,\n      fallbackPlatformURL: '',\n    }\n    Object.keys(inputOptions).forEach((key) => {\n      options[key] = inputOptions[key]\n    })\n    return options\n  }\n\n  static rate(inputOptions, callback = noop) {\n    const { RNRate } = NativeModules\n    const options = Rate.filterOptions(inputOptions)\n    if (Platform.OS === 'ios') {\n      options.AppleNativePrefix = AppleNativePrefix\n      RNRate.rate(options, (response) => {\n        callback(response) // error?\n      })\n    } else if (Platform.OS === 'android') {\n      if (options.preferredAndroidMarket === AndroidMarket.Google) {\n        if (options.preferInApp) {\n          RNRate.rate(options, response=>{\n            if (!response && options.openAppStoreIfInAppFails) {\n              Rate.openURL(GooglePrefix + options.GooglePackageName, callback)\n            } else {\n              callback(response)\n            }\n          })\n        } else {\n          Rate.openURL(GooglePrefix + options.GooglePackageName, callback)\n        }\n      } else if (options.preferredAndroidMarket === AndroidMarket.Amazon) {\n        Rate.openURL(AmazonPrefix + options.AmazonPackageName, callback)\n      } else if (options.preferredAndroidMarket === AndroidMarket.Other) {\n        Rate.openURL(options.OtherAndroidURL, callback)\n      }\n    } else {\n      Rate.openURL(options.fallbackPlatformURL, callback)\n    }\n  }\n\n  static openURL(url, callback = noop) {\n    Linking.canOpenURL(url).then((supported) => {\n      callback(supported)\n      if (supported) {\n        Linking.openURL(url)\n      }\n    })\n  }\n}\n"],"mappings":";;;;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AAEA,IAAMC,iBAAiB,GAAG,qCAAqC;AAC/D,IAAMC,cAAc,GAAG,iCAAiC;AACxD,IAAMC,YAAY,GAAG,+CAA+C;AACpE,IAAMC,YAAY,GAAG,wBAAwB;AAEtC,IAAMC,aAAa,GAAG;EAC3BC,MAAM,EAAE,CAAC;EACTC,MAAM,EAAE,CAAC;EACTC,KAAK,EAAE;AACT,CAAC;AAAAC,OAAA,CAAAJ,aAAA,GAAAA,aAAA;AAED,IAAMK,IAAI,GAAG,SAAPA,IAAIA,CAAA,EAAS,CAAC,CAAC;AAAA,IAEAC,IAAI;EAAA,SAAAA,KAAA;IAAA,IAAAC,gBAAA,CAAAC,OAAA,QAAAF,IAAA;EAAA;EAAA,IAAAG,aAAA,CAAAD,OAAA,EAAAF,IAAA;IAAAI,GAAA;IAAAC,KAAA,EACvB,SAAAC,cAAqBC,YAAY,EAAE;MACjC,IAAMC,OAAO,GAAG;QACdC,UAAU,EAAE,EAAE;QACdC,iBAAiB,EAAE,EAAE;QACrBC,iBAAiB,EAAE,EAAE;QACrBC,eAAe,EAAE,EAAE;QACnBC,sBAAsB,EAAEnB,aAAa,CAACC,MAAM;QAC5CmB,WAAW,EAAE,KAAK;QAClBC,wBAAwB,EAAE,IAAI;QAC9BC,UAAU,EAAE,GAAG;QACfC,mBAAmB,EAAE;MACvB,CAAC;MACDC,MAAM,CAACC,IAAI,CAACZ,YAAY,CAAC,CAACa,OAAO,CAAC,UAAChB,GAAG,EAAK;QACzCI,OAAO,CAACJ,GAAG,CAAC,GAAGG,YAAY,CAACH,GAAG,CAAC;MAClC,CAAC,CAAC;MACF,OAAOI,OAAO;IAChB;EAAC;IAAAJ,GAAA;IAAAC,KAAA,EAED,SAAAgB,KAAYd,YAAY,EAAmB;MAAA,IAAjBe,QAAQ,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGxB,IAAI;MACvC,IAAQ2B,MAAM,GAAKC,0BAAa,CAAxBD,MAAM;MACd,IAAMlB,OAAO,GAAGR,IAAI,CAACM,aAAa,CAACC,YAAY,CAAC;MAChD,IAAIqB,qBAAQ,CAACC,EAAE,KAAK,KAAK,EAAE;QACzBrB,OAAO,CAAClB,iBAAiB,GAAGA,iBAAiB;QAC7CoC,MAAM,CAACL,IAAI,CAACb,OAAO,EAAE,UAACsB,QAAQ,EAAK;UACjCR,QAAQ,CAACQ,QAAQ,CAAC;QACpB,CAAC,CAAC;MACJ,CAAC,MAAM,IAAIF,qBAAQ,CAACC,EAAE,KAAK,SAAS,EAAE;QACpC,IAAIrB,OAAO,CAACK,sBAAsB,KAAKnB,aAAa,CAACC,MAAM,EAAE;UAC3D,IAAIa,OAAO,CAACM,WAAW,EAAE;YACvBY,MAAM,CAACL,IAAI,CAACb,OAAO,EAAE,UAAAsB,QAAQ,EAAE;cAC7B,IAAI,CAACA,QAAQ,IAAItB,OAAO,CAACO,wBAAwB,EAAE;gBACjDf,IAAI,CAAC+B,OAAO,CAACvC,YAAY,GAAGgB,OAAO,CAACE,iBAAiB,EAAEY,QAAQ,CAAC;cAClE,CAAC,MAAM;gBACLA,QAAQ,CAACQ,QAAQ,CAAC;cACpB;YACF,CAAC,CAAC;UACJ,CAAC,MAAM;YACL9B,IAAI,CAAC+B,OAAO,CAACvC,YAAY,GAAGgB,OAAO,CAACE,iBAAiB,EAAEY,QAAQ,CAAC;UAClE;QACF,CAAC,MAAM,IAAId,OAAO,CAACK,sBAAsB,KAAKnB,aAAa,CAACE,MAAM,EAAE;UAClEI,IAAI,CAAC+B,OAAO,CAACtC,YAAY,GAAGe,OAAO,CAACG,iBAAiB,EAAEW,QAAQ,CAAC;QAClE,CAAC,MAAM,IAAId,OAAO,CAACK,sBAAsB,KAAKnB,aAAa,CAACG,KAAK,EAAE;UACjEG,IAAI,CAAC+B,OAAO,CAACvB,OAAO,CAACI,eAAe,EAAEU,QAAQ,CAAC;QACjD;MACF,CAAC,MAAM;QACLtB,IAAI,CAAC+B,OAAO,CAACvB,OAAO,CAACS,mBAAmB,EAAEK,QAAQ,CAAC;MACrD;IACF;EAAC;IAAAlB,GAAA;IAAAC,KAAA,EAED,SAAA0B,QAAeC,GAAG,EAAmB;MAAA,IAAjBV,QAAQ,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGxB,IAAI;MACjCkC,oBAAO,CAACC,UAAU,CAACF,GAAG,CAAC,CAACG,IAAI,CAAC,UAACC,SAAS,EAAK;QAC1Cd,QAAQ,CAACc,SAAS,CAAC;QACnB,IAAIA,SAAS,EAAE;UACbH,oBAAO,CAACF,OAAO,CAACC,GAAG,CAAC;QACtB;MACF,CAAC,CAAC;IACJ;EAAC;EAAA,OAAAhC,IAAA;AAAA;AAAAF,OAAA,CAAAI,OAAA,GAAAF,IAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}