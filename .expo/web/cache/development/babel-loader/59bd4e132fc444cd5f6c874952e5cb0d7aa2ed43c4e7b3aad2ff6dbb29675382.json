{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.firebase = exports.default = exports.SDK_VERSION = void 0;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _common = require(\"@react-native-firebase/app/lib/common\");\nvar _internal = require(\"@react-native-firebase/app/lib/internal\");\nvar _ConfirmationResult = _interopRequireDefault(require(\"./ConfirmationResult\"));\nvar _PhoneAuthListener = _interopRequireDefault(require(\"./PhoneAuthListener\"));\nvar _EmailAuthProvider = _interopRequireDefault(require(\"./providers/EmailAuthProvider\"));\nvar _FacebookAuthProvider = _interopRequireDefault(require(\"./providers/FacebookAuthProvider\"));\nvar _GithubAuthProvider = _interopRequireDefault(require(\"./providers/GithubAuthProvider\"));\nvar _GoogleAuthProvider = _interopRequireDefault(require(\"./providers/GoogleAuthProvider\"));\nvar _OAuthProvider = _interopRequireDefault(require(\"./providers/OAuthProvider\"));\nvar _PhoneAuthProvider = _interopRequireDefault(require(\"./providers/PhoneAuthProvider\"));\nvar _TwitterAuthProvider = _interopRequireDefault(require(\"./providers/TwitterAuthProvider\"));\nvar _AppleAuthProvider = _interopRequireDefault(require(\"./providers/AppleAuthProvider\"));\nvar _Settings = _interopRequireDefault(require(\"./Settings\"));\nvar _User = _interopRequireDefault(require(\"./User\"));\nvar _version = _interopRequireDefault(require(\"./version\"));\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar statics = {\n  AppleAuthProvider: _AppleAuthProvider.default,\n  EmailAuthProvider: _EmailAuthProvider.default,\n  PhoneAuthProvider: _PhoneAuthProvider.default,\n  GoogleAuthProvider: _GoogleAuthProvider.default,\n  GithubAuthProvider: _GithubAuthProvider.default,\n  TwitterAuthProvider: _TwitterAuthProvider.default,\n  FacebookAuthProvider: _FacebookAuthProvider.default,\n  OAuthProvider: _OAuthProvider.default,\n  PhoneAuthState: {\n    CODE_SENT: 'sent',\n    AUTO_VERIFY_TIMEOUT: 'timeout',\n    AUTO_VERIFIED: 'verified',\n    ERROR: 'error'\n  }\n};\nvar namespace = 'auth';\nvar nativeModuleName = 'RNFBAuthModule';\nvar FirebaseAuthModule = function (_FirebaseModule) {\n  (0, _inherits2.default)(FirebaseAuthModule, _FirebaseModule);\n  var _super = _createSuper(FirebaseAuthModule);\n  function FirebaseAuthModule() {\n    var _this;\n    (0, _classCallCheck2.default)(this, FirebaseAuthModule);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this._user = null;\n    _this._settings = null;\n    _this._authResult = false;\n    _this._languageCode = _this.native.APP_LANGUAGE[_this.app._name];\n    _this._tenantId = null;\n    if (!_this.languageCode) {\n      _this._languageCode = _this.native.APP_LANGUAGE['[DEFAULT]'];\n    }\n    if (_this.native.APP_USER[_this.app._name]) {\n      _this._setUser(_this.native.APP_USER[_this.app._name]);\n    }\n    _this.emitter.addListener(_this.eventNameForApp('auth_state_changed'), function (event) {\n      _this._setUser(event.user);\n      _this.emitter.emit(_this.eventNameForApp('onAuthStateChanged'), _this._user);\n    });\n    _this.emitter.addListener(_this.eventNameForApp('phone_auth_state_changed'), function (event) {\n      var eventKey = \"phone:auth:\" + event.requestKey + \":\" + event.type;\n      _this.emitter.emit(eventKey, event.state);\n    });\n    _this.emitter.addListener(_this.eventNameForApp('auth_id_token_changed'), function (auth) {\n      _this._setUser(auth.user);\n      _this.emitter.emit(_this.eventNameForApp('onIdTokenChanged'), _this._user);\n    });\n    _this.native.addAuthStateListener();\n    _this.native.addIdTokenListener();\n    return _this;\n  }\n  (0, _createClass2.default)(FirebaseAuthModule, [{\n    key: \"languageCode\",\n    get: function get() {\n      return this._languageCode;\n    }\n  }, {\n    key: \"tenantId\",\n    get: function get() {\n      return this._tenantId;\n    }\n  }, {\n    key: \"settings\",\n    get: function get() {\n      if (!this._settings) {\n        this._settings = new _Settings.default(this);\n      }\n      return this._settings;\n    }\n  }, {\n    key: \"currentUser\",\n    get: function get() {\n      return this._user;\n    }\n  }, {\n    key: \"_setUser\",\n    value: function _setUser(user) {\n      this._user = user ? new _User.default(this, user) : null;\n      this._authResult = true;\n      this.emitter.emit(this.eventNameForApp('onUserChanged'), this._user);\n      return this._user;\n    }\n  }, {\n    key: \"_setUserCredential\",\n    value: function _setUserCredential(userCredential) {\n      var user = new _User.default(this, userCredential.user);\n      this._user = user;\n      this._authResult = true;\n      this.emitter.emit(this.eventNameForApp('onUserChanged'), this._user);\n      return {\n        additionalUserInfo: userCredential.additionalUserInfo,\n        user: user\n      };\n    }\n  }, {\n    key: \"setLanguageCode\",\n    value: function setLanguageCode(code) {\n      return _regenerator.default.async(function setLanguageCode$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(!(0, _common.isString)(code) && !(0, _common.isNull)(code))) {\n                _context.next = 2;\n                break;\n              }\n              throw new Error(\"firebase.auth().setLanguageCode(*) expected 'languageCode' to be a string or null value\");\n            case 2:\n              _context.next = 4;\n              return _regenerator.default.awrap(this.native.setLanguageCode(code));\n            case 4:\n              if (code === null) {\n                this._languageCode = this.native.APP_LANGUAGE[this.app._name];\n                if (!this.languageCode) {\n                  this._languageCode = this.native.APP_LANGUAGE['[DEFAULT]'];\n                }\n              } else {\n                this._languageCode = code;\n              }\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"setTenantId\",\n    value: function setTenantId(tenantId) {\n      return _regenerator.default.async(function setTenantId$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if ((0, _common.isString)(tenantId)) {\n                _context2.next = 2;\n                break;\n              }\n              throw new Error(\"firebase.auth().setTenantId(*) expected 'tenantId' to be a string\");\n            case 2:\n              this._tenantId = tenantId;\n              _context2.next = 5;\n              return _regenerator.default.awrap(this.native.setTenantId(tenantId));\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"_parseListener\",\n    value: function _parseListener(listenerOrObserver) {\n      return typeof listenerOrObserver === 'object' ? listenerOrObserver.next.bind(listenerOrObserver) : listenerOrObserver;\n    }\n  }, {\n    key: \"onAuthStateChanged\",\n    value: function onAuthStateChanged(listenerOrObserver) {\n      var _this2 = this;\n      var listener = this._parseListener(listenerOrObserver);\n      var subscription = this.emitter.addListener(this.eventNameForApp('onAuthStateChanged'), listener);\n      if (this._authResult) {\n        Promise.resolve().then(function () {\n          listener(_this2._user || null);\n        });\n      }\n      return function () {\n        return subscription.remove();\n      };\n    }\n  }, {\n    key: \"onIdTokenChanged\",\n    value: function onIdTokenChanged(listenerOrObserver) {\n      var _this3 = this;\n      var listener = this._parseListener(listenerOrObserver);\n      var subscription = this.emitter.addListener(this.eventNameForApp('onIdTokenChanged'), listener);\n      if (this._authResult) {\n        Promise.resolve().then(function () {\n          listener(_this3._user || null);\n        });\n      }\n      return function () {\n        return subscription.remove();\n      };\n    }\n  }, {\n    key: \"onUserChanged\",\n    value: function onUserChanged(listenerOrObserver) {\n      var _this4 = this;\n      var listener = this._parseListener(listenerOrObserver);\n      var subscription = this.emitter.addListener(this.eventNameForApp('onUserChanged'), listener);\n      if (this._authResult) {\n        Promise.resolve().then(function () {\n          listener(_this4._user || null);\n        });\n      }\n      return function () {\n        subscription.remove();\n      };\n    }\n  }, {\n    key: \"signOut\",\n    value: function signOut() {\n      var _this5 = this;\n      return this.native.signOut().then(function () {\n        _this5._setUser();\n      });\n    }\n  }, {\n    key: \"signInAnonymously\",\n    value: function signInAnonymously() {\n      var _this6 = this;\n      return this.native.signInAnonymously().then(function (userCredential) {\n        return _this6._setUserCredential(userCredential);\n      });\n    }\n  }, {\n    key: \"signInWithPhoneNumber\",\n    value: function signInWithPhoneNumber(phoneNumber, forceResend) {\n      var _this7 = this;\n      if (_common.isAndroid) {\n        return this.native.signInWithPhoneNumber(phoneNumber, forceResend || false).then(function (result) {\n          return new _ConfirmationResult.default(_this7, result.verificationId);\n        });\n      }\n      return this.native.signInWithPhoneNumber(phoneNumber).then(function (result) {\n        return new _ConfirmationResult.default(_this7, result.verificationId);\n      });\n    }\n  }, {\n    key: \"verifyPhoneNumber\",\n    value: function verifyPhoneNumber(phoneNumber, autoVerifyTimeoutOrForceResend, forceResend) {\n      var _forceResend = forceResend;\n      var _autoVerifyTimeout = 60;\n      if ((0, _common.isBoolean)(autoVerifyTimeoutOrForceResend)) {\n        _forceResend = autoVerifyTimeoutOrForceResend;\n      } else {\n        _autoVerifyTimeout = autoVerifyTimeoutOrForceResend;\n      }\n      return new _PhoneAuthListener.default(this, phoneNumber, _autoVerifyTimeout, _forceResend);\n    }\n  }, {\n    key: \"createUserWithEmailAndPassword\",\n    value: function createUserWithEmailAndPassword(email, password) {\n      var _this8 = this;\n      return this.native.createUserWithEmailAndPassword(email, password).then(function (userCredential) {\n        return _this8._setUserCredential(userCredential);\n      });\n    }\n  }, {\n    key: \"signInWithEmailAndPassword\",\n    value: function signInWithEmailAndPassword(email, password) {\n      var _this9 = this;\n      return this.native.signInWithEmailAndPassword(email, password).then(function (userCredential) {\n        return _this9._setUserCredential(userCredential);\n      });\n    }\n  }, {\n    key: \"signInWithCustomToken\",\n    value: function signInWithCustomToken(customToken) {\n      var _this10 = this;\n      return this.native.signInWithCustomToken(customToken).then(function (userCredential) {\n        return _this10._setUserCredential(userCredential);\n      });\n    }\n  }, {\n    key: \"signInWithCredential\",\n    value: function signInWithCredential(credential) {\n      var _this11 = this;\n      return this.native.signInWithCredential(credential.providerId, credential.token, credential.secret).then(function (userCredential) {\n        return _this11._setUserCredential(userCredential);\n      });\n    }\n  }, {\n    key: \"sendPasswordResetEmail\",\n    value: function sendPasswordResetEmail(email) {\n      var actionCodeSettings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      return this.native.sendPasswordResetEmail(email, actionCodeSettings);\n    }\n  }, {\n    key: \"sendSignInLinkToEmail\",\n    value: function sendSignInLinkToEmail(email) {\n      var actionCodeSettings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.native.sendSignInLinkToEmail(email, actionCodeSettings);\n    }\n  }, {\n    key: \"isSignInWithEmailLink\",\n    value: function isSignInWithEmailLink(emailLink) {\n      return typeof emailLink === 'string' && (emailLink.includes('mode=signIn') || emailLink.includes('mode%3DsignIn')) && (emailLink.includes('oobCode=') || emailLink.includes('oobCode%3D'));\n    }\n  }, {\n    key: \"signInWithEmailLink\",\n    value: function signInWithEmailLink(email, emailLink) {\n      var _this12 = this;\n      return this.native.signInWithEmailLink(email, emailLink).then(function (userCredential) {\n        return _this12._setUserCredential(userCredential);\n      });\n    }\n  }, {\n    key: \"confirmPasswordReset\",\n    value: function confirmPasswordReset(code, newPassword) {\n      return this.native.confirmPasswordReset(code, newPassword);\n    }\n  }, {\n    key: \"applyActionCode\",\n    value: function applyActionCode(code) {\n      var _this13 = this;\n      return this.native.applyActionCode(code).then(function (user) {\n        _this13._setUser(user);\n      });\n    }\n  }, {\n    key: \"checkActionCode\",\n    value: function checkActionCode(code) {\n      return this.native.checkActionCode(code);\n    }\n  }, {\n    key: \"fetchSignInMethodsForEmail\",\n    value: function fetchSignInMethodsForEmail(email) {\n      return this.native.fetchSignInMethodsForEmail(email);\n    }\n  }, {\n    key: \"verifyPasswordResetCode\",\n    value: function verifyPasswordResetCode(code) {\n      return this.native.verifyPasswordResetCode(code);\n    }\n  }, {\n    key: \"useUserAccessGroup\",\n    value: function useUserAccessGroup(userAccessGroup) {\n      if (_common.isAndroid) {\n        return Promise.resolve();\n      }\n      return this.native.useUserAccessGroup(userAccessGroup);\n    }\n  }, {\n    key: \"getRedirectResult\",\n    value: function getRedirectResult() {\n      throw new Error('firebase.auth().getRedirectResult() is unsupported by the native Firebase SDKs.');\n    }\n  }, {\n    key: \"setPersistence\",\n    value: function setPersistence() {\n      throw new Error('firebase.auth().setPersistence() is unsupported by the native Firebase SDKs.');\n    }\n  }, {\n    key: \"signInWithPopup\",\n    value: function signInWithPopup() {\n      throw new Error('firebase.auth().signInWithPopup() is unsupported by the native Firebase SDKs.');\n    }\n  }, {\n    key: \"signInWithRedirect\",\n    value: function signInWithRedirect() {\n      throw new Error('firebase.auth().signInWithRedirect() is unsupported by the native Firebase SDKs.');\n    }\n  }, {\n    key: \"useDeviceLanguage\",\n    value: function useDeviceLanguage() {\n      throw new Error('firebase.auth().useDeviceLanguage() is unsupported by the native Firebase SDKs.');\n    }\n  }, {\n    key: \"useEmulator\",\n    value: function useEmulator(url) {\n      if (!url || !(0, _common.isString)(url) || !(0, _common.isValidUrl)(url)) {\n        throw new Error('firebase.auth().useEmulator() takes a non-empty string URL');\n      }\n      var _url = url;\n      if (_common.isAndroid && _url) {\n        if (_url.startsWith('http://localhost')) {\n          _url = _url.replace('http://localhost', 'http://10.0.2.2');\n          console.log('Mapping auth host \"localhost\" to \"10.0.2.2\" for android emulators. Use real IP on real devices.');\n        }\n        if (_url.startsWith('http://127.0.0.1')) {\n          _url = _url.replace('http://127.0.0.1', 'http://10.0.2.2');\n          console.log('Mapping auth host \"127.0.0.1\" to \"10.0.2.2\" for android emulators. Use real IP on real devices.');\n        }\n      }\n      var hostPortRegex = /^http:\\/\\/([\\w\\d.]+):(\\d+)$/;\n      var urlMatches = _url.match(hostPortRegex);\n      if (!urlMatches) {\n        throw new Error('firebase.auth().useEmulator() unable to parse host and port from URL');\n      }\n      var host = urlMatches[1];\n      var port = parseInt(urlMatches[2], 10);\n      this.native.useEmulator(host, port);\n      return [host, port];\n    }\n  }]);\n  return FirebaseAuthModule;\n}(_internal.FirebaseModule);\nvar SDK_VERSION = _version.default;\nexports.SDK_VERSION = SDK_VERSION;\nvar _default = (0, _internal.createModuleNamespace)({\n  statics: statics,\n  version: _version.default,\n  namespace: namespace,\n  nativeModuleName: nativeModuleName,\n  nativeEvents: ['auth_state_changed', 'auth_id_token_changed', 'phone_auth_state_changed'],\n  hasMultiAppSupport: true,\n  hasCustomUrlOrRegionSupport: false,\n  ModuleClass: FirebaseAuthModule\n});\nexports.default = _default;\nvar firebase = (0, _internal.getFirebaseRoot)();\nexports.firebase = firebase;","map":{"version":3,"names":["_common","require","_internal","_ConfirmationResult","_interopRequireDefault","_PhoneAuthListener","_EmailAuthProvider","_FacebookAuthProvider","_GithubAuthProvider","_GoogleAuthProvider","_OAuthProvider","_PhoneAuthProvider","_TwitterAuthProvider","_AppleAuthProvider","_Settings","_User","_version","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","prototype","valueOf","call","e","statics","AppleAuthProvider","EmailAuthProvider","PhoneAuthProvider","GoogleAuthProvider","GithubAuthProvider","TwitterAuthProvider","FacebookAuthProvider","OAuthProvider","PhoneAuthState","CODE_SENT","AUTO_VERIFY_TIMEOUT","AUTO_VERIFIED","ERROR","namespace","nativeModuleName","FirebaseAuthModule","_FirebaseModule","_inherits2","_super","_this","_classCallCheck2","_len","length","args","Array","_key","concat","_user","_settings","_authResult","_languageCode","native","APP_LANGUAGE","app","_name","_tenantId","languageCode","APP_USER","_setUser","emitter","addListener","eventNameForApp","event","user","emit","eventKey","requestKey","type","state","auth","addAuthStateListener","addIdTokenListener","_createClass2","key","get","Settings","value","User","_setUserCredential","userCredential","additionalUserInfo","setLanguageCode","code","_regenerator","async","setLanguageCode$","_context","prev","next","isString","isNull","Error","awrap","stop","Promise","setTenantId","tenantId","setTenantId$","_context2","_parseListener","listenerOrObserver","bind","onAuthStateChanged","_this2","listener","subscription","resolve","then","remove","onIdTokenChanged","_this3","onUserChanged","_this4","signOut","_this5","signInAnonymously","_this6","signInWithPhoneNumber","phoneNumber","forceResend","_this7","isAndroid","ConfirmationResult","verificationId","verifyPhoneNumber","autoVerifyTimeoutOrForceResend","_forceResend","_autoVerifyTimeout","isBoolean","PhoneAuthListener","createUserWithEmailAndPassword","email","password","_this8","signInWithEmailAndPassword","_this9","signInWithCustomToken","customToken","_this10","signInWithCredential","credential","_this11","providerId","token","secret","sendPasswordResetEmail","actionCodeSettings","undefined","sendSignInLinkToEmail","isSignInWithEmailLink","emailLink","includes","signInWithEmailLink","_this12","confirmPasswordReset","newPassword","applyActionCode","_this13","checkActionCode","fetchSignInMethodsForEmail","verifyPasswordResetCode","useUserAccessGroup","userAccessGroup","getRedirectResult","setPersistence","signInWithPopup","signInWithRedirect","useDeviceLanguage","useEmulator","url","isValidUrl","_url","startsWith","replace","console","log","hostPortRegex","urlMatches","match","host","port","parseInt","FirebaseModule","SDK_VERSION","version","exports","_default","createModuleNamespace","nativeEvents","hasMultiAppSupport","hasCustomUrlOrRegionSupport","ModuleClass","firebase","getFirebaseRoot"],"sources":["/home/ahmed/Music/softtag/Source Code/node_modules/@react-native-firebase/auth/lib/index.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport {\n  isAndroid,\n  isBoolean,\n  isString,\n  isNull,\n  isValidUrl,\n} from '@react-native-firebase/app/lib/common';\nimport {\n  createModuleNamespace,\n  FirebaseModule,\n  getFirebaseRoot,\n} from '@react-native-firebase/app/lib/internal';\nimport ConfirmationResult from './ConfirmationResult';\nimport PhoneAuthListener from './PhoneAuthListener';\nimport EmailAuthProvider from './providers/EmailAuthProvider';\nimport FacebookAuthProvider from './providers/FacebookAuthProvider';\nimport GithubAuthProvider from './providers/GithubAuthProvider';\nimport GoogleAuthProvider from './providers/GoogleAuthProvider';\nimport OAuthProvider from './providers/OAuthProvider';\nimport PhoneAuthProvider from './providers/PhoneAuthProvider';\nimport TwitterAuthProvider from './providers/TwitterAuthProvider';\nimport AppleAuthProvider from './providers/AppleAuthProvider';\nimport Settings from './Settings';\nimport User from './User';\nimport version from './version';\n\nconst statics = {\n  AppleAuthProvider,\n  EmailAuthProvider,\n  PhoneAuthProvider,\n  GoogleAuthProvider,\n  GithubAuthProvider,\n  TwitterAuthProvider,\n  FacebookAuthProvider,\n  OAuthProvider,\n  PhoneAuthState: {\n    CODE_SENT: 'sent',\n    AUTO_VERIFY_TIMEOUT: 'timeout',\n    AUTO_VERIFIED: 'verified',\n    ERROR: 'error',\n  },\n};\n\nconst namespace = 'auth';\n\nconst nativeModuleName = 'RNFBAuthModule';\n\nclass FirebaseAuthModule extends FirebaseModule {\n  constructor(...args) {\n    super(...args);\n    this._user = null;\n    this._settings = null;\n    this._authResult = false;\n    this._languageCode = this.native.APP_LANGUAGE[this.app._name];\n    this._tenantId = null;\n\n    if (!this.languageCode) {\n      this._languageCode = this.native.APP_LANGUAGE['[DEFAULT]'];\n    }\n\n    if (this.native.APP_USER[this.app._name]) {\n      this._setUser(this.native.APP_USER[this.app._name]);\n    }\n\n    this.emitter.addListener(this.eventNameForApp('auth_state_changed'), event => {\n      this._setUser(event.user);\n      this.emitter.emit(this.eventNameForApp('onAuthStateChanged'), this._user);\n    });\n\n    this.emitter.addListener(this.eventNameForApp('phone_auth_state_changed'), event => {\n      const eventKey = `phone:auth:${event.requestKey}:${event.type}`;\n      this.emitter.emit(eventKey, event.state);\n    });\n\n    this.emitter.addListener(this.eventNameForApp('auth_id_token_changed'), auth => {\n      this._setUser(auth.user);\n      this.emitter.emit(this.eventNameForApp('onIdTokenChanged'), this._user);\n    });\n\n    this.native.addAuthStateListener();\n    this.native.addIdTokenListener();\n  }\n\n  get languageCode() {\n    return this._languageCode;\n  }\n\n  get tenantId() {\n    return this._tenantId;\n  }\n\n  get settings() {\n    if (!this._settings) {\n      this._settings = new Settings(this);\n    }\n    return this._settings;\n  }\n\n  get currentUser() {\n    return this._user;\n  }\n\n  _setUser(user) {\n    this._user = user ? new User(this, user) : null;\n    this._authResult = true;\n    this.emitter.emit(this.eventNameForApp('onUserChanged'), this._user);\n    return this._user;\n  }\n\n  _setUserCredential(userCredential) {\n    const user = new User(this, userCredential.user);\n    this._user = user;\n    this._authResult = true;\n    this.emitter.emit(this.eventNameForApp('onUserChanged'), this._user);\n    return {\n      additionalUserInfo: userCredential.additionalUserInfo,\n      user,\n    };\n  }\n\n  async setLanguageCode(code) {\n    if (!isString(code) && !isNull(code)) {\n      throw new Error(\n        \"firebase.auth().setLanguageCode(*) expected 'languageCode' to be a string or null value\",\n      );\n    }\n\n    await this.native.setLanguageCode(code);\n\n    if (code === null) {\n      this._languageCode = this.native.APP_LANGUAGE[this.app._name];\n\n      if (!this.languageCode) {\n        this._languageCode = this.native.APP_LANGUAGE['[DEFAULT]'];\n      }\n    } else {\n      this._languageCode = code;\n    }\n  }\n\n  async setTenantId(tenantId) {\n    if (!isString(tenantId)) {\n      throw new Error(\"firebase.auth().setTenantId(*) expected 'tenantId' to be a string\");\n    }\n    this._tenantId = tenantId;\n    await this.native.setTenantId(tenantId);\n  }\n\n  _parseListener(listenerOrObserver) {\n    return typeof listenerOrObserver === 'object'\n      ? listenerOrObserver.next.bind(listenerOrObserver)\n      : listenerOrObserver;\n  }\n\n  onAuthStateChanged(listenerOrObserver) {\n    const listener = this._parseListener(listenerOrObserver);\n    const subscription = this.emitter.addListener(\n      this.eventNameForApp('onAuthStateChanged'),\n      listener,\n    );\n\n    if (this._authResult) {\n      Promise.resolve().then(() => {\n        listener(this._user || null);\n      });\n    }\n    return () => subscription.remove();\n  }\n\n  onIdTokenChanged(listenerOrObserver) {\n    const listener = this._parseListener(listenerOrObserver);\n    const subscription = this.emitter.addListener(\n      this.eventNameForApp('onIdTokenChanged'),\n      listener,\n    );\n\n    if (this._authResult) {\n      Promise.resolve().then(() => {\n        listener(this._user || null);\n      });\n    }\n    return () => subscription.remove();\n  }\n\n  onUserChanged(listenerOrObserver) {\n    const listener = this._parseListener(listenerOrObserver);\n    const subscription = this.emitter.addListener(this.eventNameForApp('onUserChanged'), listener);\n    if (this._authResult) {\n      Promise.resolve().then(() => {\n        listener(this._user || null);\n      });\n    }\n\n    return () => {\n      subscription.remove();\n    };\n  }\n\n  signOut() {\n    return this.native.signOut().then(() => {\n      this._setUser();\n    });\n  }\n\n  signInAnonymously() {\n    return this.native\n      .signInAnonymously()\n      .then(userCredential => this._setUserCredential(userCredential));\n  }\n\n  signInWithPhoneNumber(phoneNumber, forceResend) {\n    if (isAndroid) {\n      return this.native\n        .signInWithPhoneNumber(phoneNumber, forceResend || false)\n        .then(result => new ConfirmationResult(this, result.verificationId));\n    }\n\n    return this.native\n      .signInWithPhoneNumber(phoneNumber)\n      .then(result => new ConfirmationResult(this, result.verificationId));\n  }\n\n  verifyPhoneNumber(phoneNumber, autoVerifyTimeoutOrForceResend, forceResend) {\n    let _forceResend = forceResend;\n    let _autoVerifyTimeout = 60;\n\n    if (isBoolean(autoVerifyTimeoutOrForceResend)) {\n      _forceResend = autoVerifyTimeoutOrForceResend;\n    } else {\n      _autoVerifyTimeout = autoVerifyTimeoutOrForceResend;\n    }\n\n    return new PhoneAuthListener(this, phoneNumber, _autoVerifyTimeout, _forceResend);\n  }\n\n  createUserWithEmailAndPassword(email, password) {\n    return this.native\n      .createUserWithEmailAndPassword(email, password)\n      .then(userCredential => this._setUserCredential(userCredential));\n  }\n\n  signInWithEmailAndPassword(email, password) {\n    return this.native\n      .signInWithEmailAndPassword(email, password)\n      .then(userCredential => this._setUserCredential(userCredential));\n  }\n\n  signInWithCustomToken(customToken) {\n    return this.native\n      .signInWithCustomToken(customToken)\n      .then(userCredential => this._setUserCredential(userCredential));\n  }\n\n  signInWithCredential(credential) {\n    return this.native\n      .signInWithCredential(credential.providerId, credential.token, credential.secret)\n      .then(userCredential => this._setUserCredential(userCredential));\n  }\n\n  sendPasswordResetEmail(email, actionCodeSettings = null) {\n    return this.native.sendPasswordResetEmail(email, actionCodeSettings);\n  }\n\n  sendSignInLinkToEmail(email, actionCodeSettings = {}) {\n    return this.native.sendSignInLinkToEmail(email, actionCodeSettings);\n  }\n\n  isSignInWithEmailLink(emailLink) {\n    return (\n      typeof emailLink === 'string' &&\n      (emailLink.includes('mode=signIn') || emailLink.includes('mode%3DsignIn')) &&\n      (emailLink.includes('oobCode=') || emailLink.includes('oobCode%3D'))\n    );\n  }\n\n  signInWithEmailLink(email, emailLink) {\n    return this.native\n      .signInWithEmailLink(email, emailLink)\n      .then(userCredential => this._setUserCredential(userCredential));\n  }\n\n  confirmPasswordReset(code, newPassword) {\n    return this.native.confirmPasswordReset(code, newPassword);\n  }\n\n  applyActionCode(code) {\n    return this.native.applyActionCode(code).then(user => {\n      this._setUser(user);\n    });\n  }\n\n  checkActionCode(code) {\n    return this.native.checkActionCode(code);\n  }\n\n  fetchSignInMethodsForEmail(email) {\n    return this.native.fetchSignInMethodsForEmail(email);\n  }\n\n  verifyPasswordResetCode(code) {\n    return this.native.verifyPasswordResetCode(code);\n  }\n\n  useUserAccessGroup(userAccessGroup) {\n    if (isAndroid) {\n      return Promise.resolve();\n    }\n    return this.native.useUserAccessGroup(userAccessGroup);\n  }\n\n  getRedirectResult() {\n    throw new Error(\n      'firebase.auth().getRedirectResult() is unsupported by the native Firebase SDKs.',\n    );\n  }\n\n  setPersistence() {\n    throw new Error('firebase.auth().setPersistence() is unsupported by the native Firebase SDKs.');\n  }\n\n  signInWithPopup() {\n    throw new Error(\n      'firebase.auth().signInWithPopup() is unsupported by the native Firebase SDKs.',\n    );\n  }\n\n  signInWithRedirect() {\n    throw new Error(\n      'firebase.auth().signInWithRedirect() is unsupported by the native Firebase SDKs.',\n    );\n  }\n\n  // firebase issue - https://github.com/invertase/react-native-firebase/pull/655#issuecomment-349904680\n  useDeviceLanguage() {\n    throw new Error(\n      'firebase.auth().useDeviceLanguage() is unsupported by the native Firebase SDKs.',\n    );\n  }\n\n  useEmulator(url) {\n    if (!url || !isString(url) || !isValidUrl(url)) {\n      throw new Error('firebase.auth().useEmulator() takes a non-empty string URL');\n    }\n\n    let _url = url;\n    if (isAndroid && _url) {\n      if (_url.startsWith('http://localhost')) {\n        _url = _url.replace('http://localhost', 'http://10.0.2.2');\n        // eslint-disable-next-line no-console\n        console.log(\n          'Mapping auth host \"localhost\" to \"10.0.2.2\" for android emulators. Use real IP on real devices.',\n        );\n      }\n      if (_url.startsWith('http://127.0.0.1')) {\n        _url = _url.replace('http://127.0.0.1', 'http://10.0.2.2');\n        // eslint-disable-next-line no-console\n        console.log(\n          'Mapping auth host \"127.0.0.1\" to \"10.0.2.2\" for android emulators. Use real IP on real devices.',\n        );\n      }\n    }\n\n    // Native calls take the host and port split out\n    const hostPortRegex = /^http:\\/\\/([\\w\\d.]+):(\\d+)$/;\n    const urlMatches = _url.match(hostPortRegex);\n    if (!urlMatches) {\n      throw new Error('firebase.auth().useEmulator() unable to parse host and port from URL');\n    }\n    const host = urlMatches[1];\n    const port = parseInt(urlMatches[2], 10);\n    this.native.useEmulator(host, port);\n    return [host, port]; // undocumented return, useful for unit testing\n  }\n}\n\n// import { SDK_VERSION } from '@react-native-firebase/auth';\nexport const SDK_VERSION = version;\n\n// import auth from '@react-native-firebase/auth';\n// auth().X(...);\nexport default createModuleNamespace({\n  statics,\n  version,\n  namespace,\n  nativeModuleName,\n  nativeEvents: ['auth_state_changed', 'auth_id_token_changed', 'phone_auth_state_changed'],\n  hasMultiAppSupport: true,\n  hasCustomUrlOrRegionSupport: false,\n  ModuleClass: FirebaseAuthModule,\n});\n\n// import auth, { firebase } from '@react-native-firebase/auth';\n// auth().X(...);\n// firebase.auth().X(...);\nexport const firebase = getFirebaseRoot();\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}