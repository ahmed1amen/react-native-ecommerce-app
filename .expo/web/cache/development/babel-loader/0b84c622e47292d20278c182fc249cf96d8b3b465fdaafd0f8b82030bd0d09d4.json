{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _EventEmitter2 = _interopRequireDefault(require(\"../vendor/emitter/EventEmitter\"));\nvar _EventSubscriptionVendor = _interopRequireDefault(require(\"../vendor/emitter/_EventSubscriptionVendor\"));\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction checkNativeEventModule(eventType) {\n  if (eventType) {\n    if (eventType.lastIndexOf('statusBar', 0) === 0) {\n      throw new Error('`' + eventType + '` event should be registered via the StatusBarIOS module');\n    }\n    if (eventType.lastIndexOf('keyboard', 0) === 0) {\n      throw new Error('`' + eventType + '` event should be registered via the Keyboard module');\n    }\n    if (eventType === 'appStateDidChange' || eventType === 'memoryWarning') {\n      throw new Error('`' + eventType + '` event should be registered via the AppState module');\n    }\n  }\n}\nvar RCTDeviceEventEmitter = function (_EventEmitter) {\n  (0, _inherits2.default)(RCTDeviceEventEmitter, _EventEmitter);\n  var _super = _createSuper(RCTDeviceEventEmitter);\n  function RCTDeviceEventEmitter() {\n    var _this;\n    (0, _classCallCheck2.default)(this, RCTDeviceEventEmitter);\n    var sharedSubscriber = new _EventSubscriptionVendor.default();\n    _this = _super.call(this, sharedSubscriber);\n    _this.sharedSubscriber = sharedSubscriber;\n    return _this;\n  }\n  (0, _createClass2.default)(RCTDeviceEventEmitter, [{\n    key: \"addListener\",\n    value: function addListener(eventType, listener, context) {\n      if (__DEV__) {\n        checkNativeEventModule(eventType);\n      }\n      return (0, _get2.default)((0, _getPrototypeOf2.default)(RCTDeviceEventEmitter.prototype), \"addListener\", this).call(this, eventType, listener, context);\n    }\n  }, {\n    key: \"removeAllListeners\",\n    value: function removeAllListeners(eventType) {\n      if (__DEV__) {\n        checkNativeEventModule(eventType);\n      }\n      (0, _get2.default)((0, _getPrototypeOf2.default)(RCTDeviceEventEmitter.prototype), \"removeAllListeners\", this).call(this, eventType);\n    }\n  }, {\n    key: \"removeSubscription\",\n    value: function removeSubscription(subscription) {\n      if (subscription.emitter !== this) {\n        subscription.emitter.removeSubscription(subscription);\n      } else {\n        (0, _get2.default)((0, _getPrototypeOf2.default)(RCTDeviceEventEmitter.prototype), \"removeSubscription\", this).call(this, subscription);\n      }\n    }\n  }]);\n  return RCTDeviceEventEmitter;\n}(_EventEmitter2.default);\nvar _default = new RCTDeviceEventEmitter();\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_classCallCheck2","_createClass2","_get2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_EventEmitter2","_EventSubscriptionVendor","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","checkNativeEventModule","eventType","lastIndexOf","Error","RCTDeviceEventEmitter","_EventEmitter","_super","_this","sharedSubscriber","EventSubscriptionVendor","key","addListener","listener","context","__DEV__","removeAllListeners","removeSubscription","subscription","emitter","EventEmitter","_default"],"sources":["/home/ahmed/Music/softtag/Source Code/node_modules/react-native/Libraries/EventEmitter/RCTDeviceEventEmitter.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nimport EventEmitter from '../vendor/emitter/EventEmitter';\nimport type EmitterSubscription from '../vendor/emitter/_EmitterSubscription';\nimport EventSubscriptionVendor from '../vendor/emitter/_EventSubscriptionVendor';\n\nfunction checkNativeEventModule(eventType: ?string) {\n  if (eventType) {\n    if (eventType.lastIndexOf('statusBar', 0) === 0) {\n      throw new Error(\n        '`' +\n          eventType +\n          '` event should be registered via the StatusBarIOS module',\n      );\n    }\n    if (eventType.lastIndexOf('keyboard', 0) === 0) {\n      throw new Error(\n        '`' +\n          eventType +\n          '` event should be registered via the Keyboard module',\n      );\n    }\n    if (eventType === 'appStateDidChange' || eventType === 'memoryWarning') {\n      throw new Error(\n        '`' +\n          eventType +\n          '` event should be registered via the AppState module',\n      );\n    }\n  }\n}\n\n/**\n * Deprecated - subclass NativeEventEmitter to create granular event modules instead of\n * adding all event listeners directly to RCTDeviceEventEmitter.\n */\nclass RCTDeviceEventEmitter extends EventEmitter {\n  sharedSubscriber: EventSubscriptionVendor;\n\n  constructor() {\n    const sharedSubscriber = new EventSubscriptionVendor();\n    super(sharedSubscriber);\n    this.sharedSubscriber = sharedSubscriber;\n  }\n\n  addListener(\n    eventType: string,\n    listener: Function,\n    context: ?Object,\n  ): EmitterSubscription {\n    if (__DEV__) {\n      checkNativeEventModule(eventType);\n    }\n    return super.addListener(eventType, listener, context);\n  }\n\n  removeAllListeners(eventType: ?string) {\n    if (__DEV__) {\n      checkNativeEventModule(eventType);\n    }\n    super.removeAllListeners(eventType);\n  }\n\n  removeSubscription(subscription: EmitterSubscription) {\n    if (subscription.emitter !== this) {\n      subscription.emitter.removeSubscription(subscription);\n    } else {\n      super.removeSubscription(subscription);\n    }\n  }\n}\n\nexport default (new RCTDeviceEventEmitter(): RCTDeviceEventEmitter);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}