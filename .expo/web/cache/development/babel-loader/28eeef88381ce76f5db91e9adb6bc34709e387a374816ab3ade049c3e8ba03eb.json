{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createOrReuseTransformNode = createOrReuseTransformNode;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _AnimatedNode2 = _interopRequireDefault(require(\"./AnimatedNode\"));\nvar _areEqual = _interopRequireDefault(require(\"fbjs/lib/areEqual\"));\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction sanitizeTransform(inputTransform) {\n  var outputTransform = [];\n  inputTransform.forEach(function (transform) {\n    for (var key in transform) {\n      var value = transform[key];\n      if (value instanceof _AnimatedNode2.default) {\n        outputTransform.push({\n          property: key,\n          nodeID: value.__nodeID\n        });\n      } else {\n        outputTransform.push({\n          property: key,\n          value: value\n        });\n      }\n    }\n  });\n  return outputTransform;\n}\nfunction extractAnimatedParentNodes(transform) {\n  var parents = [];\n  transform.forEach(function (transform) {\n    for (var key in transform) {\n      var value = transform[key];\n      if (value instanceof _AnimatedNode2.default) {\n        parents.push(value);\n      }\n    }\n  });\n  return parents;\n}\nfunction createOrReuseTransformNode(transform, oldNode) {\n  var config = sanitizeTransform(transform);\n  if (oldNode && (0, _areEqual.default)(config, oldNode._config)) {\n    return oldNode;\n  }\n  return new AnimatedTransform(transform, config);\n}\nvar AnimatedTransform = function (_AnimatedNode) {\n  (0, _inherits2.default)(AnimatedTransform, _AnimatedNode);\n  var _super = _createSuper(AnimatedTransform);\n  function AnimatedTransform(transform, config) {\n    var _this;\n    (0, _classCallCheck2.default)(this, AnimatedTransform);\n    _this = _super.call(this, {\n      type: 'transform',\n      transform: config\n    }, extractAnimatedParentNodes(transform));\n    _this._config = config;\n    _this._transform = transform;\n    return _this;\n  }\n  (0, _createClass2.default)(AnimatedTransform, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"AnimatedTransform, id: \".concat(this.__nodeID);\n    }\n  }, {\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      return this._transform.map(function (transform) {\n        var result = {};\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof _AnimatedNode2.default) {\n            result[key] = value.__getValue();\n          }\n        }\n        return result;\n      });\n    }\n  }]);\n  return AnimatedTransform;\n}(_AnimatedNode2.default);","map":{"version":3,"names":["_AnimatedNode2","_interopRequireDefault","require","_areEqual","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","prototype","valueOf","call","e","sanitizeTransform","inputTransform","outputTransform","forEach","transform","key","value","AnimatedNode","push","property","nodeID","__nodeID","extractAnimatedParentNodes","parents","createOrReuseTransformNode","oldNode","config","deepEqual","_config","AnimatedTransform","_AnimatedNode","_inherits2","_super","_this","_classCallCheck2","type","_transform","_createClass2","toString","concat","__onEvaluate","map","__getValue"],"sources":["/home/ahmed/Music/softtag/Source Code/node_modules/react-native-reanimated/lib/module/core/AnimatedTransform.js"],"sourcesContent":["import AnimatedNode from './AnimatedNode';\n\nimport deepEqual from 'fbjs/lib/areEqual';\n\nfunction sanitizeTransform(inputTransform) {\n  const outputTransform = [];\n  inputTransform.forEach(transform => {\n    for (const key in transform) {\n      const value = transform[key];\n      if (value instanceof AnimatedNode) {\n        outputTransform.push({\n          property: key,\n          nodeID: value.__nodeID,\n        });\n      } else {\n        outputTransform.push({\n          property: key,\n          value,\n        });\n      }\n    }\n  });\n  return outputTransform;\n}\n\nfunction extractAnimatedParentNodes(transform) {\n  const parents = [];\n  transform.forEach(transform => {\n    for (const key in transform) {\n      const value = transform[key];\n      if (value instanceof AnimatedNode) {\n        parents.push(value);\n      }\n    }\n  });\n  return parents;\n}\n\nexport function createOrReuseTransformNode(transform, oldNode) {\n  const config = sanitizeTransform(transform);\n  if (oldNode && deepEqual(config, oldNode._config)) {\n    return oldNode;\n  }\n  return new AnimatedTransform(transform, config);\n}\n\nclass AnimatedTransform extends AnimatedNode {\n  constructor(transform, config) {\n    super(\n      { type: 'transform', transform: config },\n      extractAnimatedParentNodes(transform)\n    );\n    this._config = config;\n    this._transform = transform;\n  }\n\n  toString() {\n    return `AnimatedTransform, id: ${this.__nodeID}`;\n  }\n\n  __onEvaluate() {\n    return this._transform.map(transform => {\n      const result = {};\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          result[key] = value.__getValue();\n        }\n      }\n      return result;\n    });\n  }\n}\n"],"mappings":";;;;;;;;;;AAAA,IAAAA,cAAA,GAAAC,sBAAA,CAAAC,OAAA;AAEA,IAAAC,SAAA,GAAAF,sBAAA,CAAAC,OAAA;AAAA,SAAAE,aAAAC,OAAA,QAAAC,yBAAA,GAAAC,yBAAA,oBAAAC,qBAAA,QAAAC,KAAA,OAAAC,gBAAA,CAAAC,OAAA,EAAAN,OAAA,GAAAO,MAAA,MAAAN,yBAAA,QAAAO,SAAA,OAAAH,gBAAA,CAAAC,OAAA,QAAAG,WAAA,EAAAF,MAAA,GAAAG,OAAA,CAAAC,SAAA,CAAAP,KAAA,EAAAQ,SAAA,EAAAJ,SAAA,YAAAD,MAAA,GAAAH,KAAA,CAAAS,KAAA,OAAAD,SAAA,gBAAAE,2BAAA,CAAAR,OAAA,QAAAC,MAAA;AAAA,SAAAL,0BAAA,eAAAQ,OAAA,qBAAAA,OAAA,CAAAC,SAAA,oBAAAD,OAAA,CAAAC,SAAA,CAAAI,IAAA,2BAAAC,KAAA,oCAAAC,OAAA,CAAAC,SAAA,CAAAC,OAAA,CAAAC,IAAA,CAAAV,OAAA,CAAAC,SAAA,CAAAM,OAAA,8CAAAI,CAAA;AAEA,SAASC,iBAATA,CAA2BC,cAA3B,EAA2C;EACzC,IAAMC,eAAe,GAAG,EAAxB;EACAD,cAAc,CAACE,OAAf,CAAuB,UAAAC,SAAS,EAAI;IAClC,KAAK,IAAMC,GAAX,IAAkBD,SAAlB,EAA6B;MAC3B,IAAME,KAAK,GAAGF,SAAS,CAACC,GAAD,CAAvB;MACA,IAAIC,KAAK,YAAYC,sBAArB,EAAmC;QACjCL,eAAe,CAACM,IAAhB,CAAqB;UACnBC,QAAQ,EAAEJ,GADS;UAEnBK,MAAM,EAAEJ,KAAK,CAACK;QAFK,CAArB;MAID,CALD,MAKO;QACLT,eAAe,CAACM,IAAhB,CAAqB;UACnBC,QAAQ,EAAEJ,GADS;UAEnBC,KAAA,EAAAA;QAFmB,CAArB;MAID;IACF;EACF,CAfD;EAgBA,OAAOJ,eAAP;AACD;AAED,SAASU,0BAATA,CAAoCR,SAApC,EAA+C;EAC7C,IAAMS,OAAO,GAAG,EAAhB;EACAT,SAAS,CAACD,OAAV,CAAkB,UAAAC,SAAS,EAAI;IAC7B,KAAK,IAAMC,GAAX,IAAkBD,SAAlB,EAA6B;MAC3B,IAAME,KAAK,GAAGF,SAAS,CAACC,GAAD,CAAvB;MACA,IAAIC,KAAK,YAAYC,sBAArB,EAAmC;QACjCM,OAAO,CAACL,IAAR,CAAaF,KAAb;MACD;IACF;EACF,CAPD;EAQA,OAAOO,OAAP;AACD;AAEM,SAASC,0BAATA,CAAoCV,SAApC,EAA+CW,OAA/C,EAAwD;EAC7D,IAAMC,MAAM,GAAGhB,iBAAiB,CAACI,SAAD,CAAhC;EACA,IAAIW,OAAO,IAAI,IAAAE,iBAAS,EAACD,MAAD,EAASD,OAAO,CAACG,OAAjB,CAAxB,EAAmD;IACjD,OAAOH,OAAP;EACD;EACD,OAAO,IAAII,iBAAJ,CAAsBf,SAAtB,EAAiCY,MAAjC,CAAP;AACD;AAAA,IAEKG,iBAAN,aAAAC,aAAA;EAAA,IAAAC,UAAA,CAAArC,OAAA,EAAAmC,iBAAA,EAAAC,aAAA;EAAA,IAAAE,MAAA,GAAA7C,YAAA,CAAA0C,iBAAA;EACE,SAAAA,kBAAYf,SAAD,EAAYY,MAAZ,EAAoB;IAAA,IAAAO,KAAA;IAAA,IAAAC,gBAAA,CAAAxC,OAAA,QAAAmC,iBAAA;IAC7BI,KAAA,GAAAD,MAAA,CAAAxB,IAAA,OACE;MAAE2B,IAAI,EAAE,WAAR;MAAqBrB,SAAS,EAAEY;IAAhC,CADF,EAEEJ,0BAA0B,CAACR,SAAD,CAF5B;IAIAmB,KAAA,CAAKL,OAAL,GAAeF,MAAf;IACAO,KAAA,CAAKG,UAAL,GAAkBtB,SAAlB;IAAA,OAAAmB,KAAA;EACD;EAAA,IAAAI,aAAA,CAAA3C,OAAA,EAAAmC,iBAAA;IAAAd,GAAA;IAAAC,KAAA,EAED,SAAAsB,SAAA,EAAW;MACT,iCAAAC,MAAA,CAAiC,KAAKlB,QAAtC;IACD;EAAA;IAAAN,GAAA;IAAAC,KAAA,EAED,SAAAwB,aAAA,EAAe;MACb,OAAO,KAAKJ,UAAL,CAAgBK,GAAhB,CAAoB,UAAA3B,SAAS,EAAI;QACtC,IAAMnB,MAAM,GAAG,EAAf;QACA,KAAK,IAAMoB,GAAX,IAAkBD,SAAlB,EAA6B;UAC3B,IAAME,KAAK,GAAGF,SAAS,CAACC,GAAD,CAAvB;UACA,IAAIC,KAAK,YAAYC,sBAArB,EAAmC;YACjCtB,MAAM,CAACoB,GAAD,CAAN,GAAcC,KAAK,CAAC0B,UAAN,EAAd;UACD;QACF;QACD,OAAO/C,MAAP;MACD,CATM,CAAP;IAUD;EAAA;EAAA,OAAAkC,iBAAA;AAAA,EAzB6BZ,sBAAhC"},"metadata":{},"sourceType":"script","externalDependencies":[]}