{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findVariation = findVariation;\nexports.prepareMetaData = prepareMetaData;\nexports.prepareProductVariations = prepareProductVariations;\nexports.filterOptions = filterOptions;\nexports.prepareAttributes = prepareAttributes;\nexports.checkOption = checkOption;\nvar _immutable = require(\"immutable\");\nvar _lowerCase = _interopRequireDefault(require(\"lodash/lowerCase\"));\nfunction findVariation(variations, meta_data) {\n  return variations.find(function (variation) {\n    return variation.get('attributes').every(function (attribute) {\n      var option = meta_data.find(function (m) {\n        return m.get('id') === attribute.get('id') && m.get('name') === attribute.get('name');\n      });\n      if (!option) {\n        return true;\n      }\n      return attribute.equals(option);\n    });\n  });\n}\nfunction prepareMetaData(meta_data) {\n  if (!meta_data || meta_data.size < 1) {\n    return (0, _immutable.fromJS)([]);\n  }\n  var data = meta_data.toJS();\n  return (0, _immutable.fromJS)(data.map(function (value) {\n    return {\n      id: value.id,\n      name: value.name,\n      option: value.option\n    };\n  }));\n}\nfunction prepareProductVariations(variations, attributes) {\n  return variations.map(function (variation) {\n    return variation.update('attributes', function (attrs) {\n      return attrs.map(function (attr) {\n        if (attr.get('id') === 0) {\n          return (0, _immutable.fromJS)({\n            id: attr.get('id'),\n            name: attr.get('option'),\n            option: attr.get('option')\n          });\n        }\n        var options = attributes.find(function (_attr) {\n          return _attr.get('id') === attr.get('id');\n        }).get('options');\n        var option = options.find(function (value) {\n          return value.get('name') === attr.get('option');\n        });\n        return (0, _immutable.fromJS)({\n          id: attr.get('id'),\n          name: attr.get('name'),\n          option: option.get('name')\n        });\n      });\n    });\n  });\n}\nfunction filterOptions(options, attribute, variations) {\n  var _options = options.filter(function (option) {\n    return variations.some(function (variation) {\n      var attributesVariation = variation.get('attributes');\n      if (attributesVariation.size === 0) {\n        return true;\n      }\n      var _attribute = attributesVariation.find(function (attr) {\n        return attr.get('id') === attribute.get('id') && attr.get('name') === attribute.get('name');\n      });\n      if (!_attribute) {\n        return true;\n      }\n      return (0, _lowerCase.default)(_attribute.get('option')) === (0, _lowerCase.default)(option.get('option'));\n    });\n  });\n  return _options;\n}\nfunction prepareAttributes(productAttributes, attributes, variations) {\n  return productAttributes.map(function (productAttribute) {\n    var options = productAttribute.get('options');\n    var newAttribute = (0, _immutable.Map)({\n      id: productAttribute.get('id'),\n      name: productAttribute.get('name'),\n      key: (0, _lowerCase.default)(productAttribute.get('name')),\n      position: productAttribute.get('position'),\n      type: 'button'\n    });\n    if (productAttribute.get('id') === 0 || productAttribute.get('id') === '0') {\n      return newAttribute.set('options', filterOptions(options.map(function (option) {\n        return (0, _immutable.Map)({\n          name: option,\n          option: option,\n          value: option\n        });\n      }), newAttribute, variations));\n    }\n    var attribute = attributes.find(function (attr) {\n      return attr.get('id') === productAttribute.get('id');\n    });\n    var options1 = attribute.get('options').map(function (originOptions) {\n      return (0, _immutable.Map)({\n        name: originOptions.get('name'),\n        option: originOptions.get('name'),\n        value: originOptions.get('value') || originOptions.get('name')\n      });\n    });\n    var options2 = filterOptions(options1, newAttribute, variations);\n    return newAttribute.set('options', options2).set('type', attribute.get('type')).set('key', attribute.get('slug'));\n  });\n}\nfunction checkOption(variations, meta_data, option) {\n  if (meta_data.size < 1) {\n    return true;\n  }\n  var indexAttribute = meta_data.findIndex(function (i) {\n    return i.get('id') === option.get('id') && i.get('name') === option.get('name');\n  });\n  var isAttribute = indexAttribute >= 0 ? meta_data.get(indexAttribute) : null;\n  if (isAttribute && (0, _lowerCase.default)(isAttribute.get('option')) === (0, _lowerCase.default)(option.get('option'))) {\n    return true;\n  }\n  var new_meta_data = isAttribute ? meta_data.setIn([indexAttribute, 'option'], option.get('option')) : meta_data.push(option);\n  var _variations = variations.filter(function (variation) {\n    if (!variation.get('purchasable')) {\n      return false;\n    }\n    var attributes = variation.get('attributes');\n    if (attributes.size === 0) {\n      return true;\n    }\n    return attributes.every(function (attribute) {\n      var _option = new_meta_data.find(function (attr) {\n        return attr.get('id') === attribute.get('id') && attr.get('name') === attribute.get('name');\n      });\n      if (!_option) {\n        return true;\n      }\n      return (0, _lowerCase.default)(attribute.get('option')) === (0, _lowerCase.default)(_option.get('option'));\n    });\n  });\n  return _variations.size > 0;\n}","map":{"version":3,"names":["_immutable","require","_lowerCase","_interopRequireDefault","findVariation","variations","meta_data","find","variation","get","every","attribute","option","m","equals","prepareMetaData","size","fromJS","data","toJS","map","value","id","name","prepareProductVariations","attributes","update","attrs","attr","options","_attr","filterOptions","_options","filter","some","attributesVariation","_attribute","lowerCase","prepareAttributes","productAttributes","productAttribute","newAttribute","Map","key","position","type","set","options1","originOptions","options2","checkOption","indexAttribute","findIndex","i","isAttribute","new_meta_data","setIn","push","_variations","_option"],"sources":["/home/ahmed/Music/softtag/Source Code/src/modules/product/helper.js"],"sourcesContent":["import {fromJS, Map} from 'immutable';\nimport lowerCase from 'lodash/lowerCase';\n\nexport function findVariation(variations, meta_data) {\n  return variations.find(variation => {\n    return variation.get('attributes').every(attribute => {\n      const option = meta_data.find(\n        m =>\n          m.get('id') === attribute.get('id') &&\n          m.get('name') === attribute.get('name'),\n      );\n      // Any options\n      if (!option) {\n        return true;\n      }\n      return attribute.equals(option);\n    });\n  });\n}\n\nexport function prepareMetaData(meta_data) {\n  if (!meta_data || meta_data.size < 1) {\n    return fromJS([]);\n  }\n  const data = meta_data.toJS();\n  return fromJS(\n    data.map(value => ({\n      id: value.id,\n      name: value.name,\n      option: value.option,\n    })),\n  );\n}\n\n/**\n * Prepare product variations\n * @param variations: product variations\n * @param attributes: origin attribute\n * @returns {*}\n */\nexport function prepareProductVariations(variations, attributes) {\n  return variations.map(variation => {\n    return variation.update('attributes', attrs => {\n      return attrs.map(attr => {\n        if (attr.get('id') === 0) {\n          return fromJS({\n            id: attr.get('id'),\n            // attribute_name: attr.get('name'),\n            name: attr.get('option'),\n            option: attr.get('option'),\n          });\n        }\n\n        const options = attributes\n          .find(_attr => _attr.get('id') === attr.get('id'))\n          .get('options');\n        const option = options.find(\n          value => value.get('name') === attr.get('option'),\n        );\n\n        return fromJS({\n          id: attr.get('id'),\n          // attribute_name: attr.get('name'),\n          name: attr.get('name'),\n          option: option.get('name'),\n        });\n      });\n    });\n  });\n}\n\nexport function filterOptions(options, attribute, variations) {\n  const _options = options.filter(option => {\n    return variations.some(variation => {\n      const attributesVariation = variation.get('attributes');\n      // any\n      if (attributesVariation.size === 0) {\n        return true;\n      }\n\n      const _attribute = attributesVariation.find(\n        attr =>\n          attr.get('id') === attribute.get('id') &&\n          attr.get('name') === attribute.get('name'),\n      );\n\n      if (!_attribute) {\n        return true;\n      }\n\n      // match option\n      return (\n        lowerCase(_attribute.get('option')) === lowerCase(option.get('option'))\n      );\n    });\n  });\n  return _options;\n}\n\n/**\n * Prepare data for product attribute\n * @param productAttributes: list product attribute\n * @param attributes: list all attributes in website\n * @returns {*}\n */\nexport function prepareAttributes(productAttributes, attributes, variations) {\n  return productAttributes.map(productAttribute => {\n    // attribute options\n    const options = productAttribute.get('options');\n\n    const newAttribute = Map({\n      id: productAttribute.get('id'),\n      name: productAttribute.get('name'),\n      key: lowerCase(productAttribute.get('name')),\n      position: productAttribute.get('position'),\n      type: 'button',\n    });\n\n    if (\n      productAttribute.get('id') === 0 ||\n      productAttribute.get('id') === '0'\n    ) {\n      return newAttribute.set(\n        'options',\n        filterOptions(\n          options.map(option =>\n            Map({\n              name: option,\n              option,\n              value: option,\n            }),\n          ),\n          newAttribute,\n          variations,\n        ),\n      );\n    }\n\n    const attribute = attributes.find(\n      attr => attr.get('id') === productAttribute.get('id'),\n    );\n\n    // Prepare product options\n    // const options1 = options.map((option) => {\n    //   const originOptions = attribute\n    //     .get('options')\n    //     .find((op) => op.get('name') === option);\n    //   return Map({\n    //     name: originOptions.get('name'),\n    //     option: originOptions.get('name'),\n    //     value: originOptions.get('value') || originOptions.get('name'),\n    //   });\n    // });\n\n    const options1 = attribute.get('options').map(originOptions => {\n      return Map({\n        name: originOptions.get('name'),\n        option: originOptions.get('name'),\n        value: originOptions.get('value') || originOptions.get('name'),\n      });\n    });\n\n    // filter product options\n    const options2 = filterOptions(options1, newAttribute, variations);\n    return newAttribute\n      .set('options', options2)\n      .set('type', attribute.get('type'))\n      .set('key', attribute.get('slug'));\n  });\n}\n\n/**\n * Check option on/off\n * @param variations product variation\n * @param meta_data attribute selected\n * @param option current option node\n * @returns {boolean}\n */\nexport function checkOption(variations, meta_data, option) {\n  if (meta_data.size < 1) {\n    return true;\n  }\n\n  const indexAttribute = meta_data.findIndex(\n    i =>\n      i.get('id') === option.get('id') && i.get('name') === option.get('name'),\n  );\n  const isAttribute =\n    indexAttribute >= 0 ? meta_data.get(indexAttribute) : null;\n\n  if (\n    isAttribute &&\n    lowerCase(isAttribute.get('option')) === lowerCase(option.get('option'))\n  ) {\n    return true;\n  }\n  const new_meta_data = isAttribute\n    ? meta_data.setIn([indexAttribute, 'option'], option.get('option'))\n    : meta_data.push(option);\n\n  // find all variation match\n  const _variations = variations.filter(variation => {\n    if (!variation.get('purchasable')) {\n      return false;\n    }\n    const attributes = variation.get('attributes');\n    // any attributes\n    if (attributes.size === 0) {\n      return true;\n    }\n    // matches\n    return attributes.every(attribute => {\n      const _option = new_meta_data.find(\n        attr =>\n          attr.get('id') === attribute.get('id') &&\n          attr.get('name') === attribute.get('name'),\n      );\n      // Any options\n      if (!_option) {\n        return true;\n      }\n      // equals option\n      return (\n        lowerCase(attribute.get('option')) === lowerCase(_option.get('option'))\n      );\n    });\n  });\n  return _variations.size > 0;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}