{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _FontAwesome = _interopRequireDefault(require(\"react-native-vector-icons/FontAwesome\"));\nvar _getIconType = _interopRequireDefault(require(\"../helpers/getIconType\"));\nvar _this = this,\n  _jsxFileName = \"/home/ahmed/Music/softtag/Source Code/src/components/checkbox/CheckBoxIcon.js\";\nvar CheckBoxIcon = function CheckBoxIcon(_ref) {\n  var checked = _ref.checked,\n    onIconPress = _ref.onIconPress,\n    onLongIconPress = _ref.onLongIconPress,\n    size = _ref.size,\n    checkedIcon = _ref.checkedIcon,\n    uncheckedIcon = _ref.uncheckedIcon,\n    iconType = _ref.iconType,\n    checkedColor = _ref.checkedColor,\n    uncheckedColor = _ref.uncheckedColor;\n  if (checked && _react.default.isValidElement(checkedIcon)) {\n    return checkedIcon;\n  }\n  if (!checked && _react.default.isValidElement(uncheckedIcon)) {\n    return uncheckedIcon;\n  }\n  var VectorIcon = iconType ? (0, _getIconType.default)(iconType) : _FontAwesome.default;\n  return _react.default.createElement(VectorIcon, {\n    color: checked ? checkedColor : uncheckedColor,\n    name: checked ? checkedIcon : uncheckedIcon,\n    size: size || 24,\n    style: {\n      minWidth: size || 24\n    },\n    onLongPress: onLongIconPress,\n    onPress: onIconPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  });\n};\nCheckBoxIcon.propTypes = {\n  checked: _propTypes.default.bool,\n  onIconPress: _propTypes.default.func,\n  onLongIconPress: _propTypes.default.func,\n  size: _propTypes.default.number,\n  checkedIcon: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.element]),\n  uncheckedIcon: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.element]),\n  iconType: _propTypes.default.string,\n  checkedColor: _propTypes.default.string,\n  uncheckedColor: _propTypes.default.string\n};\nvar _default = CheckBoxIcon;\nexports.default = _default;","map":{"version":3,"names":["_react","_interopRequireDefault","require","_propTypes","_FontAwesome","_getIconType","_this","_jsxFileName","CheckBoxIcon","_ref","checked","onIconPress","onLongIconPress","size","checkedIcon","uncheckedIcon","iconType","checkedColor","uncheckedColor","React","isValidElement","VectorIcon","getIconType","FAIcon","default","createElement","color","name","style","minWidth","onLongPress","onPress","__self","__source","fileName","lineNumber","columnNumber","propTypes","PropTypes","bool","func","number","oneOfType","string","element","_default","exports"],"sources":["/home/ahmed/Music/softtag/Source Code/src/components/checkbox/CheckBoxIcon.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport FAIcon from 'react-native-vector-icons/FontAwesome';\n\nimport getIconType from '../helpers/getIconType';\n\nconst CheckBoxIcon = ({\n  checked,\n  onIconPress,\n  onLongIconPress,\n  size,\n  checkedIcon,\n  uncheckedIcon,\n  iconType,\n  checkedColor,\n  uncheckedColor,\n}) => {\n  if (checked && React.isValidElement(checkedIcon)) {\n    return checkedIcon;\n  }\n\n  if (!checked && React.isValidElement(uncheckedIcon)) {\n    return uncheckedIcon;\n  }\n\n  const VectorIcon = iconType ? getIconType(iconType) : FAIcon;\n\n  return (\n    <VectorIcon\n      color={checked ? checkedColor : uncheckedColor}\n      name={checked ? checkedIcon : uncheckedIcon}\n      size={size || 24}\n      style={{minWidth: size || 24}}\n      onLongPress={onLongIconPress}\n      onPress={onIconPress}\n    />\n  );\n};\n\nCheckBoxIcon.propTypes = {\n  checked: PropTypes.bool,\n  onIconPress: PropTypes.func,\n  onLongIconPress: PropTypes.func,\n  size: PropTypes.number,\n  checkedIcon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  uncheckedIcon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  iconType: PropTypes.string,\n  checkedColor: PropTypes.string,\n  uncheckedColor: PropTypes.string,\n};\n\nexport default CheckBoxIcon;\n"],"mappings":";;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,UAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,YAAA,GAAAH,sBAAA,CAAAC,OAAA;AAEA,IAAAG,YAAA,GAAAJ,sBAAA,CAAAC,OAAA;AAAiD,IAAAI,KAAA;EAAAC,YAAA;AAEjD,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAAC,IAAA,EAUZ;EAAA,IATJC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IACPC,WAAW,GAAAF,IAAA,CAAXE,WAAW;IACXC,eAAe,GAAAH,IAAA,CAAfG,eAAe;IACfC,IAAI,GAAAJ,IAAA,CAAJI,IAAI;IACJC,WAAW,GAAAL,IAAA,CAAXK,WAAW;IACXC,aAAa,GAAAN,IAAA,CAAbM,aAAa;IACbC,QAAQ,GAAAP,IAAA,CAARO,QAAQ;IACRC,YAAY,GAAAR,IAAA,CAAZQ,YAAY;IACZC,cAAc,GAAAT,IAAA,CAAdS,cAAc;EAEd,IAAIR,OAAO,IAAIS,cAAK,CAACC,cAAc,CAACN,WAAW,CAAC,EAAE;IAChD,OAAOA,WAAW;EACpB;EAEA,IAAI,CAACJ,OAAO,IAAIS,cAAK,CAACC,cAAc,CAACL,aAAa,CAAC,EAAE;IACnD,OAAOA,aAAa;EACtB;EAEA,IAAMM,UAAU,GAAGL,QAAQ,GAAG,IAAAM,oBAAW,EAACN,QAAQ,CAAC,GAAGO,oBAAM;EAE5D,OACEvB,MAAA,CAAAwB,OAAA,CAAAC,aAAA,CAACJ,UAAU;IACTK,KAAK,EAAEhB,OAAO,GAAGO,YAAY,GAAGC,cAAe;IAC/CS,IAAI,EAAEjB,OAAO,GAAGI,WAAW,GAAGC,aAAc;IAC5CF,IAAI,EAAEA,IAAI,IAAI,EAAG;IACjBe,KAAK,EAAE;MAACC,QAAQ,EAAEhB,IAAI,IAAI;IAAE,CAAE;IAC9BiB,WAAW,EAAElB,eAAgB;IAC7BmB,OAAO,EAAEpB,WAAY;IAAAqB,MAAA,EAAA1B,KAAA;IAAA2B,QAAA;MAAAC,QAAA,EAAA3B,YAAA;MAAA4B,UAAA;MAAAC,YAAA;IAAA;EAAA,EACrB;AAEN,CAAC;AAED5B,YAAY,CAAC6B,SAAS,GAAG;EACvB3B,OAAO,EAAE4B,kBAAS,CAACC,IAAI;EACvB5B,WAAW,EAAE2B,kBAAS,CAACE,IAAI;EAC3B5B,eAAe,EAAE0B,kBAAS,CAACE,IAAI;EAC/B3B,IAAI,EAAEyB,kBAAS,CAACG,MAAM;EACtB3B,WAAW,EAAEwB,kBAAS,CAACI,SAAS,CAAC,CAACJ,kBAAS,CAACK,MAAM,EAAEL,kBAAS,CAACM,OAAO,CAAC,CAAC;EACvE7B,aAAa,EAAEuB,kBAAS,CAACI,SAAS,CAAC,CAACJ,kBAAS,CAACK,MAAM,EAAEL,kBAAS,CAACM,OAAO,CAAC,CAAC;EACzE5B,QAAQ,EAAEsB,kBAAS,CAACK,MAAM;EAC1B1B,YAAY,EAAEqB,kBAAS,CAACK,MAAM;EAC9BzB,cAAc,EAAEoB,kBAAS,CAACK;AAC5B,CAAC;AAAC,IAAAE,QAAA,GAEarC,YAAY;AAAAsC,OAAA,CAAAtB,OAAA,GAAAqB,QAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}