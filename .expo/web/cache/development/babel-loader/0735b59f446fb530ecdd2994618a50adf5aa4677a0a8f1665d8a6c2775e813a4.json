{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = interpolateColors;\nvar _reactNative = require(\"react-native\");\nvar _base = require(\"../base\");\nvar _color = _interopRequireDefault(require(\"./color\"));\nvar _interpolate = _interopRequireWildcard(require(\"./interpolate\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction red(c) {\n  return c >> 16 & 255;\n}\nfunction green(c) {\n  return c >> 8 & 255;\n}\nfunction blue(c) {\n  return c & 255;\n}\nfunction opacity(c) {\n  return (c >> 24 & 255) / 255;\n}\nfunction interpolateColors(animationValue, options) {\n  var inputRange = options.inputRange,\n    outputColorRange = options.outputColorRange;\n  var colors = outputColorRange.map(_reactNative.processColor);\n  var r = (0, _base.round)((0, _interpolate.default)(animationValue, {\n    inputRange: inputRange,\n    outputRange: colors.map(red),\n    extrapolate: _interpolate.Extrapolate.CLAMP\n  }));\n  var g = (0, _base.round)((0, _interpolate.default)(animationValue, {\n    inputRange: inputRange,\n    outputRange: colors.map(green),\n    extrapolate: _interpolate.Extrapolate.CLAMP\n  }));\n  var b = (0, _base.round)((0, _interpolate.default)(animationValue, {\n    inputRange: inputRange,\n    outputRange: colors.map(blue),\n    extrapolate: _interpolate.Extrapolate.CLAMP\n  }));\n  var a = (0, _interpolate.default)(animationValue, {\n    inputRange: inputRange,\n    outputRange: colors.map(opacity),\n    extrapolate: _interpolate.Extrapolate.CLAMP\n  });\n  return (0, _color.default)(r, g, b, a);\n}","map":{"version":3,"names":["_reactNative","require","_base","_color","_interopRequireDefault","_interpolate","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","red","c","green","blue","opacity","interpolateColors","animationValue","options","inputRange","outputColorRange","colors","map","processColor","r","round","interpolate","outputRange","extrapolate","Extrapolate","CLAMP","g","b","a","color"],"sources":["/home/ahmed/Music/softtag/Source Code/node_modules/react-native-reanimated/lib/module/derived/interpolateColors.js"],"sourcesContent":["import { processColor } from 'react-native';\nimport { round } from '../base';\nimport color from './color';\nimport interpolate, { Extrapolate } from './interpolate';\n\nfunction red(c) {\n  return (c >> 16) & 255;\n}\nfunction green(c) {\n  return (c >> 8) & 255;\n}\nfunction blue(c) {\n  return c & 255;\n}\nfunction opacity(c) {\n  return ((c >> 24) & 255) / 255;\n}\n\n/**\n * Use this if you want to interpolate an `Animated.Value` into color values.\n *\n * #### Why is this needed?\n *\n * Unfortunately, if you'll pass color values directly into the `outputRange` option\n * of `interpolate()` function, that won't really work (at least at the moment).\n * See https://github.com/software-mansion/react-native-reanimated/issues/181 .\n *\n * So, for now you can just use this helper instead.\n */\nexport default function interpolateColors(animationValue, options) {\n  const { inputRange, outputColorRange } = options;\n  const colors = outputColorRange.map(processColor);\n\n  const r = round(\n    interpolate(animationValue, {\n      inputRange,\n      outputRange: colors.map(red),\n      extrapolate: Extrapolate.CLAMP,\n    })\n  );\n  const g = round(\n    interpolate(animationValue, {\n      inputRange,\n      outputRange: colors.map(green),\n      extrapolate: Extrapolate.CLAMP,\n    })\n  );\n  const b = round(\n    interpolate(animationValue, {\n      inputRange,\n      outputRange: colors.map(blue),\n      extrapolate: Extrapolate.CLAMP,\n    })\n  );\n  const a = interpolate(animationValue, {\n    inputRange,\n    outputRange: colors.map(opacity),\n    extrapolate: Extrapolate.CLAMP,\n  });\n\n  return color(r, g, b, a);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}