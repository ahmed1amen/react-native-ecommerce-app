{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.navigate = navigate;\nexports.back = back;\nexports.setParams = setParams;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _native = require(\"@react-navigation/native\");\nfunction navigate(_ref) {\n  var routeName = _ref.routeName,\n    params = _ref.params,\n    key = _ref.key,\n    action = _ref.action;\n  if (action !== undefined) {\n    throw new Error('Sub-actions are not supported for `navigate`. Remove the `action` key from the options.');\n  }\n  return _native.CommonActions.navigate({\n    name: routeName,\n    key: key,\n    params: params\n  });\n}\nfunction back(options) {\n  return (options === null || options === void 0 ? void 0 : options.key) != null ? function (state) {\n    return (0, _extends2.default)({}, _native.CommonActions.goBack(), {\n      source: options.key,\n      target: state.key\n    });\n  } : _native.CommonActions.goBack();\n}\nfunction setParams(_ref2) {\n  var params = _ref2.params,\n    key = _ref2.key;\n  return (0, _extends2.default)({}, _native.CommonActions.setParams(params), key !== undefined ? {\n    source: key\n  } : null);\n}","map":{"version":3,"names":["_native","require","navigate","_ref","routeName","params","key","action","undefined","Error","CommonActions","name","back","options","state","_extends2","default","goBack","source","target","setParams","_ref2"],"sources":["/home/ahmed/Music/softtag/Source Code/node_modules/@react-navigation/compat/lib/module/NavigationActions.tsx"],"sourcesContent":["import { CommonActions, NavigationState } from '@react-navigation/native';\n\nexport function navigate({\n  routeName,\n  params,\n  key,\n  action,\n}: {\n  routeName: string;\n  params?: object;\n  key?: string;\n  action?: never;\n}): CommonActions.Action {\n  if (action !== undefined) {\n    throw new Error(\n      'Sub-actions are not supported for `navigate`. Remove the `action` key from the options.'\n    );\n  }\n\n  return CommonActions.navigate({\n    name: routeName,\n    key: key,\n    params: params,\n  });\n}\n\nexport function back(options?: { key?: null | string }) {\n  return options?.key != null\n    ? (state: NavigationState) => ({\n        ...CommonActions.goBack(),\n        source: options.key,\n        target: state.key,\n      })\n    : CommonActions.goBack();\n}\n\nexport function setParams({\n  params,\n  key,\n}: {\n  params: object;\n  key?: string;\n}): CommonActions.Action {\n  return {\n    ...CommonActions.setParams(params),\n    ...(key !== undefined ? { source: key } : null),\n  };\n}\n"],"mappings":";;;;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AAEO,SAASC,QAATA,CAAAC,IAAA,EAUkB;EAAA,IATvBC,SADuB,GAAAD,IAAA,CACvBC,SADuB;IAEvBC,MAFuB,GAAAF,IAAA,CAEvBE,MAFuB;IAGvBC,GAHuB,GAAAH,IAAA,CAGvBG,GAHuB;IAIvBC,MAAA,GAAAJ,IAAA,CAAAI,MAAA;EAOA,IAAIA,MAAM,KAAKC,SAAf,EAA0B;IACxB,MAAM,IAAIC,KAAJ,CACJ,yFADI,CAAN;EAGD;EAED,OAAOC,qBAAa,CAACR,QAAd,CAAuB;IAC5BS,IAAI,EAAEP,SADsB;IAE5BE,GAAG,EAAEA,GAFuB;IAG5BD,MAAM,EAAEA;EAHoB,CAAvB,CAAP;AAKD;AAEM,SAASO,IAATA,CAAcC,OAAd,EAAiD;EACtD,OAAO,CAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEP,GAAT,KAAgB,IAAhB,GACF,UAAAQ,KAAD;IAAA,WAAAC,SAAA,CAAAC,OAAA,MACKN,qBAAa,CAACO,MAAd,EADwB;MAE3BC,MAAM,EAAEL,OAAO,CAACP,GAFW;MAG3Ba,MAAM,EAAEL,KAAK,CAACR;IAAA;EAAA,CAJb,GAMHI,qBAAa,CAACO,MAAd,EANJ;AAOD;AAEM,SAASG,SAATA,CAAAC,KAAA,EAMkB;EAAA,IALvBhB,MADwB,GAAAgB,KAAA,CACxBhB,MADwB;IAExBC,GAAA,GAAAe,KAAA,CAAAf,GAAA;EAKA,WAAAS,SAAA,CAAAC,OAAA,MACKN,qBAAa,CAACU,SAAd,CAAwBf,MAAxB,CADE,EAEDC,GAAG,KAAKE,SAAR,GAAoB;IAAEU,MAAM,EAAEZ;EAAV,CAApB,GAAsC,IAA1C;AAEH"},"metadata":{},"sourceType":"script","externalDependencies":[]}