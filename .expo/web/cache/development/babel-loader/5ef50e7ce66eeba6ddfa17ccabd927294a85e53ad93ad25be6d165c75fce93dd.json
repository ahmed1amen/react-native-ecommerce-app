{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseInterpolation = parseInterpolation;\nexports.parseComponentStack = parseComponentStack;\nexports.parseLogBoxException = parseLogBoxException;\nexports.parseLogBoxLog = parseLogBoxLog;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _UTFSequence = _interopRequireDefault(require(\"../../UTFSequence\"));\nvar _stringifySafe = _interopRequireDefault(require(\"../../Utilities/stringifySafe\"));\nvar _parseErrorStack = _interopRequireDefault(require(\"../../Core/Devtools/parseErrorStack\"));\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nvar BABEL_TRANSFORM_ERROR_FORMAT = /^(?:TransformError )?(?:SyntaxError: |ReferenceError: )(.*): (.*) \\((\\d+):(\\d+)\\)\\n\\n([\\s\\S]+)/;\nvar BABEL_CODE_FRAME_ERROR_FORMAT = /^(?:TransformError )?(?:(?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*):? (?:(?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*?)(\\/(?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*): ((?:[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+?)\\n([ >]{2}[\\t-\\r 0-9\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+ \\|(?:[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+|\\x1B(?:[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)/;\nvar METRO_ERROR_FORMAT = /^(?:InternalError Metro has encountered an error:) ((?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*): ((?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*) \\(([0-9]+):([0-9]+)\\)\\n\\n((?:[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)/;\nvar SUBSTITUTION = _UTFSequence.default.BOM + '%s';\nfunction parseInterpolation(args) {\n  var categoryParts = [];\n  var contentParts = [];\n  var substitutionOffsets = [];\n  var remaining = (0, _toConsumableArray2.default)(args);\n  if (typeof remaining[0] === 'string') {\n    var formatString = String(remaining.shift());\n    var formatStringParts = formatString.split('%s');\n    var substitutionCount = formatStringParts.length - 1;\n    var substitutions = remaining.splice(0, substitutionCount);\n    var categoryString = '';\n    var contentString = '';\n    var substitutionIndex = 0;\n    for (var _iterator = _createForOfIteratorHelperLoose(formatStringParts), _step; !(_step = _iterator()).done;) {\n      var formatStringPart = _step.value;\n      categoryString += formatStringPart;\n      contentString += formatStringPart;\n      if (substitutionIndex < substitutionCount) {\n        if (substitutionIndex < substitutions.length) {\n          var substitution = typeof substitutions[substitutionIndex] === 'string' ? substitutions[substitutionIndex] : (0, _stringifySafe.default)(substitutions[substitutionIndex]);\n          substitutionOffsets.push({\n            length: substitution.length,\n            offset: contentString.length\n          });\n          categoryString += SUBSTITUTION;\n          contentString += substitution;\n        } else {\n          substitutionOffsets.push({\n            length: 2,\n            offset: contentString.length\n          });\n          categoryString += '%s';\n          contentString += '%s';\n        }\n        substitutionIndex++;\n      }\n    }\n    categoryParts.push(categoryString);\n    contentParts.push(contentString);\n  }\n  var remainingArgs = remaining.map(function (arg) {\n    return typeof arg === 'string' ? arg : (0, _stringifySafe.default)(arg);\n  });\n  categoryParts.push.apply(categoryParts, (0, _toConsumableArray2.default)(remainingArgs));\n  contentParts.push.apply(contentParts, (0, _toConsumableArray2.default)(remainingArgs));\n  return {\n    category: categoryParts.join(' '),\n    message: {\n      content: contentParts.join(' '),\n      substitutions: substitutionOffsets\n    }\n  };\n}\nfunction isComponentStack(consoleArgument) {\n  var isOldComponentStackFormat = / {4}in/.test(consoleArgument);\n  var isNewComponentStackFormat = / {4}at/.test(consoleArgument);\n  var isNewJSCComponentStackFormat = /@.*\\n/.test(consoleArgument);\n  return isOldComponentStackFormat || isNewComponentStackFormat || isNewJSCComponentStackFormat;\n}\nfunction parseComponentStack(message) {\n  var stack = (0, _parseErrorStack.default)(message);\n  if (stack && stack.length > 0) {\n    return stack.map(function (frame) {\n      return {\n        content: frame.methodName,\n        collapse: frame.collapse || false,\n        fileName: frame.file == null ? 'unknown' : frame.file,\n        location: {\n          column: frame.column == null ? -1 : frame.column,\n          row: frame.lineNumber == null ? -1 : frame.lineNumber\n        }\n      };\n    });\n  }\n  return message.split(/\\n {4}in /g).map(function (s) {\n    if (!s) {\n      return null;\n    }\n    var match = s.match(/(.*) \\(at (.*\\.js):([\\d]+)\\)/);\n    if (!match) {\n      return null;\n    }\n    var _match$slice = match.slice(1),\n      _match$slice2 = (0, _slicedToArray2.default)(_match$slice, 3),\n      content = _match$slice2[0],\n      fileName = _match$slice2[1],\n      row = _match$slice2[2];\n    return {\n      content: content,\n      fileName: fileName,\n      location: {\n        column: -1,\n        row: parseInt(row, 10)\n      }\n    };\n  }).filter(Boolean);\n}\nfunction parseLogBoxException(error) {\n  var message = error.originalMessage != null ? error.originalMessage : 'Unknown';\n  var metroInternalError = message.match(METRO_ERROR_FORMAT);\n  if (metroInternalError) {\n    var _metroInternalError$s = metroInternalError.slice(1),\n      _metroInternalError$s2 = (0, _slicedToArray2.default)(_metroInternalError$s, 5),\n      content = _metroInternalError$s2[0],\n      fileName = _metroInternalError$s2[1],\n      row = _metroInternalError$s2[2],\n      column = _metroInternalError$s2[3],\n      codeFrame = _metroInternalError$s2[4];\n    return {\n      level: 'fatal',\n      type: 'Metro Error',\n      stack: [],\n      isComponentError: false,\n      componentStack: [],\n      codeFrame: {\n        fileName: fileName,\n        location: {\n          row: parseInt(row, 10),\n          column: parseInt(column, 10)\n        },\n        content: codeFrame\n      },\n      message: {\n        content: content,\n        substitutions: []\n      },\n      category: fileName + \"-\" + row + \"-\" + column\n    };\n  }\n  var babelTransformError = message.match(BABEL_TRANSFORM_ERROR_FORMAT);\n  if (babelTransformError) {\n    var _babelTransformError$ = babelTransformError.slice(1),\n      _babelTransformError$2 = (0, _slicedToArray2.default)(_babelTransformError$, 5),\n      _fileName = _babelTransformError$2[0],\n      _content = _babelTransformError$2[1],\n      _row = _babelTransformError$2[2],\n      _column = _babelTransformError$2[3],\n      _codeFrame = _babelTransformError$2[4];\n    return {\n      level: 'syntax',\n      stack: [],\n      isComponentError: false,\n      componentStack: [],\n      codeFrame: {\n        fileName: _fileName,\n        location: {\n          row: parseInt(_row, 10),\n          column: parseInt(_column, 10)\n        },\n        content: _codeFrame\n      },\n      message: {\n        content: _content,\n        substitutions: []\n      },\n      category: _fileName + \"-\" + _row + \"-\" + _column\n    };\n  }\n  var babelCodeFrameError = message.match(BABEL_CODE_FRAME_ERROR_FORMAT);\n  if (babelCodeFrameError) {\n    var _babelCodeFrameError$ = babelCodeFrameError.slice(1),\n      _babelCodeFrameError$2 = (0, _slicedToArray2.default)(_babelCodeFrameError$, 3),\n      _fileName2 = _babelCodeFrameError$2[0],\n      _content2 = _babelCodeFrameError$2[1],\n      _codeFrame2 = _babelCodeFrameError$2[2];\n    return {\n      level: 'syntax',\n      stack: [],\n      isComponentError: false,\n      componentStack: [],\n      codeFrame: {\n        fileName: _fileName2,\n        location: null,\n        content: _codeFrame2\n      },\n      message: {\n        content: _content2,\n        substitutions: []\n      },\n      category: _fileName2 + \"-\" + 1 + \"-\" + 1\n    };\n  }\n  if (message.match(/^TransformError /)) {\n    return {\n      level: 'syntax',\n      stack: error.stack,\n      isComponentError: error.isComponentError,\n      componentStack: [],\n      message: {\n        content: message,\n        substitutions: []\n      },\n      category: message\n    };\n  }\n  var componentStack = error.componentStack;\n  if (error.isFatal || error.isComponentError) {\n    return (0, _extends2.default)({\n      level: 'fatal',\n      stack: error.stack,\n      isComponentError: error.isComponentError,\n      componentStack: componentStack != null ? parseComponentStack(componentStack) : []\n    }, parseInterpolation([message]));\n  }\n  if (componentStack != null) {\n    return (0, _extends2.default)({\n      level: 'error',\n      stack: error.stack,\n      isComponentError: error.isComponentError,\n      componentStack: parseComponentStack(componentStack)\n    }, parseInterpolation([message]));\n  }\n  return (0, _extends2.default)({\n    level: 'error',\n    stack: error.stack,\n    isComponentError: error.isComponentError\n  }, parseLogBoxLog([message]));\n}\nfunction parseLogBoxLog(args) {\n  var message = args[0];\n  var argsWithoutComponentStack = [];\n  var componentStack = [];\n  if (typeof message === 'string' && message.slice(-2) === '%s' && args.length > 0) {\n    var lastArg = args[args.length - 1];\n    if (typeof lastArg === 'string' && isComponentStack(lastArg)) {\n      argsWithoutComponentStack = args.slice(0, -1);\n      argsWithoutComponentStack[0] = message.slice(0, -2);\n      componentStack = parseComponentStack(lastArg);\n    }\n  }\n  if (componentStack.length === 0) {\n    for (var _iterator2 = _createForOfIteratorHelperLoose(args), _step2; !(_step2 = _iterator2()).done;) {\n      var arg = _step2.value;\n      if (typeof arg === 'string' && isComponentStack(arg)) {\n        var messageEndIndex = arg.search(/\\n {4}(in|at) /);\n        if (messageEndIndex < 0) {\n          messageEndIndex = arg.search(/\\n/);\n        }\n        if (messageEndIndex > 0) {\n          argsWithoutComponentStack.push(arg.slice(0, messageEndIndex));\n        }\n        componentStack = parseComponentStack(arg);\n      } else {\n        argsWithoutComponentStack.push(arg);\n      }\n    }\n  }\n  return (0, _extends2.default)({}, parseInterpolation(argsWithoutComponentStack), {\n    componentStack: componentStack\n  });\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","parseInterpolation","parseComponentStack","parseLogBoxException","parseLogBoxLog","_extends2","_slicedToArray2","_toConsumableArray2","_UTFSequence","_stringifySafe","_parseErrorStack","_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","call","next","bind","Array","isArray","_unsupportedIterableToArray","length","i","done","TypeError","minLen","_arrayLikeToArray","n","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","BABEL_TRANSFORM_ERROR_FORMAT","BABEL_CODE_FRAME_ERROR_FORMAT","METRO_ERROR_FORMAT","SUBSTITUTION","UTFSequence","BOM","args","categoryParts","contentParts","substitutionOffsets","remaining","default","formatString","String","shift","formatStringParts","split","substitutionCount","substitutions","splice","categoryString","contentString","substitutionIndex","_iterator","_step","formatStringPart","substitution","stringifySafe","push","offset","remainingArgs","map","arg","apply","category","join","message","content","isComponentStack","consoleArgument","isOldComponentStackFormat","isNewComponentStackFormat","isNewJSCComponentStackFormat","stack","parseErrorStack","frame","methodName","collapse","fileName","file","location","column","row","lineNumber","s","match","_match$slice","_match$slice2","parseInt","filter","Boolean","error","originalMessage","metroInternalError","_metroInternalError$s","_metroInternalError$s2","codeFrame","level","type","isComponentError","componentStack","babelTransformError","_babelTransformError$","_babelTransformError$2","babelCodeFrameError","_babelCodeFrameError$","_babelCodeFrameError$2","isFatal","argsWithoutComponentStack","lastArg","_iterator2","_step2","messageEndIndex","search"],"sources":["/home/ahmed/Music/softtag/Source Code/node_modules/react-native/Libraries/LogBox/Data/parseLogBoxLog.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport UTFSequence from '../../UTFSequence';\nimport stringifySafe from '../../Utilities/stringifySafe';\nimport type {ExceptionData} from '../../Core/NativeExceptionsManager';\nimport type {LogBoxLogData} from './LogBoxLog';\nimport parseErrorStack from '../../Core/Devtools/parseErrorStack';\n\nconst BABEL_TRANSFORM_ERROR_FORMAT = /^(?:TransformError )?(?:SyntaxError: |ReferenceError: )(.*): (.*) \\((\\d+):(\\d+)\\)\\n\\n([\\s\\S]+)/;\nconst BABEL_CODE_FRAME_ERROR_FORMAT = /^(?:TransformError )?(?:.*):? (?:.*?)(\\/.*): ([\\s\\S]+?)\\n([ >]{2}[\\d\\s]+ \\|[\\s\\S]+|\\u{001b}[\\s\\S]+)/u;\nconst METRO_ERROR_FORMAT = /^(?:InternalError Metro has encountered an error:) (.*): (.*) \\((\\d+):(\\d+)\\)\\n\\n([\\s\\S]+)/u;\n\nexport type ExtendedExceptionData = ExceptionData & {\n  isComponentError: boolean,\n  ...\n};\nexport type Category = string;\nexport type CodeFrame = $ReadOnly<{|\n  content: string,\n  location: ?{\n    row: number,\n    column: number,\n    ...\n  },\n  fileName: string,\n\n  // TODO: When React switched to using call stack frames,\n  // we gained the ability to use the collapse flag, but\n  // it is not integrated into the LogBox UI.\n  collapse?: boolean,\n|}>;\nexport type Message = $ReadOnly<{|\n  content: string,\n  substitutions: $ReadOnlyArray<\n    $ReadOnly<{|\n      length: number,\n      offset: number,\n    |}>,\n  >,\n|}>;\n\nexport type ComponentStack = $ReadOnlyArray<CodeFrame>;\n\nconst SUBSTITUTION = UTFSequence.BOM + '%s';\n\nexport function parseInterpolation(\n  args: $ReadOnlyArray<mixed>,\n): $ReadOnly<{|\n  category: Category,\n  message: Message,\n|}> {\n  const categoryParts = [];\n  const contentParts = [];\n  const substitutionOffsets = [];\n\n  const remaining = [...args];\n  if (typeof remaining[0] === 'string') {\n    const formatString = String(remaining.shift());\n    const formatStringParts = formatString.split('%s');\n    const substitutionCount = formatStringParts.length - 1;\n    const substitutions = remaining.splice(0, substitutionCount);\n\n    let categoryString = '';\n    let contentString = '';\n\n    let substitutionIndex = 0;\n    for (const formatStringPart of formatStringParts) {\n      categoryString += formatStringPart;\n      contentString += formatStringPart;\n\n      if (substitutionIndex < substitutionCount) {\n        if (substitutionIndex < substitutions.length) {\n          // Don't stringify a string type.\n          // It adds quotation mark wrappers around the string,\n          // which causes the LogBox to look odd.\n          const substitution =\n            typeof substitutions[substitutionIndex] === 'string'\n              ? substitutions[substitutionIndex]\n              : stringifySafe(substitutions[substitutionIndex]);\n          substitutionOffsets.push({\n            length: substitution.length,\n            offset: contentString.length,\n          });\n\n          categoryString += SUBSTITUTION;\n          contentString += substitution;\n        } else {\n          substitutionOffsets.push({\n            length: 2,\n            offset: contentString.length,\n          });\n\n          categoryString += '%s';\n          contentString += '%s';\n        }\n\n        substitutionIndex++;\n      }\n    }\n\n    categoryParts.push(categoryString);\n    contentParts.push(contentString);\n  }\n\n  const remainingArgs = remaining.map(arg => {\n    // Don't stringify a string type.\n    // It adds quotation mark wrappers around the string,\n    // which causes the LogBox to look odd.\n    return typeof arg === 'string' ? arg : stringifySafe(arg);\n  });\n  categoryParts.push(...remainingArgs);\n  contentParts.push(...remainingArgs);\n\n  return {\n    category: categoryParts.join(' '),\n    message: {\n      content: contentParts.join(' '),\n      substitutions: substitutionOffsets,\n    },\n  };\n}\n\nfunction isComponentStack(consoleArgument: string) {\n  const isOldComponentStackFormat = / {4}in/.test(consoleArgument);\n  const isNewComponentStackFormat = / {4}at/.test(consoleArgument);\n  const isNewJSCComponentStackFormat = /@.*\\n/.test(consoleArgument);\n\n  return (\n    isOldComponentStackFormat ||\n    isNewComponentStackFormat ||\n    isNewJSCComponentStackFormat\n  );\n}\n\nexport function parseComponentStack(message: string): ComponentStack {\n  // In newer versions of React, the component stack is formatted as a call stack frame.\n  // First try to parse the component stack as a call stack frame, and if that doesn't\n  // work then we'll fallback to the old custom component stack format parsing.\n  const stack = parseErrorStack(message);\n  if (stack && stack.length > 0) {\n    return stack.map(frame => ({\n      content: frame.methodName,\n      collapse: frame.collapse || false,\n      fileName: frame.file == null ? 'unknown' : frame.file,\n      location: {\n        column: frame.column == null ? -1 : frame.column,\n        row: frame.lineNumber == null ? -1 : frame.lineNumber,\n      },\n    }));\n  }\n\n  return message\n    .split(/\\n {4}in /g)\n    .map(s => {\n      if (!s) {\n        return null;\n      }\n      const match = s.match(/(.*) \\(at (.*\\.js):([\\d]+)\\)/);\n      if (!match) {\n        return null;\n      }\n\n      let [content, fileName, row] = match.slice(1);\n      return {\n        content,\n        fileName,\n        location: {column: -1, row: parseInt(row, 10)},\n      };\n    })\n    .filter(Boolean);\n}\n\nexport function parseLogBoxException(\n  error: ExtendedExceptionData,\n): LogBoxLogData {\n  const message =\n    error.originalMessage != null ? error.originalMessage : 'Unknown';\n\n  const metroInternalError = message.match(METRO_ERROR_FORMAT);\n  if (metroInternalError) {\n    const [\n      content,\n      fileName,\n      row,\n      column,\n      codeFrame,\n    ] = metroInternalError.slice(1);\n\n    return {\n      level: 'fatal',\n      type: 'Metro Error',\n      stack: [],\n      isComponentError: false,\n      componentStack: [],\n      codeFrame: {\n        fileName,\n        location: {\n          row: parseInt(row, 10),\n          column: parseInt(column, 10),\n        },\n        content: codeFrame,\n      },\n      message: {\n        content,\n        substitutions: [],\n      },\n      category: `${fileName}-${row}-${column}`,\n    };\n  }\n\n  const babelTransformError = message.match(BABEL_TRANSFORM_ERROR_FORMAT);\n  if (babelTransformError) {\n    // Transform errors are thrown from inside the Babel transformer.\n    const [\n      fileName,\n      content,\n      row,\n      column,\n      codeFrame,\n    ] = babelTransformError.slice(1);\n\n    return {\n      level: 'syntax',\n      stack: [],\n      isComponentError: false,\n      componentStack: [],\n      codeFrame: {\n        fileName,\n        location: {\n          row: parseInt(row, 10),\n          column: parseInt(column, 10),\n        },\n        content: codeFrame,\n      },\n      message: {\n        content,\n        substitutions: [],\n      },\n      category: `${fileName}-${row}-${column}`,\n    };\n  }\n\n  const babelCodeFrameError = message.match(BABEL_CODE_FRAME_ERROR_FORMAT);\n\n  if (babelCodeFrameError) {\n    // Codeframe errors are thrown from any use of buildCodeFrameError.\n    const [fileName, content, codeFrame] = babelCodeFrameError.slice(1);\n    return {\n      level: 'syntax',\n      stack: [],\n      isComponentError: false,\n      componentStack: [],\n      codeFrame: {\n        fileName,\n        location: null, // We are not given the location.\n        content: codeFrame,\n      },\n      message: {\n        content,\n        substitutions: [],\n      },\n      category: `${fileName}-${1}-${1}`,\n    };\n  }\n\n  if (message.match(/^TransformError /)) {\n    return {\n      level: 'syntax',\n      stack: error.stack,\n      isComponentError: error.isComponentError,\n      componentStack: [],\n      message: {\n        content: message,\n        substitutions: [],\n      },\n      category: message,\n    };\n  }\n\n  const componentStack = error.componentStack;\n  if (error.isFatal || error.isComponentError) {\n    return {\n      level: 'fatal',\n      stack: error.stack,\n      isComponentError: error.isComponentError,\n      componentStack:\n        componentStack != null ? parseComponentStack(componentStack) : [],\n      ...parseInterpolation([message]),\n    };\n  }\n\n  if (componentStack != null) {\n    // It is possible that console errors have a componentStack.\n    return {\n      level: 'error',\n      stack: error.stack,\n      isComponentError: error.isComponentError,\n      componentStack: parseComponentStack(componentStack),\n      ...parseInterpolation([message]),\n    };\n  }\n\n  // Most `console.error` calls won't have a componentStack. We parse them like\n  // regular logs which have the component stack burried in the message.\n  return {\n    level: 'error',\n    stack: error.stack,\n    isComponentError: error.isComponentError,\n    ...parseLogBoxLog([message]),\n  };\n}\n\nexport function parseLogBoxLog(\n  args: $ReadOnlyArray<mixed>,\n): {|\n  componentStack: ComponentStack,\n  category: Category,\n  message: Message,\n|} {\n  const message = args[0];\n  let argsWithoutComponentStack = [];\n  let componentStack = [];\n\n  // Extract component stack from warnings like \"Some warning%s\".\n  if (\n    typeof message === 'string' &&\n    message.slice(-2) === '%s' &&\n    args.length > 0\n  ) {\n    const lastArg = args[args.length - 1];\n    if (typeof lastArg === 'string' && isComponentStack(lastArg)) {\n      argsWithoutComponentStack = args.slice(0, -1);\n      argsWithoutComponentStack[0] = message.slice(0, -2);\n      componentStack = parseComponentStack(lastArg);\n    }\n  }\n\n  if (componentStack.length === 0) {\n    // Try finding the component stack elsewhere.\n    for (const arg of args) {\n      if (typeof arg === 'string' && isComponentStack(arg)) {\n        // Strip out any messages before the component stack.\n        let messageEndIndex = arg.search(/\\n {4}(in|at) /);\n        if (messageEndIndex < 0) {\n          // Handle JSC component stacks.\n          messageEndIndex = arg.search(/\\n/);\n        }\n        if (messageEndIndex > 0) {\n          argsWithoutComponentStack.push(arg.slice(0, messageEndIndex));\n        }\n\n        componentStack = parseComponentStack(arg);\n      } else {\n        argsWithoutComponentStack.push(arg);\n      }\n    }\n  }\n\n  return {\n    ...parseInterpolation(argsWithoutComponentStack),\n    componentStack,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}