{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteStack = deleteStack;\nexports.symbolicate = symbolicate;\nvar _symbolicateStackTrace = _interopRequireDefault(require(\"../../Core/Devtools/symbolicateStackTrace\"));\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nvar cache = new Map();\nvar sanitize = function sanitize(_ref) {\n  var maybeStack = _ref.stack,\n    codeFrame = _ref.codeFrame;\n  if (!Array.isArray(maybeStack)) {\n    throw new Error('Expected stack to be an array.');\n  }\n  var stack = [];\n  for (var _iterator = _createForOfIteratorHelperLoose(maybeStack), _step; !(_step = _iterator()).done;) {\n    var maybeFrame = _step.value;\n    var collapse = false;\n    if ('collapse' in maybeFrame) {\n      if (typeof maybeFrame.collapse !== 'boolean') {\n        throw new Error('Expected stack frame `collapse` to be a boolean.');\n      }\n      collapse = maybeFrame.collapse;\n    }\n    stack.push({\n      column: maybeFrame.column,\n      file: maybeFrame.file,\n      lineNumber: maybeFrame.lineNumber,\n      methodName: maybeFrame.methodName,\n      collapse: collapse\n    });\n  }\n  return {\n    stack: stack,\n    codeFrame: codeFrame\n  };\n};\nfunction deleteStack(stack) {\n  cache.delete(stack);\n}\nfunction symbolicate(stack) {\n  var promise = cache.get(stack);\n  if (promise == null) {\n    promise = (0, _symbolicateStackTrace.default)(stack).then(sanitize);\n    cache.set(stack, promise);\n  }\n  return promise;\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","deleteStack","symbolicate","_symbolicateStackTrace","_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","call","next","bind","Array","isArray","_unsupportedIterableToArray","length","i","done","TypeError","minLen","_arrayLikeToArray","n","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","cache","Map","sanitize","_ref","maybeStack","stack","codeFrame","Error","_iterator","_step","maybeFrame","collapse","push","column","file","lineNumber","methodName","delete","promise","get","symbolicateStackTrace","then","set"],"sources":["/home/ahmed/Music/softtag/Source Code/node_modules/react-native/Libraries/LogBox/Data/LogBoxSymbolication.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport symbolicateStackTrace from '../../Core/Devtools/symbolicateStackTrace';\n\nimport type {StackFrame} from '../../Core/NativeExceptionsManager';\nimport type {SymbolicatedStackTrace} from '../../Core/Devtools/symbolicateStackTrace';\n\nexport type Stack = Array<StackFrame>;\n\nconst cache: Map<Stack, Promise<SymbolicatedStackTrace>> = new Map();\n\n/**\n * Sanitize because sometimes, `symbolicateStackTrace` gives us invalid values.\n */\nconst sanitize = ({\n  stack: maybeStack,\n  codeFrame,\n}: SymbolicatedStackTrace): SymbolicatedStackTrace => {\n  if (!Array.isArray(maybeStack)) {\n    throw new Error('Expected stack to be an array.');\n  }\n  const stack = [];\n  for (const maybeFrame of maybeStack) {\n    let collapse = false;\n    if ('collapse' in maybeFrame) {\n      if (typeof maybeFrame.collapse !== 'boolean') {\n        throw new Error('Expected stack frame `collapse` to be a boolean.');\n      }\n      collapse = maybeFrame.collapse;\n    }\n    stack.push({\n      column: maybeFrame.column,\n      file: maybeFrame.file,\n      lineNumber: maybeFrame.lineNumber,\n      methodName: maybeFrame.methodName,\n      collapse,\n    });\n  }\n  return {stack, codeFrame};\n};\n\nexport function deleteStack(stack: Stack): void {\n  cache.delete(stack);\n}\n\nexport function symbolicate(stack: Stack): Promise<SymbolicatedStackTrace> {\n  let promise = cache.get(stack);\n  if (promise == null) {\n    promise = symbolicateStackTrace(stack).then(sanitize);\n    cache.set(stack, promise);\n  }\n\n  return promise;\n}\n"],"mappings":"AAUA,YAAY;;AAAC,IAAAA,sBAAA,GAAAC,OAAA;AAAAC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,KAAA;AAAA;AAAAD,OAAA,CAAAE,WAAA,GAAAA,WAAA;AAAAF,OAAA,CAAAG,WAAA,GAAAA,WAAA;AAEb,IAAAC,sBAAA,GAAAR,sBAAA,CAAAC,OAAA;AAA8E,SAAAQ,gCAAAC,CAAA,EAAAC,cAAA,QAAAC,EAAA,UAAAC,MAAA,oBAAAH,CAAA,CAAAG,MAAA,CAAAC,QAAA,KAAAJ,CAAA,oBAAAE,EAAA,UAAAA,EAAA,GAAAA,EAAA,CAAAG,IAAA,CAAAL,CAAA,GAAAM,IAAA,CAAAC,IAAA,CAAAL,EAAA,OAAAM,KAAA,CAAAC,OAAA,CAAAT,CAAA,MAAAE,EAAA,GAAAQ,2BAAA,CAAAV,CAAA,MAAAC,cAAA,IAAAD,CAAA,WAAAA,CAAA,CAAAW,MAAA,qBAAAT,EAAA,EAAAF,CAAA,GAAAE,EAAA,MAAAU,CAAA,+BAAAA,CAAA,IAAAZ,CAAA,CAAAW,MAAA,WAAAE,IAAA,mBAAAA,IAAA,SAAAlB,KAAA,EAAAK,CAAA,CAAAY,CAAA,sBAAAE,SAAA;AAAA,SAAAJ,4BAAAV,CAAA,EAAAe,MAAA,SAAAf,CAAA,qBAAAA,CAAA,sBAAAgB,iBAAA,CAAAhB,CAAA,EAAAe,MAAA,OAAAE,CAAA,GAAAzB,MAAA,CAAA0B,SAAA,CAAAC,QAAA,CAAAd,IAAA,CAAAL,CAAA,EAAAoB,KAAA,aAAAH,CAAA,iBAAAjB,CAAA,CAAAqB,WAAA,EAAAJ,CAAA,GAAAjB,CAAA,CAAAqB,WAAA,CAAAC,IAAA,MAAAL,CAAA,cAAAA,CAAA,mBAAAT,KAAA,CAAAe,IAAA,CAAAvB,CAAA,OAAAiB,CAAA,+DAAAO,IAAA,CAAAP,CAAA,UAAAD,iBAAA,CAAAhB,CAAA,EAAAe,MAAA;AAAA,SAAAC,kBAAAS,GAAA,EAAAC,GAAA,QAAAA,GAAA,YAAAA,GAAA,GAAAD,GAAA,CAAAd,MAAA,EAAAe,GAAA,GAAAD,GAAA,CAAAd,MAAA,WAAAC,CAAA,MAAAe,IAAA,OAAAnB,KAAA,CAAAkB,GAAA,GAAAd,CAAA,GAAAc,GAAA,EAAAd,CAAA,MAAAe,IAAA,CAAAf,CAAA,IAAAa,GAAA,CAAAb,CAAA,YAAAe,IAAA;AAO9E,IAAMC,KAAkD,GAAG,IAAIC,GAAG,EAAE;AAKpE,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAAC,IAAA,EAGwC;EAAA,IAF7CC,UAAU,GAAAD,IAAA,CAAjBE,KAAK;IACLC,SAAS,GAAAH,IAAA,CAATG,SAAS;EAET,IAAI,CAAC1B,KAAK,CAACC,OAAO,CAACuB,UAAU,CAAC,EAAE;IAC9B,MAAM,IAAIG,KAAK,CAAC,gCAAgC,CAAC;EACnD;EACA,IAAMF,KAAK,GAAG,EAAE;EAChB,SAAAG,SAAA,GAAArC,+BAAA,CAAyBiC,UAAU,GAAAK,KAAA,IAAAA,KAAA,GAAAD,SAAA,IAAAvB,IAAA,GAAE;IAAA,IAA1ByB,UAAU,GAAAD,KAAA,CAAA1C,KAAA;IACnB,IAAI4C,QAAQ,GAAG,KAAK;IACpB,IAAI,UAAU,IAAID,UAAU,EAAE;MAC5B,IAAI,OAAOA,UAAU,CAACC,QAAQ,KAAK,SAAS,EAAE;QAC5C,MAAM,IAAIJ,KAAK,CAAC,kDAAkD,CAAC;MACrE;MACAI,QAAQ,GAAGD,UAAU,CAACC,QAAQ;IAChC;IACAN,KAAK,CAACO,IAAI,CAAC;MACTC,MAAM,EAAEH,UAAU,CAACG,MAAM;MACzBC,IAAI,EAAEJ,UAAU,CAACI,IAAI;MACrBC,UAAU,EAAEL,UAAU,CAACK,UAAU;MACjCC,UAAU,EAAEN,UAAU,CAACM,UAAU;MACjCL,QAAQ,EAARA;IACF,CAAC,CAAC;EACJ;EACA,OAAO;IAACN,KAAK,EAALA,KAAK;IAAEC,SAAS,EAATA;EAAS,CAAC;AAC3B,CAAC;AAEM,SAAStC,WAAWA,CAACqC,KAAY,EAAQ;EAC9CL,KAAK,CAACiB,MAAM,CAACZ,KAAK,CAAC;AACrB;AAEO,SAASpC,WAAWA,CAACoC,KAAY,EAAmC;EACzE,IAAIa,OAAO,GAAGlB,KAAK,CAACmB,GAAG,CAACd,KAAK,CAAC;EAC9B,IAAIa,OAAO,IAAI,IAAI,EAAE;IACnBA,OAAO,GAAG,IAAAE,8BAAqB,EAACf,KAAK,CAAC,CAACgB,IAAI,CAACnB,QAAQ,CAAC;IACrDF,KAAK,CAACsB,GAAG,CAACjB,KAAK,EAAEa,OAAO,CAAC;EAC3B;EAEA,OAAOA,OAAO;AAChB"},"metadata":{},"sourceType":"script","externalDependencies":[]}