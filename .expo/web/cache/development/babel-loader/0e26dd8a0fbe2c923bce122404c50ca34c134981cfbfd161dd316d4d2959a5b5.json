{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.percentSaleProduct = percentSaleProduct;\nexports.prepareProductItem = prepareProductItem;\nexports.calcCost = calcCost;\nexports.checkQuantity = checkQuantity;\nvar _immutable = require(\"immutable\");\nvar _moment = _interopRequireDefault(require(\"moment\"));\nvar _round = _interopRequireDefault(require(\"lodash/round\"));\nvar _currencyFormatter = _interopRequireDefault(require(\"./currency-formatter\"));\nfunction percentSaleProduct(regular_price, sale_price) {\n  if (!regular_price || !sale_price) {\n    return 0;\n  }\n  var floatRegular = parseFloat(regular_price);\n  var floatSale = parseFloat(sale_price);\n  var percent = floatRegular && floatSale ? (0, _round.default)((floatRegular - floatSale) * 100 / floatRegular) : 0;\n  return percent;\n}\nfunction prepareProductItem(item, currency, defaultCurrency) {\n  var days = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 5;\n  var regular_price = currency === defaultCurrency ? item.get('regular_price') : item.getIn(['multi-currency-prices', currency, 'regular_price']);\n  var sale_price = currency === defaultCurrency ? item.get('sale_price') : item.getIn(['multi-currency-prices', currency, 'sale_price']);\n  var priceFormat = {\n    regular_price: parseFloat(regular_price) && parseFloat(regular_price) > 0 ? (0, _currencyFormatter.default)(regular_price, currency) : '',\n    sale_price: parseFloat(sale_price) && parseFloat(sale_price) > 0 ? (0, _currencyFormatter.default)(sale_price, currency) : '',\n    percent_sale: percentSaleProduct(item.get('regular_price'), item.get('sale_price'))\n  };\n  if (item.get('type') === 'variable' || item.get('type') === 'grouped') {\n    var price = currency === defaultCurrency ? item.get('price') : item.getIn(['from-multi-currency-prices', currency, 'price']);\n    priceFormat = {\n      regular_price: parseFloat(price) && parseFloat(price) > 0 ? (0, _currencyFormatter.default)(price, currency) : '',\n      sale_price: '',\n      percent_sale: 0\n    };\n  }\n  var isNew = (0, _moment.default)(item.get('date_created')).add(days + 1, 'day').isAfter((0, _moment.default)());\n  var rating = parseFloat(item.get('average_rating'));\n  return item.set('price_format', (0, _immutable.fromJS)(priceFormat)).set('is_new', isNew).set('average_rating', rating.toFixed(1));\n}\nfunction calcCost(method, order) {\n  return method.settings && method.settings.cost && method.settings.cost.value ? method.settings.cost.value : '0';\n}\nfunction checkQuantity(product, quantity) {\n  var check = false;\n  if (product.manage_stock) {\n    if (product.stock_quantity >= quantity) {\n      check = true;\n    }\n    if (product.backorders === 'yes' || product.backorders === 'notify') {\n      check = true;\n    }\n  } else {\n    if (product.stock_status === 'instock' || product.stock_status === 'onbackorder') {\n      check = true;\n    }\n  }\n  return check;\n}","map":{"version":3,"names":["_immutable","require","_moment","_interopRequireDefault","_round","_currencyFormatter","percentSaleProduct","regular_price","sale_price","floatRegular","parseFloat","floatSale","percent","round","prepareProductItem","item","currency","defaultCurrency","days","arguments","length","undefined","get","getIn","priceFormat","currencyFormatter","percent_sale","price","isNew","moment","add","isAfter","rating","set","fromJS","toFixed","calcCost","method","order","settings","cost","value","checkQuantity","product","quantity","check","manage_stock","stock_quantity","backorders","stock_status"],"sources":["/home/ahmed/Music/softtag/Source Code/src/utils/product.js"],"sourcesContent":["import {fromJS} from 'immutable';\nimport moment from 'moment';\nimport round from 'lodash/round';\nimport currencyFormatter from './currency-formatter';\n\nexport function percentSaleProduct(regular_price, sale_price) {\n  if (!regular_price || !sale_price) {\n    return 0;\n  }\n  const floatRegular = parseFloat(regular_price);\n  const floatSale = parseFloat(sale_price);\n  const percent =\n    floatRegular && floatSale\n      ? round(((floatRegular - floatSale) * 100) / floatRegular)\n      : 0;\n  return percent;\n}\n/**\n * Prepare product item\n * @param item List\n * @param currency string\n * @param defaultCurrency string\n * @returns {*}\n */\nexport function prepareProductItem(item, currency, defaultCurrency, days = 5) {\n  let regular_price =\n    currency === defaultCurrency\n      ? item.get('regular_price')\n      : item.getIn(['multi-currency-prices', currency, 'regular_price']);\n  let sale_price =\n    currency === defaultCurrency\n      ? item.get('sale_price')\n      : item.getIn(['multi-currency-prices', currency, 'sale_price']);\n  let priceFormat = {\n    regular_price:\n      parseFloat(regular_price) && parseFloat(regular_price) > 0\n        ? currencyFormatter(regular_price, currency)\n        : '',\n    sale_price:\n      parseFloat(sale_price) && parseFloat(sale_price) > 0\n        ? currencyFormatter(sale_price, currency)\n        : '',\n    percent_sale: percentSaleProduct(\n      item.get('regular_price'),\n      item.get('sale_price'),\n    ),\n  };\n\n  if (item.get('type') === 'variable' || item.get('type') === 'grouped') {\n    let price =\n      currency === defaultCurrency\n        ? item.get('price')\n        : item.getIn(['from-multi-currency-prices', currency, 'price']);\n    priceFormat = {\n      regular_price:\n        parseFloat(price) && parseFloat(price) > 0\n          ? currencyFormatter(price, currency)\n          : '',\n      sale_price: '',\n      percent_sale: 0,\n    };\n  }\n  const isNew = moment(item.get('date_created'))\n    .add(days + 1, 'day')\n    .isAfter(moment());\n  const rating = parseFloat(item.get('average_rating'));\n  return item\n    .set('price_format', fromJS(priceFormat))\n    .set('is_new', isNew)\n    .set('average_rating', rating.toFixed(1));\n}\n\n/**\n * Calc cost for shipping order\n * @param method\n * @param order\n * @returns {*}\n */\nexport function calcCost(method, order) {\n  // The cost product was complex, we do simple first then update on the future\n  return method.settings && method.settings.cost && method.settings.cost.value\n    ? method.settings.cost.value\n    : '0';\n}\n\n/**\n * Check quantity\n * @param product\n * @param quantity: number item of product in cart\n */\nexport function checkQuantity(product, quantity) {\n  let check = false;\n\n  if (product.manage_stock) {\n    if (product.stock_quantity >= quantity) {\n      check = true;\n    }\n\n    if (product.backorders === 'yes' || product.backorders === 'notify') {\n      check = true;\n    }\n  } else {\n    if (\n      product.stock_status === 'instock' ||\n      product.stock_status === 'onbackorder'\n    ) {\n      check = true;\n    }\n  }\n  return check;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}