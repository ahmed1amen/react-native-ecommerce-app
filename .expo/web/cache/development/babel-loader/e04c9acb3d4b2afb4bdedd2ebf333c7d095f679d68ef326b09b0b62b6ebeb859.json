{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.valueToPosition = valueToPosition;\nexports.positionToValue = positionToValue;\nexports.createArray = createArray;\nvar closest = function closest(array, n) {\n  var minI = 0;\n  var maxI = array.length - 1;\n  if (array[minI] > n) {\n    return minI;\n  } else if (array[maxI] < n) {\n    return maxI;\n  } else if (array[minI] <= n && n <= array[maxI]) {\n    var closestIndex = null;\n    while (closestIndex === null) {\n      var midI = Math.round((minI + maxI) / 2);\n      var midVal = array[midI];\n      if (midVal === n) {\n        closestIndex = midI;\n      } else if (maxI === minI + 1) {\n        var minValue = array[minI];\n        var maxValue = array[maxI];\n        var deltaMin = Math.abs(minValue - n);\n        var deltaMax = Math.abs(maxValue - n);\n        closestIndex = deltaMax <= deltaMin ? maxI : minI;\n      } else if (midVal < n) {\n        minI = midI;\n      } else if (midVal > n) {\n        maxI = midI;\n      } else {\n        closestIndex = -1;\n      }\n    }\n    return closestIndex;\n  }\n  return -1;\n};\nfunction valueToPosition(value, valuesArray, sliderLength) {\n  var index = closest(valuesArray, value);\n  var arrLength = valuesArray.length - 1;\n  var validIndex = index === -1 ? arrLength : index;\n  return sliderLength * validIndex / arrLength;\n}\nfunction positionToValue(position, valuesArray, sliderLength) {\n  var arrLength;\n  var index;\n  if (position < 0 || sliderLength < position) {\n    return null;\n  } else {\n    arrLength = valuesArray.length - 1;\n    index = arrLength * position / sliderLength;\n    return valuesArray[Math.round(index)];\n  }\n}\nfunction createArray(start, end, step) {\n  var i;\n  var length;\n  var direction = start - end > 0 ? -1 : 1;\n  var result = [];\n  if (!step) {\n    return result;\n  } else {\n    length = Math.abs((start - end) / step) + 1;\n    for (i = 0; i < length; i++) {\n      result.push(start + i * Math.abs(step) * direction);\n    }\n    return result;\n  }\n}","map":{"version":3,"names":["closest","array","n","minI","maxI","length","closestIndex","midI","Math","round","midVal","minValue","maxValue","deltaMin","abs","deltaMax","valueToPosition","value","valuesArray","sliderLength","index","arrLength","validIndex","positionToValue","position","createArray","start","end","step","i","direction","result","push"],"sources":["/home/ahmed/Music/softtag/Source Code/src/containers/MultiSlider/converters.js"],"sourcesContent":["// Find closest index for a given value\nconst closest = (array, n) => {\n  let minI = 0;\n  let maxI = array.length - 1;\n\n  if (array[minI] > n) {\n    return minI;\n  } else if (array[maxI] < n) {\n    return maxI;\n  } else if (array[minI] <= n && n <= array[maxI]) {\n    let closestIndex = null;\n\n    while (closestIndex === null) {\n      const midI = Math.round((minI + maxI) / 2);\n      const midVal = array[midI];\n\n      if (midVal === n) {\n        closestIndex = midI;\n      } else if (maxI === minI + 1) {\n        const minValue = array[minI];\n        const maxValue = array[maxI];\n        const deltaMin = Math.abs(minValue - n);\n        const deltaMax = Math.abs(maxValue - n);\n\n        closestIndex = deltaMax <= deltaMin ? maxI : minI;\n      } else if (midVal < n) {\n        minI = midI;\n      } else if (midVal > n) {\n        maxI = midI;\n      } else {\n        closestIndex = -1;\n      }\n    }\n\n    return closestIndex;\n  }\n\n  return -1;\n};\n\nexport function valueToPosition(value, valuesArray, sliderLength) {\n  const index = closest(valuesArray, value);\n\n  const arrLength = valuesArray.length - 1;\n  const validIndex = index === -1 ? arrLength : index;\n\n  return (sliderLength * validIndex) / arrLength;\n}\n\nexport function positionToValue(position, valuesArray, sliderLength) {\n  var arrLength;\n  var index;\n\n  if (position < 0 || sliderLength < position) {\n    return null;\n  } else {\n    arrLength = valuesArray.length - 1;\n    index = (arrLength * position) / sliderLength;\n    return valuesArray[Math.round(index)];\n  }\n}\n\nexport function createArray(start, end, step) {\n  var i;\n  var length;\n  var direction = start - end > 0 ? -1 : 1;\n  var result = [];\n  if (!step) {\n    return result;\n  } else {\n    length = Math.abs((start - end) / step) + 1;\n    for (i = 0; i < length; i++) {\n      result.push(start + i * Math.abs(step) * direction);\n    }\n    return result;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}