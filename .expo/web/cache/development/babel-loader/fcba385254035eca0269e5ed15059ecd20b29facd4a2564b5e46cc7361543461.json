{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = require(\"react\");\nvar _reactNative = require(\"react-native\");\nvar findIndex = function findIndex(_ref, map) {\n  var locationX = _ref.locationX,\n    locationY = _ref.locationY;\n  for (var _i = 0, _Object$entries = Object.entries(map); _i < _Object$entries.length; _i++) {\n    var _ref2 = _Object$entries[_i];\n    var _ref3 = (0, _slicedToArray2.default)(_ref2, 2);\n    var index = _ref3[0];\n    var _ref3$ = _ref3[1];\n    var x = _ref3$.x;\n    var y = _ref3$.y;\n    var xEnd = _ref3$.xEnd;\n    var yEnd = _ref3$.yEnd;\n    if (x < locationX && locationX < xEnd && y < locationY && locationY < yEnd) {\n      return parseInt(index, 10);\n    }\n  }\n  return -1;\n};\nvar useClearByFocusCell = function useClearByFocusCell(options) {\n  var valueRef = (0, _react.useRef)(options);\n  var cellsLayouts = (0, _react.useRef)({});\n  valueRef.current = options;\n  var clearCodeByCoords = function clearCodeByCoords(coords) {\n    var index = findIndex(coords, cellsLayouts.current);\n    if (index !== -1) {\n      var _valueRef$current = valueRef.current,\n        value = _valueRef$current.value,\n        setValue = _valueRef$current.setValue;\n      var text = (value || '').slice(0, index);\n      setValue(text);\n    }\n  };\n  var getCellOnLayoutHandler = function getCellOnLayoutHandler(index) {\n    return function (event) {\n      var _event$nativeEvent$la = event.nativeEvent.layout,\n        width = _event$nativeEvent$la.width,\n        height = _event$nativeEvent$la.height,\n        x = _event$nativeEvent$la.x,\n        y = _event$nativeEvent$la.y;\n      cellsLayouts.current[\"\" + index] = {\n        x: x,\n        xEnd: x + width,\n        y: y,\n        yEnd: y + height\n      };\n    };\n  };\n  var onPress = function onPress(event) {\n    return clearCodeByCoords(event.nativeEvent);\n  };\n  var onClick = function onClick(e) {\n    var offset = e.target.getClientRects()[0];\n    var locationX = e.clientX - offset.left;\n    var locationY = e.clientY - offset.top;\n    clearCodeByCoords({\n      locationX: locationX,\n      locationY: locationY\n    });\n  };\n  return [(0, _react.useMemo)(function () {\n    return _reactNative.Platform.OS === 'web' ? {\n      onClick: onClick\n    } : {\n      onPress: onPress\n    };\n  }, []), getCellOnLayoutHandler];\n};\nvar _default = useClearByFocusCell;\nexports.default = _default;","map":{"version":3,"names":["_react","require","_reactNative","findIndex","_ref","map","locationX","locationY","_i","_Object$entries","Object","entries","length","_ref2","_ref3","_slicedToArray2","default","index","_ref3$","x","y","xEnd","yEnd","parseInt","useClearByFocusCell","options","valueRef","useRef","cellsLayouts","current","clearCodeByCoords","coords","_valueRef$current","value","setValue","text","slice","getCellOnLayoutHandler","event","_event$nativeEvent$la","nativeEvent","layout","width","height","onPress","onClick","e","offset","target","getClientRects","clientX","left","clientY","top","useMemo","Platform","OS","_default","exports"],"sources":["/home/ahmed/Music/softtag/Source Code/node_modules/react-native-confirmation-code-field/esm/useClearByFocusCell.js"],"sourcesContent":["import {useMemo, useRef} from 'react';\nimport {Platform} from 'react-native';\nconst findIndex = ({locationX, locationY}, map) => {\n  for (const [index, {x, y, xEnd, yEnd}] of Object.entries(map)) {\n    if (\n      x < locationX &&\n      locationX < xEnd &&\n      y < locationY &&\n      locationY < yEnd\n    ) {\n      return parseInt(index, 10);\n    }\n  }\n  return -1;\n};\nconst useClearByFocusCell = (options) => {\n  const valueRef = useRef(options);\n  const cellsLayouts = useRef({});\n  valueRef.current = options;\n  const clearCodeByCoords = (coords) => {\n    const index = findIndex(coords, cellsLayouts.current);\n    if (index !== -1) {\n      const {value, setValue} = valueRef.current;\n      const text = (value || '').slice(0, index);\n      setValue(text);\n    }\n  };\n  const getCellOnLayoutHandler = (index) => (event) => {\n    const {width, height, x, y} = event.nativeEvent.layout;\n    cellsLayouts.current[`${index}`] = {\n      x,\n      xEnd: x + width,\n      y,\n      yEnd: y + height,\n    };\n  };\n  const onPress = (event) => clearCodeByCoords(event.nativeEvent);\n  // For support react-native-web\n  const onClick = (e) => {\n    const offset = e.target.getClientRects()[0];\n    const locationX = e.clientX - offset.left;\n    const locationY = e.clientY - offset.top;\n    clearCodeByCoords({locationX, locationY});\n  };\n  return [\n    useMemo(\n      () => (Platform.OS === 'web' ? {onClick} : {onPress}),\n      // eslint-disable-next-line\n      [],\n    ),\n    getCellOnLayoutHandler,\n  ];\n};\nexport default useClearByFocusCell;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}