{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _reactNative = require(\"react-native\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _utils = require(\"./utils\");\nvar _useFocusState3 = _interopRequireDefault(require(\"./useFocusState\"));\nvar _CodeField = _interopRequireDefault(require(\"./CodeField.styles\"));\nvar _excluded = [\"rootStyle\", \"textInputStyle\", \"onBlur\", \"onFocus\", \"value\", \"renderCell\", \"cellCount\", \"RootProps\", \"RootComponent\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar DEFAULT_CELL_COUNT = 4;\nvar CodeField = function CodeField(_ref, ref) {\n  var rootStyle = _ref.rootStyle,\n    textInputStyle = _ref.textInputStyle,\n    onBlur = _ref.onBlur,\n    onFocus = _ref.onFocus,\n    value = _ref.value,\n    renderCell = _ref.renderCell,\n    _ref$cellCount = _ref.cellCount,\n    cellCount = _ref$cellCount === void 0 ? DEFAULT_CELL_COUNT : _ref$cellCount,\n    _ref$RootProps = _ref.RootProps,\n    RootProps = _ref$RootProps === void 0 ? {} : _ref$RootProps,\n    _ref$RootComponent = _ref.RootComponent,\n    RootComponent = _ref$RootComponent === void 0 ? _reactNative.View : _ref$RootComponent,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var _useFocusState = (0, _useFocusState3.default)({\n      onBlur: onBlur,\n      onFocus: onFocus\n    }),\n    _useFocusState2 = (0, _slicedToArray2.default)(_useFocusState, 3),\n    isFocused = _useFocusState2[0],\n    handleOnBlur = _useFocusState2[1],\n    handleOnFocus = _useFocusState2[2];\n  var cells = (0, _utils.getSymbols)(value || '', cellCount).map(function (symbol, index, symbols) {\n    var isFirstEmptySymbol = symbols.indexOf('') === index;\n    return renderCell({\n      index: index,\n      symbol: symbol,\n      isFocused: isFocused && isFirstEmptySymbol\n    });\n  });\n  return React.createElement(RootComponent, (0, _extends2.default)({}, RootProps, {\n    style: (0, _utils.getStyle)(_CodeField.default.root, rootStyle)\n  }), cells, React.createElement(_reactNative.TextInput, (0, _extends2.default)({\n    disableFullscreenUI: true,\n    caretHidden: true,\n    spellCheck: false,\n    autoCorrect: false,\n    blurOnSubmit: false,\n    clearButtonMode: 'never',\n    autoCapitalize: 'characters',\n    underlineColorAndroid: 'transparent',\n    maxLength: cellCount\n  }, rest, {\n    value: value,\n    onBlur: handleOnBlur,\n    onFocus: handleOnFocus,\n    style: (0, _utils.getStyle)(_CodeField.default.textInput, textInputStyle),\n    ref: ref\n  })));\n};\nvar _default = React.forwardRef(CodeField);\nexports.default = _default;","map":{"version":3,"names":["_reactNative","require","React","_interopRequireWildcard","_utils","_useFocusState3","_interopRequireDefault","_CodeField","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","DEFAULT_CELL_COUNT","CodeField","_ref","ref","rootStyle","textInputStyle","onBlur","onFocus","value","renderCell","_ref$cellCount","cellCount","_ref$RootProps","RootProps","_ref$RootComponent","RootComponent","View","rest","_objectWithoutProperties2","_useFocusState","useFocusState","_useFocusState2","_slicedToArray2","isFocused","handleOnBlur","handleOnFocus","cells","getSymbols","map","symbol","index","symbols","isFirstEmptySymbol","indexOf","createElement","_extends2","style","getStyle","styles","root","TextInput","disableFullscreenUI","caretHidden","spellCheck","autoCorrect","blurOnSubmit","clearButtonMode","autoCapitalize","underlineColorAndroid","maxLength","textInput","_default","forwardRef","exports"],"sources":["/home/ahmed/Music/softtag/Source Code/node_modules/react-native-confirmation-code-field/esm/CodeField.js"],"sourcesContent":["import {TextInput, View} from 'react-native';\nimport * as React from 'react';\nimport {getStyle, getSymbols} from './utils';\nimport useFocusState from './useFocusState';\nimport styles from './CodeField.styles';\nconst DEFAULT_CELL_COUNT = 4;\nconst CodeField = (\n  {\n    rootStyle,\n    textInputStyle,\n    onBlur,\n    onFocus,\n    value,\n    renderCell,\n    cellCount = DEFAULT_CELL_COUNT,\n    RootProps = {},\n    RootComponent = View,\n    ...rest\n  },\n  ref,\n) => {\n  const [isFocused, handleOnBlur, handleOnFocus] = useFocusState({\n    onBlur,\n    onFocus,\n  });\n  const cells = getSymbols(value || '', cellCount).map(\n    (symbol, index, symbols) => {\n      const isFirstEmptySymbol = symbols.indexOf('') === index;\n      return renderCell({\n        index,\n        symbol,\n        isFocused: isFocused && isFirstEmptySymbol,\n      });\n    },\n  );\n  return React.createElement(\n    RootComponent,\n    Object.assign({}, RootProps, {style: getStyle(styles.root, rootStyle)}),\n    cells,\n    React.createElement(\n      TextInput,\n      Object.assign(\n        {\n          disableFullscreenUI: true,\n          // Use `caretHidden={false}` when `value={''}` and user can't paste\\copy text because menu doesn't appear\n          // See more: https://github.com/retyui/react-native-confirmation-code-field/issues/140\n          caretHidden: true,\n          spellCheck: false,\n          autoCorrect: false,\n          blurOnSubmit: false,\n          clearButtonMode: 'never',\n          autoCapitalize: 'characters',\n          underlineColorAndroid: 'transparent',\n          maxLength: cellCount,\n        },\n        rest,\n        {\n          value: value,\n          onBlur: handleOnBlur,\n          onFocus: handleOnFocus,\n          style: getStyle(styles.textInput, textInputStyle),\n          ref: ref,\n        },\n      ),\n    ),\n  );\n};\nexport default React.forwardRef(CodeField);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}