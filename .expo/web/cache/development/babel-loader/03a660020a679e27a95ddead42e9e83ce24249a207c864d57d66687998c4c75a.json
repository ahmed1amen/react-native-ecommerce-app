{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = color;\nvar _reactNative = require(\"react-native\");\nvar _base = require(\"../base\");\nvar _AnimatedNode = _interopRequireDefault(require(\"../core/AnimatedNode\"));\nvar procColor = (0, _base.proc)(function (r, g, b, a) {\n  var color = (0, _base.add)((0, _base.multiply)(a, 1 << 24), (0, _base.multiply)((0, _base.round)(r), 1 << 16), (0, _base.multiply)((0, _base.round)(g), 1 << 8), (0, _base.round)(b));\n  if (_reactNative.Platform.OS === 'android') {\n    return (0, _base.cond)((0, _base.lessThan)(color, 1 << 31 >>> 0), color, (0, _base.sub)(color, Math.pow(2, 32)));\n  }\n  return color;\n});\nfunction color(r, g, b) {\n  var a = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n  if (_reactNative.Platform.OS === 'web') {\n    return (0, _base.concat)('rgba(', r, ',', g, ',', b, ',', a, ')');\n  }\n  if (a instanceof _AnimatedNode.default) {\n    a = (0, _base.round)((0, _base.multiply)(a, 255));\n  } else {\n    a = Math.round(a * 255);\n  }\n  return procColor(r, g, b, a);\n}","map":{"version":3,"names":["_reactNative","require","_base","_AnimatedNode","_interopRequireDefault","procColor","proc","r","g","b","a","color","add","multiply","round","Platform","OS","cond","lessThan","sub","Math","pow","arguments","length","undefined","concat","AnimatedNode"],"sources":["/home/ahmed/Music/softtag/Source Code/node_modules/react-native-reanimated/lib/module/derived/color.js"],"sourcesContent":["import { Platform } from 'react-native';\n\nimport { add, cond, concat, lessThan, multiply, round, sub, proc } from '../base';\nimport AnimatedNode from '../core/AnimatedNode';\n\nconst procColor = proc(function(r, g, b, a) {\n  const color = add(\n    multiply(a, 1 << 24),\n    multiply(round(r), 1 << 16),\n    multiply(round(g), 1 << 8),\n    round(b)\n  );\n  \n  if (Platform.OS === 'android') {\n    // on Android color is represented as signed 32 bit int\n    return cond(\n      lessThan(color, (1 << 31) >>> 0),\n      color,\n      sub(color, Math.pow(2, 32))\n    );\n  }\n  return color;\n});\n\nexport default function color(r, g, b, a = 1) {\n  if (Platform.OS === 'web') {\n    // doesn't support bit shifting\n    return concat('rgba(', r, ',', g, ',', b, ',', a, ')');\n  }\n\n  if (a instanceof AnimatedNode) {\n    a = round(multiply(a, 255));\n  } else {\n    a = Math.round(a * 255);\n  }\n\n  return procColor(r, g, b, a);\n}\n"],"mappings":";;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AAEA,IAAAC,KAAA,GAAAD,OAAA;AACA,IAAAE,aAAA,GAAAC,sBAAA,CAAAH,OAAA;AAEA,IAAMI,SAAS,GAAG,IAAAC,UAAI,EAAC,UAASC,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkBC,CAAlB,EAAqB;EAC1C,IAAMC,KAAK,GAAG,IAAAC,SAAG,EACf,IAAAC,cAAQ,EAACH,CAAD,EAAI,KAAK,EAAT,CADO,EAEf,IAAAG,cAAQ,EAAC,IAAAC,WAAK,EAACP,CAAD,CAAN,EAAW,KAAK,EAAhB,CAFO,EAGf,IAAAM,cAAQ,EAAC,IAAAC,WAAK,EAACN,CAAD,CAAN,EAAW,KAAK,CAAhB,CAHO,EAIf,IAAAM,WAAK,EAACL,CAAD,CAJU,CAAjB;EAOA,IAAIM,qBAAQ,CAACC,EAAT,KAAgB,SAApB,EAA+B;IAE7B,OAAO,IAAAC,UAAI,EACT,IAAAC,cAAQ,EAACP,KAAD,EAAS,KAAK,EAAN,KAAc,CAAtB,CADC,EAETA,KAFS,EAGT,IAAAQ,SAAG,EAACR,KAAD,EAAQS,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,EAAZ,CAAR,CAHM,CAAX;EAKD;EACD,OAAOV,KAAP;AACD,CAjBqB,CAAtB;AAmBe,SAASA,KAATA,CAAeJ,CAAf,EAAkBC,CAAlB,EAAqBC,CAArB,EAA+B;EAAA,IAAPC,CAAC,GAAAY,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAA5B;EACb,IAAIP,qBAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;IAEzB,OAAO,IAAAS,YAAM,EAAC,OAAD,EAAUlB,CAAV,EAAa,GAAb,EAAkBC,CAAlB,EAAqB,GAArB,EAA0BC,CAA1B,EAA6B,GAA7B,EAAkCC,CAAlC,EAAqC,GAArC,CAAb;EACD;EAED,IAAIA,CAAC,YAAYgB,qBAAjB,EAA+B;IAC7BhB,CAAC,GAAG,IAAAI,WAAK,EAAC,IAAAD,cAAQ,EAACH,CAAD,EAAI,GAAJ,CAAT,CAAT;EACD,CAFD,MAEO;IACLA,CAAC,GAAGU,IAAI,CAACN,KAAL,CAAWJ,CAAC,GAAG,GAAf,CAAJ;EACD;EAED,OAAOL,SAAS,CAACE,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,CAAhB;AACD"},"metadata":{},"sourceType":"script","externalDependencies":[]}